["```\n    terraform {\n      required_version = \">=1.0\"\n      required_providers {\n        azurerm = {\n          source  = \"hashicorp/azurerm\"\n          version = \"~>3.0\"\n        }\n      }\n    }\n    ```", "```\n    provider \"azurerm\" {\n      features {}\n    }\n    ```", "```\n    resource \"azurerm_resource_group\" \"example\" {\n      name     = \"rg-example-uks\"\n      location = \"UK South\"\n    }\n    ```", "```\n    $ terraform init\n    ```", "```\n    Initializing the backend...\n    Initializing provider plugins...\n    - Finding hashicorp/azurerm versions matching \"~> 3.0\"...\n    - Installing hashicorp/azurerm v3.32.0...\n    - Installed hashicorp/azurerm v3.32.0 (signed by HashiCorp)\n    Terraform has created a lock file .terraform.lock.hcl to record the provider selections it made above. Include this file in your version control repository so that Terraform can guarantee to make the same selections by default when you run \"terraform init\" in the future.\n    Terraform has been successfully initialized!\n    ```", "```\n    $ terraform plan\n    ```", "```\nTerraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\n  + create\nTerraform will perform the following actions:\n  # azurerm_resource_group.example will be created\n  + resource \"azurerm_resource_group\" \"example\" {\n      + id       = (known after apply)\n      + location = \"uksouth\"\n      + name     = \"rg-example-uks\"\n    }\nPlan: 1 to add, 0 to change, 0 to destroy.\n```", "```\n    $ terraform apply\n    ```", "```\nDo you want to perform these actions?\n  Terraform will perform the actions described above.\n  Only 'yes' will be accepted to approve.\n  Enter a value: yes\nazurerm_resource_group.example: Creating...\nazurerm_resource_group.example: Creation complete after 0s [id=/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/rg-example-uks]\n```", "```\n    azurerm_resource_group.example: Refreshing state... [id=/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx /resourceGroups/rg-example-uks]\n    No changes. Your infrastructure matches the configuration.\n    Terraform has compared your real infrastructure against your configuration and found no differences, so no changes are needed.\n    Apply complete! Resources: 0 added, 0 changed, 0 destroyed.\n    ```", "```\n    resource \"azurerm_storage_account\" \"example\" {\n      name                     = \"saiacforbeg2022111534\"\n      resource_group_name      = \"rg-example-uks\"\n      location                 = \"UK South\"\n      account_tier             = \"Standard\"\n      account_replication_type = \"GRS\"\n    }\n    ```", "```\nazurerm_resource_group.example: Refreshing state... [id=/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx /resourceGroups/rg-example-uks]\nTerraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\n  + create\nTerraform will perform the following actions:\n  # azurerm_storage_account.example will be created\n  + resource \"azurerm_storage_account\" \"example\" {\n      + account_kind                      = \"StorageV2\"\n      + account_replication_type          = \"GRS\"\n      + account_tier                      = \"Standard\"\n      + location                          = \"uksouth\"\n      + name                              = \"saiacforbeg2022111534\"\n      + resource_group_name               = \"rg-example-uks\nPlan: 1 to add, 0 to change, 0 to destroy.\nDo you want to perform these actions?\n```", "```\n    azurerm_storage_account.example: Creating...\n    azurerm_storage_account.example: Still creating... [10s elapsed]\n    azurerm_storage_account.example: Still creating... [20s elapsed]\n    azurerm_storage_account.example: Creation complete after 25s [id=/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx /resourceGroups/rg-example-uks/providers/Microsoft.Storage/storageAccounts/saiacforbeg2022111534]\n    ```", "```\n    $ terraform destroy\n    ```", "```\nTerraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\n  - destroy\nTerraform will perform the following actions:\n  # azurerm_resource_group.example will be destroyed\n  - resource \"azurerm_resource_group\" \"example\" {}\n  # azurerm_storage_account.example will be destroyed\n  - resource \"azurerm_storage_account\" \"example\" {}\nPlan: 0 to add, 0 to change, 2 to destroy.\nDo you really want to destroy all resources?\n```", "```\n    azurerm_resource_group.example: Destroying... [id=/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx /resourceGroups/rg-example-uks]\n    azurerm_storage_account.example: Destroying... [id=/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx /resourceGroups/rg-example-uks/providers/Microsoft.Storage/storageAccounts/saiacforbeg2022111534]\n    azurerm_storage_account.example: Destruction complete after 3s\n    azurerm_resource_group.example: Destruction complete after 46s\n    Destroy complete! Resources: 2 destroyed.\n    ```", "```\n    Plan: 2 to add, 0 to change, 0 to destroy.\n    ```", "```\n    │ Error: creating Azure Storage Account \"saiacforbeg2022111534\": storage.AccountsClient#Create: Failure sending request: StatusCode=404 -- Original Error: Code=\"ResourceGroupNotFound\" Message=\"Resource group 'rg-example-uks' could not be found.\"\n    │   with azurerm_storage_account.example,\n    │   on terraform.tf line 21, in resource \"azurerm_storage_account\" \"example\":\n    │   21: resource \"azurerm_storage_account\" \"example\" {\n    ```", "```\nresource \"azurerm_storage_account\" \"example\" {\n  name                     = \"saiacforbeg2022111534\"\n  resource_group_name      = azurerm_resource_group.example.name\n  location                 = azurerm_resource_group.example.location\n  account_tier             = \"Standard\"\n  account_replication_type = \"GRS\"\n}\n```", "```\n$ terraform destroy\n```", "```\n    ---\n    - name: Ansible Infrastructure as Code example\n      hosts: localhost\n      tasks:\n        - name: Create an example resource group\n          azure.azcollection.azure_rm_resourcegroup:\n            name: \"rg-example-uks\"\n            location: \"UK South\"\n        - name: Create an example storage account\n          azure.azcollection.azure_rm_storageaccount:\n            resource_group: \"rg-example-uks\"\n            name: \"saiacforbeg2022111534\"\n            account_type: \"Standard_GRS\"\n    ```", "```\n    $ ansible-playbook playbook.yml\n    ```", "```\n[WARNING]: No inventory was parsed, only implicit localhost is available\n[WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'\nPLAY [Ansible Infrastructure as Code example] ******************************************************\nTASK [Gathering Facts] *****************************************************************************\nok: [localhost]\nTASK [Create an example resource group] ************************************************************\nAn exception occurred during task execution. To see the full traceback, use -vvv. The error was: ModuleNotFoundError: No module named 'msrest'\nfatal: [localhost]: FAILED! => {\"changed\": false, \"msg\": \"Failed to import the required Python library (msrestazure) on Russs-Laptop.local's Python /opt/homebrew/Cellar/ansible/6.6.0/libexec/bin/python3.10\\. Please read the module documentation and install it in the appropriate location. If the required library is installed, but Ansible is using the wrong Python interpreter, please consult the documentation on ansible_python_interpreter\"}\nPLAY RECAP *****************************************************************************************\nlocalhost: ok=1    changed=0    unreachable=0    failed=1     skipped=0    rescued=0    ignored=0\n```", "```\n$ ansible-galaxy collection install azure.azcollection\n$ pip3 install -r ~/.ansible/collections/ansible_collections/azure/azcollection/requirements-azure.txt\n```", "```\n    $ ansible-playbook playbook.yml\n    ```", "```\nPLAY [Ansible Infrastructure as Code example] *************************************************************\nTASK [Gathering Facts] ************************************************************************************\nok: [localhost]\nTASK [Create an example resource group] *******************************************************************\nchanged: [localhost]\nTASK [Create an example storage account] ******************************************************************\nchanged: [localhost]\nPLAY RECAP ************************************************************************************************\nlocalhost: ok=3    changed=2    unreachable=0    failed=0     skipped=0    rescued=0    ignored=0\n```", "```\n    PLAY RECAP ************************************************************************************************\n    localhost: ok=3    changed=0    unreachable=0    failed=0     skipped=0    rescued=0    ignored=0\n    ```", "```\n---\n- name: Ansible Infrastructure as Code example\n  hosts: localhost\n  tasks:\n    - name: Terminate the example resource group\n      azure.azcollection.azure_rm_resourcegroup:\n        name: \"rg-example-uks\"\n        location: \"UK South\"\n        state: absent\n        force_delete_nonempty: true\n```", "```\n$ ansible-playbook destroy.yml\n```"]