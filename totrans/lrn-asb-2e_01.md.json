["```\n#!/bin/sh\nLIST_OF_APPS=\"dstat lsof mailx rsync tree vim-enhanced git whois\"\nyum install -y $LIST_OF_APPS\n```", "```\nclass common::apps {\n  package {\n    [\n      'dstat',\n      'lsof',\n      'mailx',\n      'rsync',\n      'tree',\n      'vim-enhanced',\n      'git',\n      'whois',\n    ]:\n    ensure => installed,\n  }\n}\n```", "```\ncommon.packages:\n  pkg.installed:\n    - pkgs:\n      - dstat\n      - lsof\n      - mailx\n      - rsync\n      - tree\n      - vim-enhanced\n      - git\n      - whois\n```", "```\n- name: \"Install packages we need\"\n  ansible.builtin.yum:\n    name:\n      - \"dstat\"\n      - \"lsof\"\n      - \"mailx\"\n      - \"rsync\"\n      - \"tree\"\n      - \"vim-enhanced\"\n      - \"git\"\n      - \"whois\"\n      - \"iptables-services\"\n    state: \"present\"\n```", "```\n$ /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n```", "```\n$ brew update\n$ brew upgrade\n```", "```\n$ brew doctor\n```", "```\n$ brew search ansible\n```", "```\n$ brew info ansible\n```", "```\n$ brew install ansible\n```", "```\n$ pip --version\n$ pip3 --version\n```", "```\n$ pip install ansible\n```", "```\n$ brew update\n$ brew upgrade\n```", "```\n$ pip install ansible --upgrade\n```", "```\n$ brew uninstall ansible\n```", "```\n$ brew install ansible@2.0\n```", "```\n$ pip install ansible==2.3.1.0\n```", "```\n$ apt install ansible\n```", "```\n$ sudo -H apt-get update\n$ sudo -H apt-get install python3-pip\n```", "```\n$ sudo -H pip install ansible\n```", "```\n$ sudo -H pip install ansible --upgrade\n```", "```\n$ sudo -H pip install ansible==2.3.1.0\n```", "```\n$ dnf install ansible-core\n```", "```\n$ wsl --install\n```", "```\n$ sudo -H apt-get update\n$ sudo -H apt-get install python3-pip\n$ sudo -H pip install ansible\n```", "```\n$ brew install multipass\n```", "```\n$ snap install multipass\n```", "```\n$ multipass launch -n ansiblevm --cloud-init cloud-init.yaml\n```", "```\n$ multipass info ansiblevm\n```", "```\n$ cp -pr hosts-simple.example hosts-simple\n$ cp -pr hosts.example hosts\n```", "```\npaste_your_ip_here.nip.io ansible_user=vmadmin ansible_private_key_file=./example_key\n```", "```\n192.168.64.7.nip.io ansible_user=vmadmin ansible_private_key_file=./example_key\n```", "```\n192.168.64.7.nip.io ansible_user=vmadmin ansible_private_key_file=./example_key\n```", "```\n$ ansible -i hosts-simple 192.168.64.7.nip.io -m ansible.builtin.setup\n```", "```\n$ ansible -i hosts-simple 192.168.64.7.nip.io -m ansible.builtin.setup\n```", "```\n$ ansible --inventory=hosts-simple simple 192.168.64.7.nip.io --module-name=ansible.builtin.setup\n```", "```\nansiblevm ansible_host=192.168.64.7.nip.io\n[ansible_hosts]\nansiblevm\n[ansible_hosts:vars]\nansible_connection=ssh\nansible_user=vmadmin\nansible_private_key_file=./example_key\nhost_key_checking=False\n```", "```\n$ ansible -i hosts ansiblevm -m ansible.builtin.setup\n```", "```\n$ ansible -i hosts ansible_hosts -m ansible.builtin.setup\n```", "```\n---\n- name: \"A simple playbook\"\n  hosts: ansible_hosts\n  gather_facts: true\n  become: true\n  become_method: \"ansible.builtin.sudo\"\n  tasks:\n    - name: \"Output some information on our host\"\n      ansible.builtin.debug:\n        msg: \"I am connecting to {{ ansible_nodename }} which is running {{ ansible_distribution }} {{ ansible_distribution_version }}\"\n```", "```\n$ ansible-playbook -i hosts playbook01.yml\n```", "```\n---\n```", "```\n- name: \"A simple playbook\"\n  hosts: ansible_hosts\n  gather_facts: true\n  become: true\n  become_method: \"ansible.builtin.sudo\"\n```", "```\n    - name: \"Output some information on our host\"\n      ansible.builtin.debug:\n        msg: \"I am connecting to {{ ansible_nodename }} which is running {{ ansible_distribution }} {{ ansible_distribution_version }}\"\n```", "```\n---\n- name: \"Update all packages\"\n  hosts: \"ansible_hosts\"\n  gather_facts: true\n  become: true\n  become_method: \"ansible.builtin.sudo\"\n  tasks:\n    - name: \"Output some information on our host\"\n      ansible.builtin.debug:\n        msg: \"I am connecting to {{ ansible_nodename }} which is running {{ ansible_distribution }} {{ ansible_distribution_version }}\"\n    - name: \"Update all packages to the latest version\"\n      ansible.builtin.apt:\n        name: \"*\"\n        state: \"latest\"\n        update_cache: true\n```", "```\n$ ansible-playbook -i hosts playbook02.yml\n```", "```\n  vars:\n    ntp_servers:\n      - \"0.uk.pool.ntp.org\"\n      - \"1.uk.pool.ntp.org\"\n      - \"2.uk.pool.ntp.org\"\n      - \"3.uk.pool.ntp.org\"\n```", "```\n  vars:\n    ntp_servers: [ \"0.uk.pool.ntp.org\", \"1\\. uk.pool.ntp.org\", \"2\\. uk.pool.ntp.org\", \"3\\. uk.pool.ntp.org\" ]\n```", "```\n  handlers:\n    - name: \"Restart ntp\"\n      ansible.builtin.service:\n        name: \"ntp\"\n        state: \"restarted\"\n```", "```\n    - name: \"Install packages\"\n      ansible.builtin.apt:\n        state: \"present\"\n        pkg:\n          - \"ntp\"\n          - \"sntp\"\n          - \"ntp-doc\"\n```", "```\n    - name: \"Configure NTP\"\n      ansible.builtin.template:\n        src: \"./ntp.conf.j2\"\n        dest: \"/etc/ntp.conf\"\n        mode: \"0644\"\n      notify: \"Restart ntp\"\n```", "```\n# {{ ansible_managed }}\ndriftfile /var/lib/ntp/drift\nrestrict default nomodify notrap nopeer noquery\nrestrict 127.0.0.1\nrestrict ::1\n{% for item in ntp_servers %}\nserver {{ item }} iburst\n{% endfor %}\nincludefile /etc/ntp/crypto/pw\nkeys /etc/ntp/keys\ndisable monitor\n```", "```\n# {{ ansible_managed }}\n```", "```\n{% for item in ntp_servers %}\nserver {{ item }} iburst\n{% endfor %}\n```", "```\n$ ansible-playbook -i hosts playbook03.yml\n```", "```\n$ multipass launch -n ansiblevm2 --cloud-init cloud-init.yaml\n```", "```\n$ multipass info ansiblevm2\n```", "```\nansiblevm2 ansible_host=192.168.64.8.nip.io\n```", "```\n[ansible_hosts]\nansiblevm\nansiblevm2\n```", "```\n$ ansible-playbook -i hosts playbook03.yml\n```", "```\n$ multipass delete --purge ansiblevm ansiblevm2\n```"]