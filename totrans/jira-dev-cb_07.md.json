["```\n    IssueService issueService = ComponentManager.getInstance().getIssueService();\n    ```", "```\n        IssueInputParameters issueInputParameters = new IssueInputParametersImpl();\n        ```", "```\n        issueInputParameters.setProjectId(10100L).setIssueTypeId(\"8\").setSummary(\"Test Summary\").setReporterId(\"jobinkk\").setAssigneeId(\"jobinkk\").setDescription(\"Test Description\").setStatusId(\"10010\").setPriorityId(\"2\").setFixVersionIds(10000L, 12121L);\n        ```", "```\n    CreateValidationResult createValidationResult = issueService.validateCreate(user, issueInputParameters);\n    ```", "```\n    if (createValidationResult.isValid()) {\n      IssueResult createResult = issueService.create(user,createValidationResult);\n    }\n    ```", "```\n    if (!createValidationResult.isValid()) {\n      Collection<String> errorMessages = createValidationResult.getErrorCollection().getErrorMessages();\n      for (String errorMessage : errorMessages) {\n        System.out.println(errorMessage);\n      }\n      Map<String, String> errors = createValidationResult.getErrorCollection().getErrors();\n      Set<String> errorKeys = errors.keySet();\n      for (String errorKey : errorKeys) {\n        System.out.println(errors.get(errorKey));\n      }\n    }\n    ```", "```\n    if (!createResult.isValid()) {\n      Collection<String> errorMessages = createResult.getErrorCollection().getErrorMessages();\n      for (String errorMessage : errorMessages) {\n        System.out.println(errorMessage);\n      }\n    }\n    ```", "```\n    MutableIssue issue = createResult.getIssue();\n    ```", "```\n    MutableIssue issue = ComponentManager.getInstance().getIssueFactory().getIssue();\n    ```", "```\n    issue.setProjectId(10100L);\n    issue.setIssueTypeId(\"8\");\n    issue.setAssigneeId(\"jobinkk\");\n    ```", "```\n    GenericValue createdIssue = ComponentManager.getInstance().getIssueManager().createIssue(user, issue);\n    ```", "```\n    CreateValidationResult createValidationResult = issueService.validateSubTaskCreate(user, parent.getId(), issueInputParameters);\n    ```", "```\n    if (createValidationResult.isValid()) {\n      IssueResult createResult = issueService.create(user, createValidationResult);\n    }\n    ```", "```\n        SubTaskManager subTaskManager = ComponentManager.getInstance().getSubTaskManager();\n        ```", "```\n        subTaskManager.createSubTaskIssueLink(parent, createResult.getIssue(), user);\n        ```", "```\n    IssueInputParameters issueInputParameters = new IssueInputParametersImpl();issueInputParameters.setSummary(\"Modified Summary\");\n    ```", "```\n    issueInputParameters.setRetainExistingValuesWhenParameterNotProvided(false);\n    ```", "```\n    UpdateValidationResult updateValidationResult = issueService.validateUpdate(user, issue.getId(), issueInputParameters);\n    ```", "```\n    if (updateValidationResult.isValid()) {\n        IssueResult updateResult = issueService.update(user, updateValidationResult);\n    }\n    ```", "```\n    MutableIssue updatedIssue = updateResult.getIssue();\n    ```", "```\n    DeleteValidationResult deleteValidationResult = issueService.validateDelete(user, issue.getId());\n    ```", "```\n    ErrorCollection deleteErrors = issueService.delete(user, deleteValidationResult);\n    ```", "```\n    if (deleteErrors.hasAnyErrors()){\n      Collection<String> errorMessages = deleteErrors.getErrorMessages();\n      for (String errorMessage : errorMessages) {\n        System.out.println(errorMessage);\n      }\n    } else {\n      System.out.println(\"Deleted Succesfully!\");\n    }\n    ```", "```\n    <web-item key=\"manage-project\" name=\"Manage Project\" section=\"operations-operations\" weight=\"100\">\n      <label>Manage Project</label>\n      <tooltip>Manages the Project  in which the issue belongs </tooltip>\n      <link linkId=\"manage-project-link\">\n        /secure/project/ViewProject.jspa?pid=${issue.project.id}\n      </link>\n    </web-item>\n    ```", "```\n    public class AdminCondition extends AbstractIssueCondition {\n      private final PermissionManager permissionManager;\n\n      public AdminCondition(PermissionManager permissionManager) {\n        this.permissionManager = permissionManager;\n      }\n\n      @Override\n      public boolean shouldDisplay(User user, Issue issue, JiraHelper jiraHelper) {\n            return this.permissionManager.hasPermission(Permissions.PROJECT_ADMIN, issue.getProjectObject(), user);\n      }\n    }\n    ```", "```\n    <web-item key=\"manage-project\" name=\"Manage Project\" section=\"operations-operations\" weight=\"100\">\n      <label>Manage Project</label>\n      <tooltip>Manages the Project  in which the issue belongs </tooltip>\n      <link linkId=\"manage-project-link\">\n        /secure/project/ViewProject.jspa?pid=${issue.project.id}\n      </link>\n      <condition class=\"com.jtricks.conditions.AdminCondition\"/>\n    </web-item>\n    ```", "```\n    <condition class=\"com.jtricks.conditions.AdminCondition\" invert=\"true\"/>\n    ```", "```\n    <condition class=\"com.atlassian.jira.plugin.webfragment.conditions.JiraGlobalPermissionCondition\">\n       <param name=\"permission\">sysadmin</param>\n    </condition>\n    ```", "```\n    int permission = Permissions.getType((String) params.get(\"permission\")); \n    // Permissions.SYSTEM_ADMIN in this case\n    ```", "```\n    <conditions type=\"OR\">\n      <condition class=\"com.atlassian.jira.plugin.webfragment.conditions.JiraGlobalPermissionCondition\">\n      <param name=\"permission\">sysadmin</param>\n      </condition>\n      <condition class=\"com.jtricks.conditions.AdminCondition\"/>\n    </conditions>\n    ```", "```\nAttachmentManager attachmentManager = ComponentManager.getInstance().getAttachmentManager();\n```", "```\nChangeItemBean changeBean = attachmentManager.createAttachment(new File(fileName), newFileName, \"text/plain\", user, issue.getGenericValue());\n```", "```\nList<Attachment> attachments = this.attachmentManager.getAttachments(issue);\nfor (Attachment attachment : attachments) {\n  System.out.println(\"Attachment: \"+attachment.getFilename()+\" attached by \"+attachment.getAuthor());\n}\n```", "```\nthis.attachmentManager.deleteAttachment(attachment);\n```", "```\n    JiraServiceContext jiraServiceContext = new JiraServiceContextImpl(user);\n    ```", "```\n    final WorklogInputParametersImpl.Builder builder = WorklogInputParametersImpl.issue(issue).timeSpent(timeSpent).startDate(new Date()).comment(null).groupLevel(null).roleLevelId(null);\n    ```", "```\n    WorklogResult result = this.worklogService.validateCreate(jiraServiceContext, builder.build());\n    ```", "```\n    Worklog worklog = this.worklogService.createAndAutoAdjustRemainingEstimate(jiraServiceContext, result, false);\n    ```", "```\nJiraServiceContext jiraServiceContext = new JiraServiceContextImpl(user);\nfinal WorklogInputParametersImpl.Builder builder = WorklogInputParametersImpl.issue(issue).timeSpent(timeSpent).startDate(new Date()).comment(null).groupLevel(null).roleLevelId(null);\nWorklogResult result = this.worklogService.validateCreate(jiraServiceContext, builder.build());\nWorklog worklog = this.worklogService.createAndRetainRemainingEstimate(jiraServiceContext, result, false);\n```", "```\n    JiraServiceContext jiraServiceContext = new JiraServiceContextImpl(user);\n    ```", "```\n    final WorklogInputParametersImpl.Builder builder = WorklogInputParametersImpl.issue(issue).timeSpent(timeSpent)      .startDate(new Date()).comment(null).groupLevel(null).roleLevelId(null);\n    ```", "```\n    final WorklogNewEstimateInputParameters params = builder.newEstimate(newEstimate).buildNewEstimate();\n    ```", "```\n    WorklogResult result = this.worklogService.validateUpdateWithNewEstimate(jiraServiceContext, params);\n    ```", "```\n    Worklog worklog = this.worklogService.createWithNewRemainingEstimate(jiraServiceContext, (WorklogNewEstimateResult) result, false);\n    ```", "```\nJiraServiceContext jiraServiceContext = new JiraServiceContextImpl(user);\nfinal WorklogInputParametersImpl.Builder builder = WorklogInputParametersImpl.issue(issue).timeSpent(timeSpent).startDate(new Date()).comment(null).groupLevel(null).roleLevelId(null);\nfinal WorklogAdjustmentAmountInputParameters params = builder.adjustmentAmount(estimateToReduce).buildAdjustmentAmount();\nWorklogResult result = worklogService.validateCreateWithManuallyAdjustedEstimate(jiraServiceContext, params);\nWorklog worklog = this.worklogService.createWithManuallyAdjustedEstimate(jiraServiceContext, (WorklogAdjustmentAmountResult) result, false);\n```", "```\nJiraServiceContext jiraServiceContext = new JiraServiceContextImpl(user);\nfinal WorklogInputParametersImpl.Builder builder = WorklogInputParametersImpl.worklogId(worklog.getId()).timeSpent(timeSpent).startDate(new Date()).comment(null).groupLevel(null).roleLevelId(null);\nWorklogResult result = this.worklogService.validateUpdate(jiraServiceContext, builder.build());\nWorklog updatedLog = this.worklogService.updateAndAutoAdjustRemainingEstimate(jiraServiceContext, result, false);\n```", "```\nJiraServiceContext jiraServiceContext = new JiraServiceContextImpl(user);\nfinal WorklogInputParametersImpl.Builder builder = WorklogInputParametersImpl.worklogId(worklog.getId()).timeSpent(timeSpent).startDate(new Date()).comment(null).groupLevel(null).roleLevelId(null);\nfinal WorklogNewEstimateInputParameters params = builder.newEstimate(newEstimate).buildNewEstimate();\nWorklogResult result = this.worklogService.validateUpdateWithNewEstimate(jiraServiceContext, params);\nWorklog updatedLog = this.worklogService.updateWithNewRemainingEstimate(jiraServiceContext, (WorklogNewEstimateResult) result, false);\n```", "```\nJiraServiceContext jiraServiceContext = new JiraServiceContextImpl(user);\nWorklogResult worklogResult = worklogService.validateDelete(jiraServiceContext, worklog.getId());\nworklogService.deleteAndAutoAdjustRemainingEstimate(jiraServiceContext, worklogResult, false);\n```", "```\nJiraServiceContext jiraServiceContext = new JiraServiceContextImpl(user);\nWorklogResult worklogResult = worklogService.validateDelete(jiraServiceContext, worklog.getId());\nworklogService.deleteAndRetainRemainingEstimate(jiraServiceContext, worklogResult, false);\n```", "```\nJiraServiceContext jiraServiceContext = new JiraServiceContextImpl(user);\nWorklogResult worklogResult = worklogService.validateDeleteWithNewEstimate(jiraServiceContext, worklog.getId(), newEstimate);\nworklogService.deleteWithNewRemainingEstimate(jiraServiceContext, (WorklogNewEstimateResult) worklogResult, false);Deleting a worklog and adjusting the remaining estimate\n```", "```\nJiraServiceContext jiraServiceContext = new JiraServiceContextImpl(user);\nWorklogResult worklogResult = worklogService.validateDeleteWithManuallyAdjustedEstimate(jiraServiceContext, worklog.getId(), adjustmentAmount);\nworklogService.deleteWithManuallyAdjustedEstimate(jiraServiceContext, (WorklogAdjustmentAmountResult) worklogResult, false);\n```", "```\nComment comment = this.commentService.create(user, issue, commentString, false, new SimpleErrorCollection());\n```", "```\nComment comment = this.commentService.create(user, issue, commentString, group, null, false, new SimpleErrorCollection());\n```", "```\nComment comment = this.commentService.create(user, issue, commentString, null, roleId, false, new SimpleErrorCollection());\n```", "```\n    MutableComment comm = this.commentService.getMutableComment(user, comment.getId(), new SimpleErrorCollection());\n    ```", "```\n    comm.setBody(\"New Comment\");\n    ```", "```\n    this.commentService.update(user, comm, false, new SimpleErrorCollection());\n    ```", "```\nthis.commentService.delete(new JiraServiceContextImpl(user), comment, false);\n```", "```\n    ChangeItemBean changeBean = new ChangeItemBean(ChangeItemBean.STATIC_FIELD, IssueFieldConstants.SUMMARY,  \"Old Summary\", \"New Summary\");\n    ```", "```\n    ChangeItemBean changeBean = new ChangeItemBean(ChangeItemBean.STATIC_FIELD, IssueFieldConstants.STATUS,\"1\", \"Open\", \"3\", \"In Progress\");\n    ```", "```\n    ChangeItemBean changeBean = new ChangeItemBean(ChangeItemBean.CUSTOM_FIELD, \"My Field\",  \"Some Old Value\", \"Some New Value\");\n    ```", "```\n    ChangeItemBean changeBean = new ChangeItemBean(ChangeItemBean.CUSTOM_FIELD, \"Some Heading\", \"Some Old Value\", \"Some New Value\");\n    ```", "```\n    IssueChangeHolder changeHolder = new DefaultIssueChangeHolder();\n    changeHolder.addChangeItem(changeBean);\n    ```", "```\n    GenericValue changeLog = ChangeLogUtils.createChangeGroup(user, issue, issue, changeHolder.getChangeItems(),  false);\n    ```", "```\n    IssueLinkTypeManager issueLinkTypeManager = ComponentManager.getInstance().getComponentInstanceOfType(IssueLinkTypeManager.class);\n    IssueLinkType linkType = issueLinkTypeManager.getIssueLinkTypesByName(\"Duplicate\").iterator().next();\n    ```", "```\n    IssueLinkManager issueLinkManager = ComponentManager.getInstance().getIssueLinkManager();\n    issueLinkManager.createIssueLink(sourceIssue.getId(), destIssue.getId(), linkType.getId(), null, user);\n    ```", "```\n    IssueLinkTypeManager issueLinkTypeManager = ComponentManager.getInstance().getComponentInstanceOfType(IssueLinkTypeManager.class);\n    IssueLinkType linkType = issueLinkTypeManager.getIssueLinkTypesByName(\"Duplicate\").iterator().next();\n    ```", "```\n    IssueLink issueLink = issueLinkManager.getIssueLink(sourceIssue.getId(), destIssue.getId(), linkType.getId());\n    ```", "```\n    issueLinkManager.removeIssueLink(issueLink, user);\n    ```", "```\nList<IssueLink> links = issueLinkManager.getInwardLinks(issue.getId());\nfor (IssueLink issueLink : links) {\n  System.out.println(issueLink.getIssueLinkType().getName()+\": Linked from \"+issueLink.getSourceObject().getKey());\n}\n```", "```\nlinks = issueLinkManager.getOutwardLinks(issue.getId());\nfor (IssueLink issueLink : links) {\n  System.out.println(issueLink.getIssueLinkType().getName()+\": Linked to \"+issueLink.getDestinationObject().getKey());\n}\n```", "```\nLinkCollection links = this.issueLinkManager.getLinkCollection(issue, user);\nCollection<Issue> linkedIssues = links.getAllIssues();\n```", "```\n    <webwork1 key=\"jtricks-link-issue-details\" name=\"JTricks Link Issue Details\" > \n      <actions>\n        <action name=\"com.jtricks.JTricksLinkExistingIssue\" alias=\"LinkExistingIssue\">\n        <view name=\"error\">/secure/views/issue/linkexistingissue.jsp</view> \n        <view name=\"input\">/secure/views/issue/linkexistingissue.jsp</view>\n        </action>\n      </actions>\n    </webwork1>\n    ```", "```\n    public class JTricksLinkExistingIssue extends LinkExistingIssue {\n      ...\n    }\n    ```", "```\n    @Override\n    protected void doValidation() {\n      super.doValidation();\n      // Custom Validation\n    }\n    ```", "```\n    List<String> invalidIssues = new ArrayList<String>();\n    for (String key : getLinkKey()) {\n      MutableIssue issue = this.issueManager.getIssueObject(key);\n      if (issue.getIssueTypeObject().getName().equals(\"New Feature\")) {\n        invalidIssues.add(key);\n      }\n    }\n    if (!invalidIssues.isEmpty()) {\n      addErrorMessage(\"Linking not allowed to New Features:\" + getString(invalidIssues));\n    }\n\n    private String getString(List<String> invalidIssues) {\n      StringBuffer invalidIssue = new StringBuffer(\"{ \");\n      for (String key : invalidIssues) {\n        invalidIssue.append(key + \" \");\n      }\n      invalidIssue.append(\"}\");\n      return invalidIssue.toString();\n    }\n    ```", "```\n    <webwork1 key=\"jtricks-link-issue-details\" name=\"JTricks Link Issue Details\" >\t\n      <actions>\n        <action name=\"com.jtricks.JTricksCloneIssueDetails\" alias=\"CloneIssueDetails\">\n          <view name=\"input\">/secure/views/cloneissue-start.jsp</view>\n          <view name=\"error\">/secure/views/cloneissue-start.jsp</view>\n        </action>\n      </actions>\n    </webwork1>\n    ```", "```\n    public class JTricksCloneIssueDetails extends CloneIssueDetails{\n      ...\n    }\n    ```", "```\n    @Override\n    protected void setFields() throws FieldLayoutStorageException {\n      super.setFields();\n      // Set null values for interested fields here\t\n    }\n    ```", "```\n    CustomField customField = customFieldManager.getCustomFieldObjectByName(\"Test Number\");\n    getIssueObject().setCustomFieldValue(customField, null);\n    ```", "```\n    getIssueObject().setFixVersions(null);\n    ```", "```\n        <script type=\"text/javascript\">\n        (function($){\n          $(document).ready(function(){\n            var priority = document.getElementById('priority');\n            hideOrShow(priority.value);\n            priority.onchange=function() {\n              hideOrShow(priority.value);\n            };\n          });\n\n          function hideOrShow(priorityVal){\n            if (priorityVal == '2'){\n              AJS.$(\"#customfield_10170\").closest('div.field-group').show();\n            } else {\n              AJS.$(\"#customfield_10170\").closest('div.field-group').hide();\n            }\n          }\n        })(AJS.$);\n        </script>\n        ```", "```\n        (function($){\n        $(document).ready(function(){\n            ...\n          });\n        })(AJS.$);\n\n        ```", "```\n        (AJS.$(\"#customfield_10170\").closest('div.field-group').show();\n        ```"]