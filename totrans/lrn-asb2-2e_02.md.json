["```\nname: 'This is the name' \n\n```", "```\n- 'item1' \n- 'item2' \n- 'item3' \n\n```", "```\nitem: \n  name: TheName \n  location: TheLocation \n\n```", "```\npeople: \n  - name: Albert \n    number: +1000000000 \n    country: USA \n  - name: David \n    number: +44000000000 \n    country: UK \n\n```", "```\n$ ansible all -i HOST, -m ping\n\n```", "```\n$ ansible all -i test01.fale.io, -m ping\n\n```", "```\ntest01.fale.io | SUCCESS => {\n \"changed\": false,\n \"ping\": \"pong\"\n}\n\n```", "```\n$ ansible --help\n\n```", "```\nUsage: ansible <host-pattern> [options]\nOptions:\n -i INVENTORY, --inventory-file=INVENTORY\n specify inventory host path\n (default=/etc/ansible/hosts) or comma\n separated host list.\n -m MODULE_NAME, --module-name=MODULE_NAME\n module name to execute (default=command)\n\n```", "```\n$ ansible all -i test01.fale.io, -m shell -a '/bin/echo hello ansible!'\n\n```", "```\ntest01.fale.io | SUCCESS | rc=0 >>\nhello ansible!\n\n```", "```\nUsage: ansible <host-pattern> [options]\nOptions:\n -a MODULE_ARGS, --args=MODULE_ARGS\n module arguments\n\n```", "```\n--- \n- hosts: all \n  remote_user: fale \n  tasks: \n  - name: Ensure the HTTPd package is installed \n    yum: \n      name: httpd \n      state: present \n      become: True \n  - name: Ensure the HTTPd service is enabled and running \n    service: \n      name: httpd \n      state: started \n      enabled: True \n    become: True \n\n```", "```\n$ ansible-playbook -i HOST, setup_apache.yaml\n\n```", "```\n$ ansible-playbook -i test01.fale.io, setup_apache.yaml\n\n```", "```\nPLAY [all] *******************************************************\nTASK [setup] *****************************************************\nok: [test01.fale.io] \nTASK [Ensure the HTTPd package is installed] *********************\nchanged: [test01.fale.io] \nTASK [Ensure the HTTPd service is enabled and running] ***********\nchanged: [test01.fale.io] \nPLAY RECAP *******************************************************\ntest01.fale.io    : ok=3    changed=2    unreachable=0    failed=0 \n\n```", "```\n$ rpm -qa | grep httpd\n\n```", "```\nhttpd-tools-2.4.6-40.el7.centos.x86_64\nhttpd-2.4.6-40.el7.centos.x86_64\n\n```", "```\n$ systemctl status httpd\n\n```", "```\nhttpd.service - The Apache HTTP Server\n Loaded: loaded (/usr/lib/systemd/system/httpd.service; enabled; vendor preset: disabled)\n Active: active (running) since Sat 2016-05-07 13:22:14 EDT; 7min ago\n Docs: man:httpd(8)\n man:apachectl(8)\n Main PID: 2214 (httpd)\n Status: \"Total requests: 0; Current requests/sec: 0; Current traffic:   0 B/sec\"\n CGroup: /system.slice/httpd.service\n -2214 /usr/sbin/httpd -DFOREGROUND\n -2215 /usr/sbin/httpd -DFOREGROUND\n -2216 /usr/sbin/httpd -DFOREGROUND\n -2217 /usr/sbin/httpd -DFOREGROUND\n -2218 /usr/sbin/httpd -DFOREGROUND\n -2219 /usr/sbin/httpd -DFOREGROUND\n\n```", "```\nPLAY [all] *******************************************************\n\n```", "```\nTASK [setup] *****************************************************\nok: [test01.fale.io]\n\n```", "```\nTASK [Ensure the HTTPd package is installed] *********************\nchanged: [test01.fale.io]\nTASK [Ensure the HTTPd service is enabled and running] ***********\nchanged: [test01.fale.io]\n\n```", "```\nPLAY RECAP *******************************************************\ntest01.fale.io       : ok=3    changed=2    unreachable=0    failed=0\n\n```", "```\nPLAY [all] *******************************************************\nTASK [setup] *****************************************************\nok: [test01.fale.io]\nTASK [Ensure the HTTPd package is installed] *********************\nok: [test01.fale.io]\nTASK [Ensure the HTTPd service is enabled and running] ***********\nok: [test01.fale.io]\nPLAY RECAP *******************************************************\ntest01.fale.io    : ok=3    changed=0    unreachable=0    failed=0\n\n```", "```\nPLAY RECAP ******************************************************\ntest01.fale.io    : ok=3    changed=2    unreachable=0    failed=0 \n\n```", "```\nPLAY RECAP *******************************************************\ntest01.fale.io    : ok=3    changed=0    unreachable=0    failed=0\n\n```", "```\n--- \n- hosts: all \n  remote_user: fale \n  tasks: \n  - yum: \n      name: httpd \n      state: present \n    become: True \n  - service: \n      name: httpd \n      state: started \n      enabled: True \n    become: True \n\n```", "```\n$ ansible-playbook -i test01.fale.io, setup_apache_no_com.yaml\n\n```", "```\nPLAY [all] *******************************************************\nTASK [setup] *****************************************************\nok: [test01.fale.io] \nTASK [yum] *******************************************************\nok: [test01.fale.io] \nTASK [service] ***************************************************\nok: [test01.fale.io] \nPLAY RECAP *******************************************************\ntest01.fale.io    : ok=3    changed=0    unreachable=0    failed=0 \n\n```", "```\n Using /etc/ansible/ansible.cfg as config file \n\n    PLAYBOOK: setup_apache.yaml ******************************* \n    1 plays in setup_apache.yaml \n\n    PLAY [all] ************************************************ \n\n    TASK [setup] ********************************************** \n    ok: [test01.fale.io] \n\n    TASK [Ensure the HTTPd package is installed] ************** \n    task path: /home/fale/setup_apache.yaml:5 \n    ok: [test01.fale.io] => {\"changed\": false, \"msg\": \"\", \"rc\": 0, \"results\": [\"httpd-2.4.6-40.el7.centos.x86_64 providing httpd is already installed\"]} \n\n    TASK [Ensure the HTTPd service is enabled and running] **** \n    task path: /home/fale/setup_apache.yaml:10 \n    ok: [test01.fale.io] => {\"changed\": false, \"enabled\": true, \"name\": \"httpd\", \"state\": \"started\"} \n\n    PLAY RECAP ************************************************ \n    test01.fale.io   : ok=3  changed=0   unreachable=0  failed=0 \n\n```", "```\nTASK [Ensure the HTTPd package is installed] **************\ntask path: /home/fale/setup_apache.yaml:5\n<test01.fale.io> ESTABLISH SSH CONNECTION FOR USER: fale\n<test01.fale.io> SSH: EXEC ssh -C -q -o ControlMaster=auto -o ControlPersist=60s -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o User=fale -o ConnectTimeout=10 -o ControlPath=/home/fale/.ansible/cp/ansible-ssh-%C test01.fale.io '/bin/sh -c '\"'\"'( umask 22 && mkdir -p \"` echo $HOME/.ansible/tmp/ansible-tmp-1462644055.19-51001413558638 `\" && echo \"` echo $HOME/.ansible/tmp/ansible-tmp-1462644055.19-51001413558638 `\" )'\"'\"''\n<test01.fale.io> PUT /tmp/tmp9JSYiP TO /home/fale/.ansible/tmp/ansible-tmp-1462644055.19-51001413558638/yum\n<test01.fale.io> SSH: EXEC sftp -b - -C -o ControlMaster=auto -o ControlPersist=60s -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o User=fale -o ConnectTimeout=10 -o ControlPath=/home/fale/.ansible/cp/ansible-ssh-%C '[test01.fale.io]'\n<test01.fale.io> ESTABLISH SSH CONNECTION FOR USER: fale\n<test01.fale.io> SSH: EXEC ssh -C -q -o ControlMaster=auto -o ControlPersist=60s -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o User=fale -o ConnectTimeout=10 -o ControlPath=/home/fale/.ansible/cp/ansible-ssh-%C -tt test01.fale.io '/bin/sh -c '\"'\"'sudo -H -S -n -u root /bin/sh -c '\"'\"'\"'\"'\"'\"'\"'\"'echo BECOME-SUCCESS-axnwopicemeccmdhnlmhawtwlysgfgjc; LANG=en_US.utf8 LC_ALL=en_US.utf8 LC_MESSAGES=en_US.utf8 /usr/bin/python -tt /home/fale/.ansible/tmp/ansible-tmp-1462644055.19-51001413558638/yum; rm -rf \"/home/fale/.ansible/tmp/ansible-tmp-1462644055.19-51001413558638/\" > /dev/null 2>&1'\"'\"'\"'\"'\"'\"'\"'\"''\"'\"''\nok: [test01.fale.io] => {\"changed\": false, \"invocation\": {\"module_args\": {\"conf_file\": null, \"disable_gpg_check\": false, \"disablerepo\": null, \"enablerepo\": null, \"exclude\": null, \"install_repoquery\": true, \"list\": null, \"name\": [\"httpd\"], \"state\": \"present\", \"update_cache\": false}, \"module_name\": \"yum\"}, \"msg\": \"\", \"rc\": 0, \"results\": [\"httpd-2.4.6-40.el7.centos.x86_64 providing httpd is already installed\"]}\n\n```", "```\n--- \n- hosts: all \n  remote_user: fale \n  tasks: \n  - name: Set variable 'name' \n    set_fact: \n      name: Test machine \n  - name: Print variable 'name' \n    debug: \n      msg: '{{ name }}' \n\n```", "```\n$ ansible-playbook -i test01.fale.io, variables.yaml\n\n```", "```\nPLAY [all] **********************************************************\nTASK [setup] ********************************************************\nok: [test01.fale.io] \nTASK [Set variable 'name'] ******************************************\nok: [test01.fale.io] \nTASK [Print variable 'name'] ****************************************\nok: [test01.fale.io] => {\n \"msg\": \"Test machine\"\n} \nPLAY RECAP **********************************************************\ntest01.fale.io       : ok=3    changed=0    unreachable=0    failed=0\n\n```", "```\n$ ansible all -i HOST, -m setup\n\n```", "```\n$ ansible all -i test01.fale.io, -m setup\n\n```", "```\ntest01.fale.io | SUCCESS => {\n \"ansible_facts\": {\n \"ansible_all_ipv4_addresses\": [\n \"178.62.36.208\",\n \"10.16.0.7\"\n ],\n \"ansible_all_ipv6_addresses\": [\n \"fe80::601:e2ff:fef1:1301\"\n ],\n \"ansible_architecture\": \"x86_64\",\n \"ansible_bios_date\": \"04/25/2016\",\n \"ansible_bios_version\": \"20160425\",\n \"ansible_cmdline\": {\n \"ro\": true,\n \"root\": \"LABEL=DOROOT\"\n },\n \"ansible_date_time\": {\n \"date\": \"2016-05-14\",\n \"day\": \"14\",\n \"epoch\": \"1463244633\",\n \"hour\": \"12\",\n \"iso8601\": \"2016-05-14T16:50:33Z\",\n \"iso8601_basic\": \"20160514T125033231663\",\n \"iso8601_basic_short\": \"20160514T125033\",\n \"iso8601_micro\": \"2016-05-14T16:50:33.231770Z\",\n \"minute\": \"50\",\n \"month\": \"05\",\n \"second\": \"33\",\n \"time\": \"12:50:33\",\n \"tz\": \"EDT\",\n \"tz_offset\": \"-0400\",\n \"weekday\": \"Saturday\",\n \"weekday_number\": \"6\",\n \"weeknumber\": \"19\",\n \"year\": \"2016\"\n },\n \"ansible_default_ipv4\": {\n \"address\": \"178.62.36.208\",\n \"alias\": \"eth0\",\n \"broadcast\": \"178.62.63.255\",\n \"gateway\": \"178.62.0.1\",\n \"interface\": \"eth0\",\n \"macaddress\": \"04:01:e2:f1:13:01\",\n \"mtu\": 1500,\n \"netmask\": \"255.255.192.0\",\n \"network\": \"178.62.0.0\",\n \"type\": \"ether\"\n },\n \"ansible_default_ipv6\": {},\n \"ansible_devices\": {\n \"vda\": {\n \"holders\": [],\n \"host\": \"\",\n \"model\": null,\n \"partitions\": {\n \"vda1\": {\n \"sectors\": \"41943040\",\n \"sectorsize\": 512,\n \"size\": \"20.00 GB\",\n \"start\": \"2048\"\n }\n },\n \"removable\": \"0\",\n \"rotational\": \"1\",\n \"scheduler_mode\": \"\",\n \"sectors\": \"41947136\",\n \"sectorsize\": \"512\",\n \"size\": \"20.00 GB\",\n \"support_discard\": \"0\",\n \"vendor\": \"0x1af4\"\n }\n },\n \"ansible_distribution\": \"CentOS\",\n \"ansible_distribution_major_version\": \"7\",\n \"ansible_distribution_release\": \"Core\",\n \"ansible_distribution_version\": \"7.2.1511\",\n \"ansible_dns\": {\n \"nameservers\": [\n \"8.8.8.8\",\n \"8.8.4.4\"\n ]\n },\n \"ansible_domain\": \"\",\n \"ansible_env\": {\n \"HOME\": \"/home/fale\",\n \"LANG\": \"en_US.utf8\",\n \"LC_ALL\": \"en_US.utf8\",\n \"LC_MESSAGES\": \"en_US.utf8\",\n \"LESSOPEN\": \"||/usr/bin/lesspipe.sh %s\",\n \"LOGNAME\": \"fale\",\n \"MAIL\": \"/var/mail/fale\",\n \"PATH\": \"/usr/local/bin:/usr/bin\",\n \"PWD\": \"/home/fale\",\n \"SHELL\": \"/bin/bash\",\n \"SHLVL\": \"2\",\n \"SSH_CLIENT\": \"86.187.141.39 37764 22\",\n \"SSH_CONNECTION\": \"86.187.141.39 37764 178.62.36.208 22\",\n \"SSH_TTY\": \"/dev/pts/0\",\n \"TERM\": \"rxvt-unicode-256color\",\n \"USER\": \"fale\",\n \"XDG_RUNTIME_DIR\": \"/run/user/1000\",\n \"XDG_SESSION_ID\": \"180\",\n \"_\": \"/usr/bin/python\"\n },\n \"ansible_eth0\": {\n \"active\": true,\n \"device\": \"eth0\",\n \"ipv4\": {\n \"address\": \"178.62.36.208\",\n \"broadcast\": \"178.62.63.255\",\n \"netmask\": \"255.255.192.0\",\n \"network\": \"178.62.0.0\"\n },\n \"ipv4_secondaries\": [\n {\n \"address\": \"10.16.0.7\",\n \"broadcast\": \"10.16.255.255\",\n \"netmask\": \"255.255.0.0\",\n \"network\": \"10.16.0.0\"\n }\n ],\n \"ipv6\": [\n {\n \"address\": \"fe80::601:e2ff:fef1:1301\",\n \"prefix\": \"64\",\n \"scope\": \"link\"\n }\n ],\n \"macaddress\": \"04:01:e2:f1:13:01\",\n \"module\": \"virtio_net\",\n \"mtu\": 1500,\n \"pciid\": \"virtio0\",\n \"promisc\": false,\n \"type\": \"ether\"\n },\n \"ansible_eth1\": {\n \"active\": false,\n \"device\": \"eth1\",\n \"macaddress\": \"04:01:e2:f1:13:02\",\n \"module\": \"virtio_net\",\n \"mtu\": 1500,\n \"pciid\": \"virtio1\",\n \"promisc\": false,\n \"type\": \"ether\"\n },\n \"ansible_fips\": false,\n \"ansible_form_factor\": \"Other\",\n \"ansible_fqdn\": \"test\",\n \"ansible_hostname\": \"test\",\n \"ansible_interfaces\": [\n \"lo\",\n \"eth1\",\n \"eth0\"\n ],\n \"ansible_kernel\": \"3.10.0-327.10.1.el7.x86_64\",\n \"ansible_lo\": {\n \"active\": true,\n \"device\": \"lo\",\n \"ipv4\": {\n \"address\": \"127.0.0.1\",\n \"broadcast\": \"host\",\n \"netmask\": \"255.0.0.0\",\n \"network\": \"127.0.0.0\"\n },\n \"ipv6\": [\n {\n \"address\": \"::1\",\n \"prefix\": \"128\",\n \"scope\": \"host\"\n }\n ],\n \"mtu\": 65536,\n \"promisc\": false,\n \"type\": \"loopback\"\n },\n \"ansible_machine\": \"x86_64\",\n \"ansible_machine_id\": \"fd8cf26e06e411e4a9d004010897bd01\",\n \"ansible_memfree_mb\": 6,\n \"ansible_memory_mb\": {\n \"nocache\": {\n \"free\": 381,\n \"used\": 108\n },\n \"real\": {\n \"free\": 6,\n \"total\": 489,\n \"used\": 483\n },\n \"swap\": {\n \"cached\": 0,\n \"free\": 0,\n \"total\": 0,\n \"used\": 0\n }\n },\n \"ansible_memtotal_mb\": 489,\n \"ansible_mounts\": [\n {\n \"device\": \"/dev/vda1\",\n \"fstype\": \"ext4\",\n \"mount\": \"/\",\n \"options\": \"rw,relatime,data=ordered\",\n \"size_available\": 18368385024,\n \"size_total\": 21004894208,\n \"uuid\": \"c5845b43-fe98-499a-bf31-4eccae14261b\"\n }\n ],\n \"ansible_nodename\": \"test\",\n \"ansible_os_family\": \"RedHat\",\n \"ansible_pkg_mgr\": \"yum\",\n \"ansible_processor\": [\n \"GenuineIntel\",\n \"Intel(R) Xeon(R) CPU E5-2630L v2 @ 2.40GHz\"\n ],\n \"ansible_processor_cores\": 1,\n \"ansible_processor_count\": 1,\n \"ansible_processor_threads_per_core\": 1,\n \"ansible_processor_vcpus\": 1,\n \"ansible_product_name\": \"Droplet\",\n \"ansible_product_serial\": \"NA\",\n \"ansible_product_uuid\": \"NA\",\n \"ansible_product_version\": \"20160415\",\n \"ansible_python_version\": \"2.7.5\",\n \"ansible_selinux\": {\n \"status\": \"disabled\"\n },\n \"ansible_service_mgr\": \"systemd\",\n \"ansible_ssh_host_key_dsa_public\": \"AAAAB3NzaC1kc3MAAACBAPEf4dzeET6ukHemTASsamoRLxo2R8iHg5J1bYQUyuggtRKlbRrHMtpQ8qN5CQNtp8J+2Hq6/JKiDF+cdxgOehf9b7F4araVvJxqx967RvLNBrMWXv7/4hi+efgXG9eejGoGQNAD66up/fkLMd0L8fwSwmTJoZXwOxFwcbnxCZsFAAAAFQDgK7fka+1AKjYZNFIfCB2b0ZitGQAAAIADeofiC5q+SLgEvkBCUCTyJ+EVb6WHeHbVdrpE2GdnUr03R6MmmYhYZMijruS/rcpzBLmi8juDkqAWy6Xqxd+DwixykntXPeUFS3F7LK5vNwFalaRltPwr4Azh+EeSUQ2Zz2AdKx6zSqtLOD8ZMPkRDvz4WGHGmeR+i7UFsFDZdgAAAIEAy26Tx0jAlY3mEaTW9lQ9DoGXgPBxsSX/XqeLh5wBaBO6AJaIrs0dQJdNeHcMhFy0seVkOMN1SpeoBTJSoTOx15HAGsKsAcmnA5mcJeUZqptVR6JxROztHw3zQePQ3/V3KQzAN31tIm3PbKztlEZbXRUM7RV5WsdRHTb8rutENhY=\",\n \"ansible_ssh_host_key_ecdsa_public\": \"AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPDXQ9rjgDmUKsEWH4U2vg4iqtK+75urlj9nwW+rNNTFHTE5oG82sOlO6o0tUY8LXgB/tJnIcJ1hINdrWrZNpn4=\",\n \"ansible_ssh_host_key_rsa_public\": \"AAAAB3NzaC1yc2EAAAADAQABAAABAQCwQx5EElH7FeD/agB/gCJfBUEVhk44tldzdEzwc2IEbI59relTGNOU7soCCMcSH7nwlEbOOvmLa2R/YaXdHv/cb1aXBC/wj/m4ZHylBeF5qzECUkeaB3+CT+hp8qHHApclFr2lm2CwZ+YXjEyjJ3en4K3gLlIQyQjgE2F57kmD1FVVDSJFvNTn+NQvb3DPppND+HKEeHwrJ0GgznoP62yobEgriAIBSGf//0WHCO/9shEvauoRpPM+U9pU7lv637s7qyubIqyrs5fz3u34qBj8oCATOefRN1wsfJDeMG0D5ryI6BI6t/eAi8BPr7VHJSQBk+buM9Jr1yoMQTEasq2J\",\n \"ansible_swapfree_mb\": 0,\n \"ansible_swaptotal_mb\": 0,\n \"ansible_system\": \"Linux\",\n \"ansible_system_vendor\": \"DigitalOcean\",\n \"ansible_uptime_seconds\": 603067,\n \"ansible_user_dir\": \"/home/fale\",\n \"ansible_user_gecos\": \"\",\n \"ansible_user_gid\": 1000,\n \"ansible_user_id\": \"fale\",\n \"ansible_user_shell\": \"/bin/bash\",\n \"ansible_user_uid\": 1000,\n \"ansible_userspace_architecture\": \"x86_64\",\n \"ansible_userspace_bits\": \"64\",\n \"ansible_virtualization_role\": \"host\",\n \"ansible_virtualization_type\": \"kvm\",\n \"module_setup\": true\n },\n \"changed\": false\n}\n\n```", "```\n--- \n- hosts: all \n  remote_user: fale \n  tasks: \n  - name: Print OS and version \n    debug: \n      msg: '{{ ansible_distribution }} {{ ansible_distribution_version }}' \n\n```", "```\n$ ansible-playbook -itest01.fale.io, setup_variables.yaml\n\n```", "```\nPLAY [all] *******************************************************\nTASK [setup] *****************************************************\nok: [test01.fale.io] \nTASK [Print OS and version] **************************************\nok: [test01.fale.io] => {\n \"msg\": \"CentOS 7.2.1511\" \n} \nPLAY RECAP *******************************************************\ntest01.fale.io     : ok=2   changed=0    unreachable=0    failed=0\n\n```", "```\n-e EXTRA_VARS, --extra-vars=EXTRA_VARS\nset additional variables as key=value or YAML/JSON\n\n```", "```\n--- \n- hosts: all \n  remote_user: fale \n  tasks: \n  - name: Print variable 'name' \n    debug: \n      msg: '{{ name }}' \n\n```", "```\n$ ansible-playbook -i test01.fale.io, cli_variables.yaml -e 'name=test01'\n\n```", "```\nPLAY [all] *******************************************************\nTASK [setup] *****************************************************\nok: [test01.fale.io]\nTASK [Print variable 'name'] *************************************\nok: [test01.fale.io] => {\n \"msg\": \"test01\"\n}\nPLAY RECAP *******************************************************\ntest01.fale.io     : ok=2   changed=0    unreachable=0    failed=0\n\n```", "```\n$ ansible-playbook -i test01.fale.io, cli_variables.yaml\n\n```", "```\nPLAY [all] *******************************************************\nTASK [setup] *****************************************************\nok: [test01.fale.io] \nTASK [Print variable 'name'] *************************************\nfatal: [test01.fale.io]: FAILED! => {\"failed\": true, \"msg\": \"'name' is undefined\"} \nNO MORE HOSTS LEFT ***********************************************\nto retry, use: --limit @cli_variables.retry \nPLAY RECAP *******************************************************\ntest01.fale.io     : ok=1   changed=0    unreachable=0    failed=1\n\n```", "```\n--- \n- hosts: all \n  user: root \n  tasks: \n  - name: Ensure ansible user exists \n    user: \n      name: ansible \n      state: present \n      comment: Ansible \n  - name: Ensure ansible user accepts the SSH key \n    authorized_key: \n      user: ansible \n      key: https://github.com/fale.keys \n   state: present \n  - name: Ensure the ansible user is sudoer with no password required \n    lineinfile: \n      dest: /etc/sudoers \n      state: present \n      regexp: '^ansible ALL\\=' \n      line: 'ansible ALL=(ALL) NOPASSWD:ALL' \n      validate: 'visudo -cf %s' \n\n```", "```\n$ ansible-playbook -i test01.fale.io, firstrun.yaml\n\n```", "```\nPLAY [all] *******************************************************\nTASK [setup] *****************************************************\nok: [test01.fale.io] \nTASK [Ensure ansible user exists] ********************************\nchanged: [test01.fale.io] \nTASK [Ensure ansible user accepts the SSH key] *******************\nchanged: [test01.fale.io] \nTASK [Ensure the anisble user is sudoer with no password required] *\nchanged: [test01.fale.io] \nPLAY RECAP *******************************************************\ntest01.fale.io     : ok=4   changed=3    unreachable=0    failed=0\n\n```", "```\n- name: Ensure EPEL is enabled \n  yum: \n    name: epel-release \n    state: present \n  become: True \n\n```", "```\n- name: Ensure libselinux-python is present \n  yum: \n    name: libselinux-python \n    state: present \n  become: True \n- name: Ensure libsemanage-python is present \n  yum: \n    name: libsemanage-python \n    state: present \n  become: True \n\n```", "```\n- name: Ensure we have last version of every package \n  yum: \n    name: \"*\" \n    state: latest \n  become: True \n\n```", "```\n- name: Ensure NTP is installed \n  yum: \n    name: ntp \n    state: present \n  become: True \n\n```", "```\n- name: Ensure the timezone is set to UTC \n  file: \n    src: /usr/share/zoneinfo/GMT \n    dest: /etc/localtime \n    state: link \n  become: True \n\n```", "```\n- name: Ensure the NTP service is running and enabled \n  service: \n    name: ntpd \n    state: started \n    enabled: True \n  become: True \n\n```", "```\n- name: Ensure FirewallD is installed \n  yum: \n    name: firewalld \n    state: present \n  become: True \n\n```", "```\n- name: Ensure SSH can pass the firewall \n  firewalld: \n    service: ssh \n    state: enabled \n    permanent: True \n    immediate: True \n  become: True \n\n```", "```\n- name: Ensure FirewallD is running \n  service: \n    name: firewalld \n    state: started \n    enabled: True \n  become: True \n\n```", "```\n                This system is managed by Ansible \n  Any change done on this system could be overwritten by Ansible \n\nOS: {{ ansible_distribution }} {{ ansible_distribution_version }} \nHostname: {{ inventory_hostname }} \neth0 address: {{ ansible_eth0.ipv4.address }} \nAll connections are monitored and recorded \n    Disconnect IMMEDIATELY if you are not an authorized user\n\n```", "```\n- name: Ensure the MOTD file is present and updated \n  template: \n    src: motd \n    dest: /etc/motd \n    owner: root \n    group: root \n    mode: 0644 \n  become: True \n\n```", "```\n- name: Ensure the hostname is the same of the inventory \n  hostname: \n    name: \"{{ inventory_hostname }}\" \n  become: True \n\n```", "```\n--- \n- hosts: all \n  remote_user: ansible \n  tasks: \n  - name: Ensure EPEL is enabled \n    yum: \n      name: epel-release \n      state: present \n    become: True \n  - name: Ensure libselinux-python is present \n    yum: \n      name: libselinux-python  \n      state: present \n    become: True \n  - name: Ensure libsemanage-python is present \n    yum: \n      name: libsemanage-python \n      state: present \n    become: True \n  - name: Ensure we have last version of every package \n    yum: \n      name: \"*\" \n      state: latest \n    become: True \n  - name: Ensure NTP is installed \n    yum: \n      name: ntp \n      state: present \n    become: True \n  - name: Ensure the timezone is set to UTC \n    file: \n      src: /usr/share/zoneinfo/GMT \n      dest: /etc/localtime \n      state: link \n    become: True \n  - name: Ensure the NTP service is running and enabled \n    service: \n      name: ntpd \n      state: started \n      enabled: True \n    become: True \n  - name: Ensure FirewallD is installed \n    yum: \n      name: firewalld \n      state: present \n    become: True \n  - name: Ensure FirewallD is running \n    service: \n      name: firewalld \n      state: started \n      enabled: True \n    become: True \n  - name: Ensure SSH can pass the firewall \n    firewalld: \n      service: ssh \n      state: enabled \n      permanent: True \n      immediate: True \n    become: True \n  - name: Ensure the MOTD file is present and updated \n    template: \n      src: motd \n      dest: /etc/motd \n      owner: root \n      group: root \n      mode: 0644 \n    become: True \n  - name: Ensure the hostname is the same of the inventory \n    hostname: \n      name: \"{{ inventory_hostname }}\" \n    become: True  \n\n```", "```\n$ ansible-playbook common_tasks.yaml --list-tasks\n\n```", "```\nplaybook: common_tasks.yaml \n  play #1 (all): all TAGS: [] \n    tasks: \n      Ensure EPEL is enabled TAGS: [] \n      Ensure libselinux-python is present TAGS: [] \n      Ensure libsemanage-python is present TAGS: [] \n      Ensure we have last version of every package TAGS: [] \n      Ensure NTP is installed TAGS: [] \n      Ensure the timezone is set to UTC TAGS: [] \n      Ensure the NTP service is running and enabled TAGS: [] \n      Ensure FirewallD is installed TAGS: [] \n      Ensure FirewallD is running TAGS: [] \n      Ensure SSH can pass the firewall TAGS: [] \n      Ensure the MOTD file is present and updated TAGS: [] \n      Ensure the hostname is the same of the inventory TAGS: [] \n\n```", "```\n$ ansible-playbook -itest01.fale.io, common_tasks.yaml\n\n```", "```\nPLAY [all] ******************************************************* \n\nTASK [setup] ***************************************************** \nok: [test01.fale.io] \n\nTASK [Ensure EPEL is enabled] ************************************ \nchanged: [test01.fale.io] \n\nTASK [Ensure libselinux-python is present] *********************** \nok: [test01.fale.io] \n\nTASK [Esure libsemanage-python is present] *********************** \nok: [test01.fale.io] \n\nTASK [Ensure we have last version of every package] ************** \nchanged: [test01.fale.io] \n\nTASK [Ensure NTP is installed] *********************************** \nok: [test01.fale.io] \n\nTASK [Ensure the timezone is set to UTC] ************************* \nchanged: [test01.fale.io] \n\nTASK [Ensure the NTP service is running and enabled] ************* \nchanged: [test01.fale.io] \n\nTASK [Ensure FirewallD is installed] ***************************** \nok: [test01.fale.io] \n\nTASK [Ensure FirewallD is running] ******************************* \nchanged: [test01.fale.io] \n\nTASK [Ensure SSH can pass the firewall] ************************** \nok: [test01.fale.io] \n\nTASK [Ensure the MOTD file is present and updated] *************** \nchanged: [test01.fale.io] \n\nTASK [Ensure the hostname is the same of the inventory] ********** \nchanged: [test01.fale.io] \n\nPLAY RECAP ******************************************************* \ntest01.fale.io     : ok=9   changed=7    unreachable=0    failed=0\n\n```", "```\n--- \n- hosts: all \n  remote_user: ansible \n  tasks: \n  - name: Ensure the HTTPd package is installed \n    yum: \n      name: httpd \n      state: present \n    become: True \n  - name: Ensure the HTTPd service is enabled and running \n    service: \n      name: httpd \n      state: started \n      enabled: True \n    become: True \n  - name: Ensure HTTP can pass the firewall \n    firewalld: \n      service: http \n      state: enabled \n      permanent: True \n      immediate: True \n    become: True \n  - name: Ensure HTTPS can pass the firewall \n    firewalld: \n      service: https \n      state: enabled \n      permanent: True \n      immediate: True \n    become: True   \n\n```", "```\n$ ansible-playbook -i test01.fale.io, webserver.yaml\n\n```", "```\nPLAY [all] *******************************************************\nTASK [setup] *****************************************************\nok: [test01.fale.io] \nTASK [Ensure the HTTPd package is installed] *********************\nchanged: [test01.fale.io] \nTASK [Ensure the HTTPd service is enabled and running] ***********\nchanged: [test01.fale.io] \nTASK [Ensure HTTP can pass the firewall] *************************\nchanged: [test01.fale.io] \nTASK [Ensure HTTPS can pass the firewall] ************************\nchanged: [test01.fale.io] \nPLAY RECAP *******************************************************\ntest01.fale.io    : ok=5    changed=4    unreachable=0    failed=0\n\n```", "```\n--- \n- hosts: all \n  remote_user: ansible \n  tasks: \n  - name: Ensure the website is present and updated \n    template: \n      src: index.html.j2 \n      dest: /var/www/html/index.html \n      owner: root \n      group: root \n      mode: 0644 \n    become: True \n\n```", "```\n<html> \n    <body> \n        <h1>Hello World!</h1> \n    </body> \n</html> \n\n```", "```\n$ ansible-playbook -i test01.fale.io, deploy_website.yaml\n\n```", "```\nPLAY [all] *******************************************************\nTASK [setup] *****************************************************\nok: [test01.fale.io] \nTASK [Ensure the website is present and updated] *****************\nchanged: [test01.fale.io] \nPLAY RECAP *******************************************************\ntest01.fale.io    : ok=2    changed=1    unreachable=0    failed=0\n\n```", "```\n<html> \n    <body> \n        <h1>Hello World!</h1> \n        <p>This page was created on {{ ansible_date_time.date }}.</p> \n    </body> \n</html> \n\n```", "```\n<html> \n    <body> \n        <h1>Hello World!</h1> \n        <p>This page was created on {{ ansible_date_time.date }}.</p> \n{% if ansible_eth0.active == True %} \n        <p>eth0 address {{ ansible_eth0.ipv4.address }}.</p> \n{% endif %} \n    </body> \n</html> \n\n```", "```\n<html> \n    <body> \n        <h1>Hello World!</h1> \n        <p>This page was created on {{ ansible_date_time.date }}.</p> \n{% if ansible_eth0.active is equalto True %} \n        <p>eth0 address {{ ansible_eth0.ipv4.address }}.</p> \n{% endif %} \n    </body> \n</html> \n\n```", "```\n<html> \n    <body> \n        <h1>Hello World!</h1> \n        <p>This page was created on {{ ansible_date_time.date }}.</p> \n        <p>This machine can be reached on the following IP addresses</p> \n        <ul> \n{% for address in ansible_all_ipv4_addresses %} \n            <li>{{ address }}</li> \n{% endfor %} \n        </ul> \n    </body> \n</html> \n\n```"]