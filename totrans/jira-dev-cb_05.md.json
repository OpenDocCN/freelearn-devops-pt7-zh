["```\n        <report key=\"allissues-report\" name=\"All Issues Report\"      class=\"com.jtricks.AllIssuesReport\">\n          <description key=\"report.allissues.description\">This report shows details of all isses a specific project. </description>\n           <!-- the label of this report, which the user will use to select it -->        <label key=\"report.allissues.label\" />\n        </report>\n        ```", "```\n        <!-- this is a .properties file containing the i18n keys for this report -->\n        <resource type=\"i18n\" name=\"i18n\" location=\"com.jtricks.allissues.AllIssuesReport\" />\n        ```", "```\n        <!-- the 'view' template is used to render the HTML result -->\n        <resource type=\"velocity\" name=\"view\" location=\"templates/allissues/allissues-report.vm\" />\n        ```", "```\n        <!-- the properties of this report which the user must select before running it -->\n         <properties>\n          <property>\n            <key>projectId</key>\n            <name>Project</name>\n            <description>report.allissues.project.description</description>\n             <!-- valid types are string, text, long, select, date etc-->\n             <type>select</type>\n             <!-- the values generator is a class which will generate values for this select list -->\n             <values class=\"com.jtricks.ProjectValuesGenerator\"/>\n          </property>\n        </properties>\n        ```", "```\n    <report key=\"allissues-report\" name=\"All Issues Report\"  class=\"com.jtricks.AllIssuesReport\">\n       <description key=\"report.allissues.description\">This report shows details of all isses a specific project. </description>\n      <label key=\"report.allissues.label\" />\n      <resource type=\"velocity\" name=\"view\" location=\"templates/allissues/allissues-report.vm\" />\n      <resource type=\"i18n\" name=\"i18n\" location=\"com.jtricks.allissues.AllIssuesReport\" />\n      <properties>\n        <property>\n            <key>projectId</key>\n            <name>Project</name>\n            <description>report.allissues.project.description</description>\n            <type>select</type>\n            <values class=\"com.jtricks.ProjectValuesGenerator\"/>\n        </property>\n        </properties>\n    </report>\n    ```", "```\n    report.allissues.description=Displays all Issues from a project\n    report.allissues.label=All Issues report\n    report.allissues.project.description=Project to be used as the basis of the report\n    ```", "```\n    public class ProjectValuesGenerator implements ValuesGenerator{\n      public Map<String, String> getValues(Map userParams) {\n        Map<String, String> projectMap = new HashMap<String, String>(); \n        List<Project> allProjects = ComponentManager.getInstance().getProjectManager().getProjectObjects(); \n        for (Project project : allProjects) {        \n          projectMap.put(project.getId().toString(), project.getName());\n        }\n        return projectMap;\n      }\n    }\n    ```", "```\n      final String projectid = (String) reqParams.get(\"projectId\");\n      final Long pid = new Long(projectid);\n    ```", "```\n      List<Issue> getIssuesFromProject(Long pid) throws SearchException {\n        JqlQueryBuilder builder = JqlQueryBuilder.newBuilder();\n        builder.where().project(pid);\n        Query query = builder.buildQuery();\n        SearchResults results = ComponentManager.getInstance().getSearchService().search(ComponentManager.getInstance().getJiraAuthenticationContext().getUser(), query, PagerFilter.getUnlimitedFilter());\n        return results.getIssues();\n      }\n    ```", "```\n      final Map<String, Object> velocityParams = new HashMap<String, Object>();\n      velocityParams.put(\"issues\", getIssuesFromProject(pid));\n      return descriptor.getHtml(\"view\", velocityParams);\n    ```", "```\n    public class AllIssuesReport extends AbstractReport {\n\n      public String generateReportHtml(ProjectActionSupport action, Map reqParams) throws Exception {\n        return descriptor.getHtml(\"view\", getVelocityParams(action, reqParams));\n      }\n\n    private Map<String, Object> getVelocityParams(ProjectActionSupport action, Map reqParams) throws SearchException {\n        final String projectid = (String) reqParams.get(\"projectId\");\n        final Long pid = new Long(projectid);\n\n        final Map<String, Object> velocityParams = new HashMap<String, Object>();\n        velocityParams.put(\"report\", this);\n        velocityParams.put(\"action\", action);\n        velocityParams.put(\"issues\", getIssuesFromProject(pid));\n        return velocityParams;\n      }\n\n      List<Issue> getIssuesFromProject(Long pid) throws SearchException {\n        JqlQueryBuilder builder = JqlQueryBuilder.newBuilder();\n        builder.where().project(pid);\n        Query query = builder.buildQuery();\n        SearchResults results =   ComponentManager.getInstance().getSearchService().search(ComponentManager.getInstance().getJiraAuthenticationContext().getUser(), query, PagerFilter.getUnlimitedFilter());\n        return results.getIssues();\n      }\n    }\n    ```", "```\n    <table id=\"allissues-report-table\" border=\"0\" cellpadding=\"3\" cellspacing=\"1\" width=\"100%\">\n       <tr class=\"rowNormal\">\n        <th>Key</th>\n        <th>Summary</th>\n      </tr>\n       #foreach ($issue in $issues)\n         <tr class=\"rowNormal\">\n          <td>$issue.key</td>\n           <td>$issue.summary</td>\n        </tr>\n       #end\n    </table>\n    ```", "```\n    <resource type=\"velocity\" name=\"excel\" location=\"templates/allissues/allissues-report-excel.vm\" />\n    ```", "```\n    @Override\n    public boolean isExcelViewSupported() {\n      return true;\n    }\n    ```", "```\n    @Override\n    public String generateReportExcel(ProjectActionSupport action, Map reqParams) throws Exception {\n      return descriptor.getHtml(\"excel\", getVelocityParams(action, reqParams));\n    }\n    ```", "```\n    <table id=\"allissues-report-table\" border=\"0\" cellpadding=\"3\" cellspacing=\"1\" width=\"100%\">\n       <tr class=\"rowNormal\">\n        <th>Key</th>\n        <th>Summary</th>\n       </tr>\n       #foreach ($issue in $issues)\n         <tr class=\"rowNormal\">\n          <td>$issue.key</td>\n          <td>$issue.summary</td>\n         </tr>\n       #end\n    </table>\n    ```", "```\nfinal StringBuilder contentDispositionValue = new StringBuilderStringBuffer(50);\n    contentDispositionValue.append(\"attachment;filename=\\\"\");\n    contentDispositionValue.append(getDescriptor().getName()).append(\".xls\\\";\");  \nfinal HttpServletResponse response = ActionContext.getResponse();\n    response.addHeader(\"content-disposition\", contentDispositionValue.toString());\n```", "```\n    final String projectid = (String) reqParams.get(\"projectId\");\n    ```", "```\n    public void validate(ProjectActionSupport action, Map reqParams)\n    ```", "```\n    if (ComponentManager.getInstance().getProjectManager().getProjectObj(pid) == null)\n    ```", "```\n    action.addError(\"projectId\", \"Invalid project Selected\");\n    ```", "```\n    @Override\n    public void validate(ProjectActionSupport action, Map reqParams) {\n      // Do your validation here if you have any!\n       final String projectid = (String) reqParams.get(\"projectId\");\n       final Long pid = new Long(projectid);\n\n       if (ComponentManager.getInstance().getProjectManager().getProjectObj(pid) == null) {\n        action.addError(\"projectId\", \"No project with id:\"+projectId+\" exists!\");\n      }\n      super.validate(action, reqParams);\n     }\n    ```", "```\n    @Override\n    public boolean showReport() {\n      User user = ComponentManager.getInstance().getJiraAuthenticationContext().getUser();\n      return ComponentManager.getInstance().getUserUtil().getAdministrators().contains(user);\n    }\n    ```", "```\n     <property>\n       <key>testString</key>\n       <name>Test String</name>\n       <description>Example String property</description>\n       <type>string</type>\n       <default>test val</default>\n     </property>\n```", "```\n     <property>\n       <key>testLong</key>\n       <name>Test Long</name>\n       <description>Example Long property</description>\n       <type>long</type>\n     </property>\n```", "```\n    <property>\n      <key>projectId</key>\n      <name>Project</name>\n      <description>report.allissues.project.description</description>\n      <type>select</type>\n      <values class=\"com.jtricks.ProjectValuesGenerator\"/>\n    </property>\n    ```", "```\n    public class ProjectValuesGenerator implements ValuesGenerator{\n      public Map<String, String> getValues(Map userParams) {\n        Map<String, String> projectMap = new HashMap<String, String>();\n        List<Project> allProjects = ComponentManager.getInstance().getProjectManager().getProjectObjects();\n        for (Project project : allProjects) {\n          projectMap.put(project.getId().toString(), project.getName());\n        }\n        return projectMap;\n      }\n    }\n    ```", "```\n        <property>\n            <key>testSelect</key>\n            <name>Test Select</name>\n            <description>Example Select Property</description>\n            <type>select</type>\n            <values>\n              <value>\n                  <key>key1</key>\n                  <value>Key 1</value>\n              </value>\n              <value>\n                  <key>key2</key>\n                  <value>Key 2</value>\n              </value>\n              <value>\n                  <key>key3</key>\n                  <value>Key 3</value>\n              </value>\n            <values>\n        </property>\n    ```", "```\n     <property>\n       <key>testHidden</key>\n       <name>Test Hidden</name>\n       <description>Example Hidden property</description>\n       <type>hidden</type>\n       <default>test hidden val</default>\n     </property>\n```", "```\n     <property>\n       <key>testDate</key>\n       <name>Test Date</name>\n       <description>Example Date property</description>\n       <type>date</type>\n     </property>\n```", "```\n     <property>\n       <key>testUser</key>\n       <name>Test User</name>\n       <description>Example User property</description>\n       <type>user</type>\n     </property>\n```", "```\n     <property>\n       <key>testText</key>\n       <name>Test Text Area</name>\n       <description>Example Text property</description>\n       <type>text</type>\n     </property>\n```", "```\n     <property>\n       <key>testCheckbox</key>\n       <name>Test Check Box</name>\n       <description>Example Checkbox property</description>\n       <type>checkbox</type>\n     </property>\n```", "```\n     <property>\n       <key>testFilterPicker</key>\n       <name>Test Filter Picker</name>\n       <description>Example Filter Picker property</description>\n       <type>filterpicker</type>\n     </property>\n```", "```\n     <property>\n       <key>testFilterProjectPicker</key>\n       <name>Test Filter or Project Picker</name>\n       <description>Example Filter or Project Picker property</\n        description>\n       <type>filterprojectpicker</type>\n     </property>\n```", "```\n     <property>\n       <key>testCascadingSelect</key>\n       <name>Test Cascading Select</name>\n       <description>Example Cascading Select</description>\n       <type>cascadingselect</type>\n       <values class=\"com.jtricks.CascadingValuesGenerator\"/>\n       <cascade-from>testSelect</cascade-from>\n     </property>\n```", "```\n  private static class ValueClassHolder {\n    private String value;\n    private String className;\n\n    public ValueClassHolder(String value, String className) {\n      this.value = value;\n      this.className = className;\n    }\n\n    public String getValue() {\n      return value;\n    }\n\n    public String getClassName() {\n      return className;\n    }\n\n    public String toString() {\n      return value;\n    }\n  }\n```", "```\n  public Map getValues(Map arg0) {\n    Map allValues = new LinkedHashMap();\n\n    allValues.put(\"One1\", new ValueClassHolder(\"First Val1\", \"key1\"));\n    allValues.put(\"Two1\", new ValueClassHolder(\"Second Val1\", \"key1\"));\n    allValues.put(\"Three1\", new ValueClassHolder(\"Third Val1\", \"key1\"));\n    allValues.put(\"One2\", new ValueClassHolder(\"First Val2\", \"key2\"));\n    allValues.put(\"Two2\", new ValueClassHolder(\"Second Val2\", \"key2\"));\n    allValues.put(\"One3\", new ValueClassHolder(\"First Val3\", \"key3\"));\n\n    return allValues;\n  }  \n```", "```\n    final String testString = (String) reqParams.get(\"testString\");\n    final String testLong = (String) reqParams.get(\"testLong\");\n    final String testHidden = (String) reqParams.get(\"testHidden\");\n    final String testDate = (String) reqParams.get(\"testDate\");\n    final String testUser = (String) reqParams.get(\"testUser\");\n    final String testText = (String) reqParams.get(\"testText\");\n    final String[] testMultiSelect = (String[]) reqParams.get(\"testMultiSelect\");\n    final String testCheckBox = (String) reqParams.get(\"testCheckBox\");\n    final String testFilterPicker = (String) reqParams.get(\"testFilterPicker\");\n    final String testFilterProjectPicker = (String) reqParams.get(\"testFilterProjectPicker\");\n    final String testSelect = (String) reqParams.get(\"testSelect\");\n    final String testCascadingSelect = (String) reqParams.get(\"testCascadingSelect\");\n```", "```\n    <report key=\"pie-chart\" name=\"Pie Chart\" class=\"com.jtricks.PieChart\">\n      <description>Sample Pie Chart</description>\n      <label>Eaxmple Pie Chart</label>\n      <resource type=\"velocity\" name=\"view\" location=\"templates/pie/pie-chart.vm\" />\n    </report>\n    ```", "```\n    public String generateReportHtml(ProjectActionSupport action, Map reqParams) throws Exception {\n      final Map<String, Object> params = new HashMap<String, Object>();\n      params.put(\"report\", this);\n      params.put(\"action\", action);\n      params.put(\"user\", authenticationContext.getUser());\n\n      final Chart chart = new JTricksPieChartGenerator().generateChart(authenticationContext.getUser(),REPORT_IMAGE_WIDTH, REPORT_IMAGE_HEIGHT);\n\n      params.putAll(chart.getParameters());\n      return descriptor.getHtml(\"view\", params);\n    }\n    ```", "```\n        DefaultPieDataset dataset = new DefaultPieDataset();\n        ```", "```\n        dataset.setValue(\"One\", 10L);dataset.setValue(\"Two\", 15L);\n        ```", "```\n        final I18nBean i18nBean = new I18nBean(remoteUser);\n        ```", "```\n        final ChartHelper helper = new PieChartGenerator(dataset, i18nBean).generateChart();helper.generate(width, height);\n        ```", "```\n        params.put(\"chart\", helper.getLocation());\n        params.put(\"chartDataset\", dataset);\n        params.put(\"imagemap\", helper.getImageMap());\n        params.put(\"imagemapName\", helper.getImageMapName());\n\n        return new Chart(helper.getLocation(), helper.getImageMap(), helper.getImageMapName(), params);\n        ```", "```\n              public Chart generateChart(User remoteUser, int width, int \n                height) {\n              try {\n                final Map<String, Object> params = new HashMap<String, \n                  Object>();\n                // Create Dataset\n                DefaultPieDataset dataset = new DefaultPieDataset();\n\n                dataset.setValue(\"One\", 10L);\n                dataset.setValue(\"Two\", 15L);\n\n                final I18nBean i18nBean = new I18nBean(remoteUser);\n\n                final ChartHelper helper = new PieChartGenerator(dataset,       i18nBean).generateChart();\n                helper.generate(width, height);\n\n                params.put(\"chart\", helper.getLocation());\n                params.put(\"chartDataset\", dataset);\n                params.put(\"imagemap\", helper.getImageMap());\n                params.put(\"imagemapName\", helper.getImageMapName());\n                return new Chart(helper.getLocation(), helper.\n                  getImageMap(), helper.getImageMapName(), params);\n\n              } catch (Exception e) {\n                e.printStackTrace();\n                throw new RuntimeException(\"Error generating chart\", e);\n              }\n            }\n        ```", "```\n    Sample Chart: <br><br>\n    <table width=\"100%\" class=\"report\">\n      <tr>\n        <td>\n          #if ($chart)\n             #if ($imagemap)\n              $imagemap\n            #end\n            <p class=\"report-chart\">\n              <img src='$baseurl/charts?filename=$chart' border='0' #if ($imagemap) usemap=\"\\#$imagemapName\" #end/>\n            </p>\n          #end\n        </td>\n      </tr>\n    </table>\n    ```", "```\n        <gadget key=\"hello-gadget\" name=\"Hello Gadget\" location=\"hello-gadget.xml\"><description>Hello Gadget! </description>\n        </gadget>\n        ```", "```\n        <resource type=\"download\" name=\"screenshot.png\" location=\"/images/screenshot.png\"/>\n        <resource type=\"download\" name=\"thumbnail.png\" location=\"/images/thumbnail.png\"/>\n        ```", "```\n    <resource type=\"download\" name=\"i18n/messages.xml\" location=\"i18n/messages.xml\">\n      <param name=\"content-type\" value=\"text/xml; charset=UTF-8\"/>\n    </resource>\n    ```", "```\n    <atlassian-plugin key=\"com.jtricks.gadgets\" name=\"Gadgets Plugin\" plugins-version=\"2\">\n        <plugin-info>\n          <description>Gadgets Example</description>\n          <version>2.0</version>\n          <vendor name=\"JTricks\" url=\"http://www.j-tricks.com/\" />\n        </plugin-info>\n        <gadget key=\"hello-gadget\" name=\"Hello Gadget\" location=\"hello-gadget.xml\">\n          <description>Hello Gadget!</description>\n        </gadget>\n\n        <resource type=\"download\" name=\"screenshot.png\" location=\"/images/screenshot.png\"/>\n        <resource type=\"download\" name=\"thumbnail.png\" location=\"/images/thumbnail.png\"/>\n\n        <resource type=\"download\" name=\"i18n/messages.xml\" location=\"i18n/messages.xml\">\n          <param name=\"content-type\" value=\"text/xml; charset=UTF-8\"/>\n        </resource>\n      </atlassian-plugin>\n    ```", "```\n    <msg name=\"gadget.title\">Hello Gadget</msg>\n    ```", "```\n    <messagebundle>\n      <msg name=\"gadget.title\">Hello Gadget</msg>\n      <msg name=\"gadget.title.url\">http://www.j-tricks.com</msg>\n      <msg name=\"gadget.description\">Example Gadget from J-Tricks</msg>\n    </messagebundle>\n    ```", "```\n        <ModulePrefs title=\"__MSG_gadget.title__\" \n                     title_url=\"__MSG_gadget.title.url__\" \n                     description=\"__MSG_gadget.description__\" \n                     author=\"Jobin Kuruvilla\" \n                     author_email=jobinkk@gmail.com\n                     screenshot='#staticResourceUrl(\"com.jtricks.gadgets:hello-gadget\", \"screenshot.png\")' \n                     thumbnail='#staticResourceUrl(\"com.jtricks.gadgets:hello-gadget\", \"thumbnail.png\")' height=\"150\"  >\n        </ModulePrefs>\n        ```", "```\n        <Optional feature=\"gadget-directory\">\n          <Param name=\"categories\">\n            Other\n          </Param>\n        </Optional>\n\n        ```", "```\n        <Locale messages=\"__ATLASSIAN_BASE_URL__/download/resources/com.jtricks.gadgets/i18n/messages.xml\"/>\n        ```", "```\n    <Content type=\"html\" view=\"profile\">\n      < ![CDATA[ Hello From JTricks ]]>\n    </Content>\n    ```", "```\n    <?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n    <Module>\n      <ModulePrefs title=\"__MSG_gadget.title__\" \n                   title_url=\"__MSG_gadget.title.url__\" \n                   description=\"__MSG_gadget.description__\" \n                   author=\"Jobin Kuruvilla\" \n                   author_email=jobinkk@gmail.com \n                   screenshot='#staticResourceUrl(\"com.jtricks.gadgets:hello-gadget\", \"screenshot.png\")' \n                   thumbnail='#staticResourceUrl(\"com.jtricks.gadgets:hello-gadget\", \"thumbnail.png\")' height=\"150\" >\n        <Optional feature=\"gadget-directory\">\n          <Param name=\"categories\">\n            Other\n          </Param>\n        </Optional>\n        <Locale messages=\"__ATLASSIAN_BASE_URL__/download/resources/com.jtricks.gadgets/i18n/messages.xml\"/>\n      </ModulePrefs>\n      <Content type=\"html\" view=\"profile\">\n        < ![CDATA[ Hello From JTricks ]]>\n       </Content>\n    </Module>\n    ```", "```\n<Require feature=\"dynamic-height\"/>\n```", "```\n  <script type=\"text/javascript\" charset=\"utf-8\">\n    function resize()\n    {\n      gadgets.window.adjustHeight();\n    }\n    window.onload=resize;\n  </script>\n```", "```\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<Module>\n    <ModulePrefs title=\"__MSG_gadget.title__\"\n                 title_url=\"__MSG_gadget.title.url__\"\n                 description=\"__MSG_gadget.description__\"\n                 author=\"Jobin Kuruvilla\"\n                 author_email=\"jobinkk@gmail.com\"\n                 screenshot='#staticResourceUrl(\"com.jtricks.gadgets:hello-gadget\", \"screenshot.png\")'\n                 thumbnail='#staticResourceUrl(\"com.jtricks.gadgets:hello-gadget\", \"thumbnail.png\")'\n     height=\"150\">\n        <Optional feature=\"gadget-directory\">\n            <Param name=\"categories\">Other</Param>\n        </Optional>\n  <Require feature=\"dynamic-height\"/>\n  <Locale messages=\"__ATLASSIAN_BASE_URL__/download/resources/com.jtricks.gadgets/i18n/messages.xml\"/>\n    </ModulePrefs>\n    <Content type=\"html\" view=\"profile\">\n        < ![CDATA[\n  <script type=\"text/javascript\" charset=\"utf-8\">\n      function resize() \n      {\n    gadgets.window.adjustHeight();\n      }\n  window.onload=resize;\n  </script>\n  Hello From JTricks\n        ]]>\n    </Content>\n</Module>\n```", "```\n    #requireResource(\"com.atlassian.jira.gadgets:common\")\n    #includeResources()\n    ```", "```\n    var gadget = AJS.Gadget\n    ```", "```\n            <script type=\"text/javascript\">\n              (function () {\n                    var gadget = AJS.Gadget({\n                      baseUrl: \"__ATLASSIAN_BASE_URL__\",\n                      view: {\n                    ...\n                  }\n                    });\n              })();\n            </script>\n        ```", "```\n        args: [{\n          key: \"user\",\n          ajaxOptions: function() {\n            return {\n              url: \"/rest/gadget/1.0/currentUser\"\n            };\n          }\n        }]\n\n    ```", "```\n    UserPref name=\"displayName\" datatype=\"hidden\" default_value=\"true\n    {\"username\":\"jobinkk\",\"fullName\":\"Jobin Kuruvilla\",\"email\":\"jobinkk@gmail.com\"}\n    ```", "```\n        template: function(args) {\n          var gadget = this;\n\n          var userDetails = AJS.$(\"<h1/>\").text(\"Hello, \"+args.user[\"fullName\"]);     \n          gadget.getView().html(userDetails);\n        }\n\n    ```", "```\n        <Content type=\"html\" view=\"profile\">\n              < ![CDATA[\n                    #requireResource(\"com.atlassian.jira.gadgets:common\")\n              #includeResources()\n\n              <script type=\"text/javascript\">\n          (function () {\n                var gadget = AJS.Gadget({\n                    baseUrl: \"__ATLASSIAN_BASE_URL__\",\n                    view: {\n                    template: function(args) {\n                     var gadget = this;       \n                     var userDetails = AJS.$(\"<h1/>\").text(\"Hello, \"+args.user[\"fullName\"]);       \n                     gadget.getView().html(userDetails);\n                    },\n                    args: [{\n                    key: \"user\",\n                    ajaxOptions: function() {\n                      return {\n                        url: \"/rest/gadget/1.0/currentUser\"\n                      };\n                  }\n                  }]\n              }\n              });\n          })();\n              </script>\n              ]]>\n            </Content>\n    ```", "```\n    <Require feature=\"setprefs\" /><Require feature=\"views\" />\n    ```", "```\n    #supportedLocales(\"gadget.common\")\n    ```", "```\n        <UserPref name=\"displayName\" datatype=\"hidden\" default_value=\"true\"/>\n    ```", "```\n    ...\n    config: {\n        descriptor: function(){...},\n        args: {Function, Array}\n    },\n    ... \n    ```", "```\n    config: {\n      descriptor: function (args) {\n        var gadget = this;\n        return  {\n          fields: [\n            {\n              userpref: \"displayName\",\n              label: gadget.getMsg(\"property.label\"),\n              description:gadget.getMsg(\"property.description\"),\n              type: \"select\",\n              selected: gadget.getPref(\"displayName\"),\n              options:[\n                {\n                   label:\"Yes\",\n                  value:\"true\"\n                },\n                {\n                  label:\"No\",\n                  value:\"false\"\n                }\n              ]\n             }\n          ]\n         };\n      }\n    }\n    ```", "```\n    <msg name=\"property.label\">Display Name?</msg><msg name=\"property.description\">Example Property from J-Tricks</msg>\n    ```", "```\n    <UserPref name=\"isConfigured\" datatype=\"hidden\" default_value=\"false\"/>\n    ```", "```\n    if (gadget.getPref(\"displayName\") == \"true\")\n      var userDetails = AJS.$(\"<h1/>\").text(\"Hello, \"+args.user[\"fullName\"]);\n    } else {\n      var userDetails = AJS.$(\"<h1/>\").text(\"Hello!\");\n     }  \n    ```", "```\n    <Content type=\"html\" view=\"profile\">\n    < ![CDATA[#requireResource(\"com.atlassian.jira.gadgets:common\")\n    #includeResources()\n    <script type=\"text/javascript\">\n          (function () {\n    var gadget = AJS.Gadget({\n    \tbaseUrl: \"__ATLASSIAN_BASE_URL__\",\n    \tconfig: {\n    descriptor: function (args) {\n    var gadget = this;\n    return  {\n    fields: [\n    {\n    userpref: \"displayName\",\n    label: gadget.getMsg(\"property.label\"),\n    description:gadget.getMsg(\"property.description\"),\n    type: \"select\",\n    selected: gadget.getPref(\"displayName\"),\n    options:[\n                        {\n    label:\"Yes\",\n    value:\"true\"\n                 },\n                        {\n    label:\"No\",\n    value:\"false\"\n                        }\n                      ]\n    }, \n    AJS.gadget.fields.nowConfigured()\n                    ]\n    };\n    }\n    \t},\n    \tview: {\n    template: function(args) {\n    var gadget = this;       \n    if (gadget.getPref(\"displayName\") == \"true\")\n                  {\n    varuserDetails = AJS.$(\"<h1/>\").text(\"Hello, \"+args.user[\"fullName\"]);\n                  } else {\n    varuserDetails = AJS.$(\"<h1/>\").text(\"Hello!\");\n                  }       \n    gadget.getView().html(userDetails);\n    },\n    args: [{\n    key: \"user\",\n    ajaxOptions: function() {\n    return {\n    url: \"/rest/gadget/1.0/currentUser\"\n                    };\n                  }\n                }]\n    \t}\n    \t});\n          })();\n    </script>\n    ]]>\n    </Content>\n    ```", "```\n    <UserPref name=\"refresh\" datatype=\"hidden\" default_value=\"false\"/>\n    ```", "```\n    view: {\n      enableReload: true,\n       template: function(args) {\n        ...\n      },\n      args: [{\n        ...\n       }]\n    }\n    ```"]