["```\n- hosts: web \n  user: root \n  tasks: \n  - name: Print environment name \n    debug: \n      var: env \n  - name: Print db server url \n    debug: \n      var: db_url \n  - name: Print domain url \n    debug: \n      var: domain \n- hosts: db \n  user: root \n  tasks: \n  - name: Print environment name \n    debug: \n      var: env \n  - name: Print database username \n    debug: \n      var: db_user \n  - name: Print database password \n    debug: \n      var: db_pass \n\n```", "```\n[web] \nws01.fale.io \nws02.fale.io \n\n[db] \ndb01.fale.io \n\n[production:children] \ndb \nweb \n\n```", "```\n[web] \nws01.stage.fale.io \nws02.stage.fale.io \n\n[db] \ndb01.stage.fale.io \n\n[staging:children] \ndb \nweb \n\n```", "```\ndb_user: mysqluser \n\n```", "```\nenv: production \ndomain: fale.io \ndb_url: db.fale.io \ndb_pass: this_is_a_safe_password \n\n```", "```\nenv: staging \ndomain: stage.fale.io \ndb_url: db.stage.fale.io \ndb_pass: this_is_an_unsafe_password \n\n```", "```\nansible-playbook -i staging playbooks/variables.yaml\n\n```", "```\nPLAY [web] *******************************************************\n\nTASK [setup] ***************************************************** \nok: [ws02.stage.fale.io] \nok: [ws01.stage.fale.io] \n\nTASK [Print environment name] ************************************ \nok: [ws01.stage.fale.io] => { \n    \"env\": \"staging\" \n} \nok: [ws02.stage.fale.io] => { \n    \"env\": \"staging\" \n} \n\nTASK [Print db server url] *************************************** \nok: [ws01.stage.fale.io] => { \n    \"db_url\": \"db.stage.fale.io\" \n} \nok: [ws02.stage.fale.io] => { \n    \"db_url\": \"db.stage.fale.io\" \n} \n\nTASK [Print domain url] ****************************************** \nok: [ws01.stage.fale.io] => { \n    \"domain\": \"stage.fale.io\" \n} \nok: [ws02.stage.fale.io] => { \n    \"domain\": \"stage.fale.io\" \n} \n\nPLAY [db] ******************************************************** \n\nTASK [setup] ***************************************************** \nok: [db01.stage.fale.io] \n\nTASK [Print environment name] ************************************ \nok: [db01.stage.fale.io] => { \n    \"env\": \"staging\" \n} \n\nTASK [Print database username] *********************************** \nok: [db01.stage.fale.io] => { \n    \"db_user\": \"mysqluser\" \n} \n\nTASK [Print database password] ********************************** \nok: [db01.stage.fale.io] => { \n    \"db_pass\": \"this_is_an_unsafe_password\" \n} \n\nPLAY RECAP ******************************************************* \ndb01.stage.fale.io: ok=4    changed=0    unreachable=0    failed=0 \nws01.stage.fale.io: ok=4    changed=0    unreachable=0    failed=0 \nws02.stage.fale.io: ok=4    changed=0    unreachable=0    failed=0\n\n```", "```\nansible-playbook -i production playbooks/variables.yaml\n\n```", "```\nPLAY [web] ******************************************************* \nTASK [setup] *****************************************************\nok: [ws02.fale.io]\nok: [ws01.fale.io] \nTASK [Print environment name] ************************************\nok: [ws01.fale.io] => {\n \"env\": \"production\"\n}\nok: [ws02.fale.io] => {\n \"env\": \"production\"\n} \nTASK [Print db server url] ***************************************\nok: [ws01.fale.io] => {\n \"db_url\": \"db.fale.io\"\n}\nok: [ws02.fale.io] => {\n \"db_url\": \"db.fale.io\"\n} \nTASK [Print domain url] ******************************************\nok: [ws01.fale.io] => {\n \"domain\": \"fale.io\"\n}\nok: [ws02.fale.io] => {\n \"domain\": \"fale.io\"\n} \nPLAY [db] ******************************************************** \nTASK [setup] *****************************************************\nok: [db01.fale.io] \nTASK [Print environment name] ************************************\nok: [db01.fale.io] => {\n \"env\": \"production\"\n} \nTASK [Print database username] ***********************************\nok: [db01.fale.io] => {\n \"db_user\": \"mysqluser\"\n} \nTASK [Parint database password] **********************************\nok: [db01.fale.io] => {\n \"db_pass\": \"this_is_a_safe_password\"\n} \nPLAY RECAP *******************************************************\ndb01.fale.io      : ok=4    changed=0    unreachable=0    failed=0\nws01.fale.io      : ok=4    changed=0    unreachable=0    failed=0\nws02.fale.io      : ok=4    changed=0    unreachable=0    failed=0\n\n```", "```\n[defaults] \nroles_path = roles \n\n```", "```\n- hosts: all \n  user: root \n  tasks: \n  - name: Ensure ansible user exists \n    user: \n      name: ansible \n      state: present \n      comment: Ansible \n  - name: Ensure ansible user accepts the SSH key \n    authorized_key: \n      user: ansible \n      key: https://github.com/fale.keys \n      state: present \n  - name: Ensure the ansible user is sudoer with no password required \n    lineinfile: \n      dest: /etc/sudoers \n      state: present \n      regexp: '^ansible ALL\\=' \n      line: 'ansible ALL=(ALL) NOPASSWD:ALL' \n      validate: 'visudo -cf %s' \n\n```", "```\n- hosts: web \n  user: ansible \n  roles: \n  - common \n  - webserver \n\n```", "```\n- name: Ensure EPEL is enabled\n   yum:\n     name: epel-release\n     state: present\n   become: True\n- name: Ensure needed packages are present\n   yum:\n     name: '{{ item }}'\n     state: present\n   become: True\n   with_items:\n   - libsemanage-python\n   - libselinux-python\n   - ntp\n   - firewalld\n- name: Ensure we have last version of every package\n   yum:\n     name: \"*\"\n     state: latest\n   become: True\n- name: Ensure the timezone is set to UTC\n   file:\n     src: /usr/share/zoneinfo/GMT\n     dest: /etc/localtime\n     state: link\n   become: True\n- name: Ensure the NTP service is running and enabled\n   service:\n   name: ntpd\n   state: started\n   enabled: True\n become: True\n- name: Ensure FirewallD is running\n   service:\n     name: firewalld\n     state: started\n     enabled: True\n   become: True\n- name: Ensure SSH can pass the firewall\n   firewalld:\n     service: ssh\n     state: enabled\n     permanent: True\n     immediate: True\n   become: True\n- name: Ensure the MOTD file is present and updated\n   template:\n     src: motd\n     dest: /etc/motd\n     owner: root\n     group: root\n     mode: 0644\n   become: True\n- name: Ensure the hostname is the same of the inventory\n   hostname:\n     name: \"{{ inventory_hostname }}\"\n   become: True\n\n```", "```\n                This system is managed by Ansible \n  Any change done on this system could be overwritten by Ansible \n\nOS: {{ ansible_distribution }} {{ ansible_distribution_version }} \nHostname: {{ inventory_hostname }} \neth0 address: {{ ansible_eth0.ipv4.address }} \n\n            All connections are monitored and recorded \n    Disconnect IMMEDIATELY if you are not an authorized user \n\n```", "```\n- name: Ensure the HTTPd package is installed \n  yum: \n    name: httpd \n    state: present \n  become: True \n- name: Ensure the PHP is installed \n  yum: \n    name: '{{ item }}'\n    state: present \n  become: True \n  with_items:\n - git\n - php \n- name: Ensure the HTTPd service is enabled and running \n  service: \n    name: httpd \n    state: started \n    enabled: True \n  become: True \n- name: Ensure HTTP can pass the firewall \n  firewalld: \n    service: http \n    state: enabled \n    permanent: True \n    immediate: True \n  become: True \n- name: Ensure HTTPd configuration is updated \n  copy: \n    src: website.conf \n    dest: /etc/httpd/conf.d \n  become: True \n  notify: Restart HTTPd \n\n```", "```\n- name: Restart HTTPd \n  service: \n    name: httpd \n    state: restarted \n  become: True \n\n```", "```\nansible-playbook -i inventory/production playbooks/firstrun.yaml\n\n```", "```\nPLAY [localhost] ************************************************* \nPLAY [all] ******************************************************* \nTASK [setup] *****************************************************\nok: [ws01.fale.io]\nok: [ws02.fale.io] \nTASK [Ensure ansible user exists] ********************************\nchanged: [ws01.fale.io]\nchanged: [ws02.fale.io] \nTASK [Ensure ansible user accepts the SSH key] *******************\nchanged: [ws01.fale.io]\nchanged: [ws02.fale.io] \nTASK [Ensure the ansible user is sudoer with no password required]\nchanged: [ws01.fale.io]\nchanged: [ws02.fale.io] \nPLAY RECAP *******************************************************\nws01.fale.io      : ok=4    changed=3    unreachable=0    failed=0\nws02.fale.io      : ok=4    changed=3    unreachable=0    failed=0\n\n```", "```\nansible-playbook -i inventory/production playbooks/groups/web.yaml\n\n```", "```\nPLAY [web] ******************************************************* \nTASK [setup] *****************************************************\nok: [ws01.fale.io]\nok: [ws02.fale.io]\n ....\nPLAY RECAP *******************************************************\nws01.fale.io      : ok=20   changed=14   unreachable=0    failed=0\nws02.fale.io      : ok=20   changed=14   unreachable=0    failed=0\n\n```", "```\n- hosts: web \n  user: ansible \n  tasks: \n  - name: Install or update website \n    git: \n      repo: https://github.com/Fale/demo-php-app.git \n      dest: /var/www/application \n    become: True \n\n```", "```\nansible-playbook -i inventory/production playbooks/manual/rcs_deploy.yaml\n\n```", "```\nPLAY [web] ******************************************************* \nTASK [setup] *****************************************************\nok: [ws01.fale.io]\nok: [ws02.fale.io]\n .... \nPLAY RECAP *******************************************************\nws01.fale.io      : ok=2    changed=1    unreachable=0    failed=0\nws02.fale.io      : ok=2    changed=1    unreachable=0    failed=0\n\n```", "```\n<VirtualHost *:80> \n    ServerName app.fale.io \n    DocumentRoot /var/www/application \n    <Directory /var/www/application> \n        Options None \n    </Directory> \n    <DirectoryMatch \".git*\"> \n        Require all denied \n    </DirectoryMatch> \n</VirtualHost> \n\n```", "```\nansible-playbook -i inventory/production playbooks/groups/web.yaml\n\n```", "```\nPLAY [web] ******************************************************* \nTASK [setup] *****************************************************\nok: [ws01.fale.io]\nok: [ws02.fale.io] \nTASK [common : Ensure EPEL is enabled] ***************************\nok: [ws01.fale.io]\nok: [ws02.fale.io] \nTASK [common : Ensure libselinux-python is present] **************\nok: [ws01.fale.io]\nok: [ws02.fale.io] \nTASK [common : Ensure libsemanage-python is present] *************\nok: [ws01.fale.io]\nok: [ws02.fale.io] \nTASK [common : Ensure we have last version of every package] *****\nok: [ws01.fale.io]\nok: [ws02.fale.io] \nTASK [common : Ensure NTP is installed] **************************\nok: [ws01.fale.io]\nok: [ws02.fale.io] \nTASK [common : Ensure the timezone is set to UTC] ****************\nok: [ws01.fale.io]\nok: [ws02.fale.io] \nTASK [common : Ensure the NTP service is running and enabled] ****\nok: [ws01.fale.io]\nok: [ws02.fale.io] \nTASK [common : Ensure FirewallD is installed] ********************\nok: [ws01.fale.io]\nok: [ws02.fale.io] \nTASK [common : Ensure FirewallD is running] **********************\nok: [ws01.fale.io]\nok: [ws02.fale.io] \nTASK [common : Ensure SSH can pass the firewall] *****************\nok: [ws01.fale.io]\nok: [ws02.fale.io] \nTASK [common : Ensure the MOTD file is present and updated] ******\nok: [ws01.fale.io]\nok: [ws02.fale.io] \nTASK [common : Ensure the hostname is the same of the inventory] *\nok: [ws01.fale.io]\nok: [ws02.fale.io] \nTASK [webserver : Ensure the HTTPd package is installed] *********\nok: [ws01.fale.io]\nok: [ws02.fale.io] \nTASK [webserver : Ensure the PHP is installed] *******************\nok: [ws01.fale.io]\nok: [ws02.fale.io] \nTASK [webserver : Ensure git is installed] ***********************\nok: [ws01.fale.io]\nok: [ws02.fale.io] \nTASK [webserver : Ensure the HTTPd service is enabled and running]\nok: [ws01.fale.io]\nok: [ws02.fale.io] \nTASK [webserver : Ensure HTTP can pass the firewall] *************\nok: [ws01.fale.io]\nok: [ws02.fale.io] \nTASK [webserver : Ensure HTTPd configuration is updated] *********\nchanged: [ws01.fale.io]\nchanged: [ws02.fale.io] \nRUNNING HANDLER [webserver : Restart HTTPd] **********************\nchanged: [ws01.fale.io]\nchanged: [ws02.fale.io] \nPLAY RECAP *******************************************************\nws01.fale.io      : ok=20   changed=2    unreachable=0    failed=0\nws02.fale.io      : ok=20   changed=2    unreachable=0    failed=0\n\n```", "```\n%define debug_package %{nil} \n%global commit0 b49f595e023e07a8345f47a3ad62a6f50f03121e \n%global shortcommit0 %(c=%{commit0}; echo ${c:0:7}) \n\nName:       demo-php-app \nVersion:    0 \nRelease:    1%{?dist} \nSummary:    Demo PHP application \n\nLicense:    PD \nURL:        https://github.com/Fale/demo-php-app \nSource0:    %{url}/archive/%{commit0}.tar.gz#/%{name}-%{shortcommit0}.tar.gz \n\n%description \nThis is a demo PHP application in RPM format \n\n%prep \n%autosetup -n %{name}-%{commit0} \n\n%build \n\n%install \nmkdir -p %{buildroot}/var/www/application \nls -alh \ncp index.php %{buildroot}/var/www/application \n\n%files \n%dir /var/www/application \n/var/www/application/index.php \n\n%changelog \n* Tue Oct 04 2016 Fabio Alessandro Locati - 0.1 \n- Initial packaging \n\n```", "```\n%define debug_package %{nil} \n%global commit0 b49f595e023e07a8345f47a3ad62a6f50f03121e \n%global shortcommit0 %(c=%{commit0}; echo ${c:0:7}) \n\n```", "```\nName:       demo-php-app \nVersion:    0 \nRelease:    1%{?dist} \nSummary:    Demo PHP application \n\nLicense:    PD \nURL:        https://github.com/Fale/demo-php-app \nSource0:    %{url}/archive/%{commit0}.tar.gz#/%{name}-%{shortcommit0}.tar.gz \n\n```", "```\n%description \nThis is a demo PHP application in RPM format \n\n```", "```\n%prep \n%autosetup -n %{name}-%{commit0} \n\n```", "```\n%build \n\n```", "```\n%install \nmkdir -p %{buildroot}/var/www/application \nls -alh \ncp index.php %{buildroot}/var/www/application \n\n```", "```\n%files \n%dir /var/www/application \n/var/www/application/index.php \n\n```", "```\n%changelog \n* Tue Oct 04 2016 Fabio Alessandro Locati - 0.1 \n- Initial packaging \n\n```", "```\nsudo dnf install -y fedora-packager\n\n```", "```\nsudo yum install -y mock rpm-build spectool\n\n```", "```\nsudo usermod -a -G mock [yourusername]\n\n```", "```\nmkdir -p ~/rpmbuild/SOURCES\n\n```", "```\nspectool -R -g demo-php-app.spec\n\n```", "```\nrpmbuild -bs demo-php-app.spec\n\n```", "```\nWrote: /home/fale/rpmbuild/SRPMS/demo-php-app-0-1.fc24.src.rpm\n\n```", "```\nmock -r epel-7-x86_64 /home/fale/rpmbuild/SRPMS/demo-php-app-0-1.fc24.src.rpm\n\n```", "```\nWrote: /builddir/build/RPMS/demo-php-app-0-1.el7.centos.x86_64.rpm\nExecuting(%clean): /bin/sh -e /var/tmp/rpm-tmp.d4vPhr\n+ umask 022\n+ cd /builddir/build/BUILD\n+ cd demo-php-app-b49f595e023e07a8345f47a3ad62a6f50f03121e\n+ /usr/bin/rm -rf /builddir/build/BUILDROOT/demo-php-app-0-1.el7.centos.x86_64\n+ exit 0\nFinish: rpmbuild demo-php-app-0-1.fc24.src.rpm\nFinish: build phase for demo-php-app-0-1.fc24.src.rpm\nINFO: Done(/home/fale/rpmbuild/SRPMS/demo-php-app-0-1.fc24.src.rpm) Config(epel-7-x86_64) 0 minutes 58 seconds\nINFO: Results and/or logs in: /var/lib/mock/epel-7-x86_64/result\nFinish: run\n\n```", "```\ndrwxrwsr-x. 2 fale mock 4.0K Oct 10 12:26 .\ndrwxrwsr-x. 4 root mock 4.0K Oct 10 12:25 ..\n-rw-rw-r--. 1 fale mock 4.6K Oct 10 12:26 build.log\n-rw-rw-r--. 1 fale mock 3.3K Oct 10 12:26 demo-php-app-0-1.el7.centos.src.rpm\n-rw-rw-r--. 1 fale mock 3.1K Oct 10 12:26 demo-php-app-0-1.el7.centos.x86_64.rpm\n-rw-rw-r--. 1 fale mock 184K Oct 10 12:26 root.log\n-rw-rw-r--. 1 fale mock  792 Oct 10 12:26 state.log\n\n```", "```\n[web] \nws01.fale.io \nws02.fale.io \n\n[db] \ndb01.fale.io \n\n[builders] \nbuilder01.fale.io \n\n[production:children] \ndb \nweb \nbuilders \n\n```", "```\n- name: Install our private repository \n  copy: \n    src: privaterepo.repo \n    dest: /etc/yum.repos.d/privaterepo.repo \n  become: True \n\n```", "```\n[privaterepo] \nname=Private repo that will keep our apps packages \nbaseurl=http://repo.fale.io/ \nskip_if_unavailable=True \ngpgcheck=0 \nenabled=1 \nenabled_metadata=1 \n\n```", "```\nansible-playbook -i inventory/production playbooks/groups/web.yaml\n\n```", "```\nPLAY [web] ******************************************************* \nTASK [setup] *****************************************************\nok: [ws01.fale.io]\nok: [ws02.fale.io]\n    ....\nPLAY RECAP ******************************************************\nws01.fale.io       : ok=20   changed=1    unreachable=0    failed=0\nws02.fale.io       : ok=20   changed=1    unreachable=0    failed=0\n\n```", "```\n- name: Ensure needed packages are present \n  yum: \n    name: '{{ item }}' \n    state: present \n  become: True \n  with_items: \n  - mock \n  - rpm-build \n  - spectool \n  - createrepo \n  - httpd \n\n- name: Ensure the user ansible is in the mock group \n  user: \n    name: ansible \n    groups: mock \n    append: True \n  become: True \n\n- name: Ensure the /var/www/repo folder is present \n  file: \n    name: /var/www/repo \n    state: directory \n    group: ansible \n    owner: ansible \n    mode: 0755 \n  become: True \n\n- name: Ensure the HTTPd zone for the repo is present \n  copy: \n    src: repo.conf \n    dest: /etc/httpd/conf.d/repo.conf \n  become: True \n  notify: Restart HTTPd \n\n- name: Ensure the HTTPd service is enabled and running \n  service: \n    name: httpd \n    state: started \n    enabled: True \n  become: True \n\n- name: Ensure HTTP can pass the firewall \n  firewalld: \n    service: http \n    state: enabled \n    permanent: True \n    immediate: True \n  become: True \n\n```", "```\n- name: Restart HTTPd \n  service: \n    name: httpd \n    state: restarted \n  become: True \n\n```", "```\n<VirtualHost *:80> \n    ServerName repo.fale.io \n    DocumentRoot /var/www/repo \n    <Directory /var/www/repo> \n        Options Indexes FollowSymLinks \n    </Directory> \n</VirtualHost> \n\n```", "```\n- hosts: builders \n  user: ansible \n  roles: \n  - common \n  - builder \n\n```", "```\nansible-playbook -i inventory/production playbooks/firstrun.yaml -lbuilder01.fale.io\n\n```", "```\nPLAY [all] ******************************************************* \nTASK [setup] *****************************************************\nok: [builder01.fale.io] \nTASK [Ensure ansible user exists] ********************************\nchanged: [builder01.fale.io] \nTASK [Ensure ansible user accepts the SSH key] *******************\nchanged: [builder01.fale.io] \nTASK [Ensure the ansible user is sudoer with no password required]\nchanged: [builder01.fale.io] \nPLAY RECAP *******************************************************\nbuilder01.fale.io : ok=4    changed=3    unreachable=0    failed=0\n\n```", "```\nansible-playbook -i inventory/production playbooks/groups/builders.yaml\n\n```", "```\nPLAY [builders] ************************************************** \nTASK [setup] *****************************************************\nok: [builder01.fale.io]\n .... \nPLAY RECAP *******************************************************\nbuilder01.fale.io : ok=23   changed=5    unreachable=0    failed=0\n\n```", "```\n- hosts: builders \n  user: ansible \n  tasks: \n  - name: Copy Spec file to user folder \n    copy: \n      src: ../../spec/demo-php-app.spec \n      dest: /home/ansible \n  - name: Ensure rpmbuild exists \n    file: \n      name: ~/rpmbuild \n      state: directory \n  - name: Ensure rpmbuild/SOURCES exists \n    file: \n      name: ~/rpmbuild/SOURCES \n      state: directory \n  - name: Download the sources \n    command: spectool -R -g demo-php-app.spec \n  - name: Ensure no SRPM files are present \n    command: rm -f ~/rpmbuild/SRPMS/* \n  - name: Build the SRPM file \n    command: rpmbuild -bs demo-php-app.spec \n  - name: Execute mock \n    shell: mock ~/rpmbuild/SRPMS/* \n  - name: Copy the arch binaries in the repo path \n    shell: cp -f /var/lib/mock/epel-7-x86_64/result/*.x86_64.rpm /var/www/repo \n  - name: Recreate the repo metadata \n    command: createrepo --database /var/www/repo \n- hosts: web \n  user: ansible \n  tasks: \n  - name: Ensure last version of demo-php-app is present \n    yum: \n      state: latest \n      update_cache: True \n      disable_gpg_check: True \n      name: demo-php-app \n    become: True \n\n```", "```\nansible-playbook -i inventory/production playbooks/manual/rpm_deploy.yaml\n\n```", "```\nPLAY [builders] ************************************************** \nTASK [setup] *****************************************************\nok: [builder01.fale.io] \nTASK [Copy SPEC file to user folder] *****************************\nchanged: [builder01.fale.io] \nTASK [Ensure rpmbuild exists] ************************************\nchanged: [builder01.fale.io] \nTASK [Ensure rpmbuild/SOURCES exists] ****************************\nchanged: [builder01.fale.io] \nTASK [Download the sources] **************************************\nchanged: [builder01.fale.io] \nTASK [Ensure no SRPM files are present] **************************\nchanged: [builder01.fale.io] \nTASK [Build the SRPM file] ***************************************\nchanged: [builder01.fale.io] \nTASK [Execute mock] **********************************************\nchanged: [builder01.fale.io] \nTASK [Copy the arch binaries in the repo path] *******************\nchanged: [builder01.fale.io] \nTASK [Recreate the repo metadata] ********************************\nchanged: [builder01.fale.io] \nPLAY [web] ******************************************************* \nTASK [setup] *****************************************************\nok: [ws01.fale.io]\nok: [ws02.fale.io] \nTASK [Update all packages] ***************************************\nchanged: [ws01.fale.io]\nchanged: [ws02.fale.io] \nPLAY RECAP *******************************************************\nbuilder01.fale.io : ok=10   changed=9    unreachable=0    failed=0\nws01.fale.io      : ok=2    changed=1    unreachable=0    failed=0\nws02.fale.io      : ok=2    changed=1    unreachable=0    failed=0\n\n```", "```\n%global commit0 7c288b9d80a6ef525c0cca8a744b32e018eaa386 \n%global shortcommit0 %(c=%{commit0}; echo ${c:0:7}) \n\nName:           hello-world \nVersion:        1.0 \nRelease:        1%{?dist} \nSummary:        Hello World example implemented in C \n\nLicense:        GPLv3+ \nURL:            https://github.com/Fale/hello-world \nSource0:        %{url}/archive/%{commit0}.tar.gz#/%{name}-%{shortcommit0}.tar.gz \n\nBuildRequires:  gcc \nBuildRequires:  make \n\n%description \nThe description for our Hello World Example implemented in C \n\n%prep \n%autosetup -n %{name}-%{commit0} \n\n%build \nmake %{?_smp_mflags} \n\n%install \n%make_install \n\n%files \n%license LICENSE \n%{_bindir}/hello \n\n%changelog \n* Tue Oct 11 2016 Fabio Alessandro Locati - 1.0-1 \n- Initial packaging \n\n```", "```\n%global commit0 7c288b9d80a6ef525c0cca8a744b32e018eaa386 \n%global shortcommit0 %(c=%{commit0}; echo ${c:0:7}) \n\n```", "```\nName:           hello-world \nVersion:        1.0 \nRelease:        1%{?dist} \nSummary:        Hello World example implemented in C \n\nLicense:        GPLv3+ \nURL:            https://github.com/Fale/hello-world \nSource0:        %{url}/archive/%{commit0}.tar.gz#/%{name}-%{shortcommit0}.tar.gz \n\n```", "```\nBuildRequires:  gcc \nBuildRequires:  make \n\n```", "```\n%description \nThe description for our Hello World Example implemented in C \n\n%prep \n%autosetup -n %{name}-%{commit0} \n\n%build \nmake %{?_smp_mflags} \n\n```", "```\n%install \n%make_install \n\n```", "```\n%files \n%license LICENSE \n%{_bindir}/hello \n\n```", "```\n%changelog \n* Tue Oct 11 2016 Fabio Alessandro Locati - 1.0-1 \n- Initial packaging \n\n```", "```\n- hosts: builders \n  user: ansible \n  tasks: \n  - name: Copy Spec file to user folder \n    copy: \n      src: ../../spec/hello-world.spec \n      dest: /home/ansible \n  - name: Ensure rpmbuild exists \n    file: \n      name: ~/rpmbuild \n      state: directory \n  - name: Ensure rpmbuild/SOURCES exists \n    file: \n      name: ~/rpmbuild/SOURCES \n      state: directory \n  - name: Download the sources \n    command: spectool -R -g hello-world.spec \n  - name: Ensure no SRPM files are present \n    command: rm -f ~/rpmbuild/SRPMS/* \n  - name: Build the SRPM file \n    command: rpmbuild -bs hello-world.spec \n  - name: Execute mock \n    shell: mock ~/rpmbuild/SRPMS/* \n  - name: Copy the arch binaries in the repo path \n    shell: cp -f /var/lib/mock/epel-7-x86_64/result/*.x86_64.rpm /var/www/repo \n  - name: Recreate the repo metadata \n    command: createrepo --database /var/www/repo \n- hosts: web \n  user: ansible \n  tasks: \n  - name: Ensure last version of hello-world is present \n    yum: \n      state: latest \n      update_cache: True \n      disable_gpg_check: True \n      name: hello-world \n    become: True \n\n```", "```\nansible-playbook -i inventory/production playbooks/manual/hello_deploy.yaml\nWe are going to have the following result:\nPLAY [builders] ************************************************** \nTASK [setup] *****************************************************\nok: [builder01.fale.io] \nTASK [Copy SPEC file to user folder] *****************************\nchanged: [builder01.fale.io] \nTASK [Ensure rpmbuild exists] ************************************\nok: [builder01.fale.io] \nTASK [Ensure rpmbuild/SOURCES exists] ****************************\nok: [builder01.fale.io] \nTASK [Download the sources] **************************************\nchanged: [builder01.fale.io] \nTASK [Ensure no SRPM files are present] **************************\nchanged: [builder01.fale.io] \nTASK [Build the SRPM file] ***************************************\nchanged: [builder01.fale.io] \nTASK [Execute mock] **********************************************\nchanged: [builder01.fale.io] \nTASK [Copy the arch binaries in the repo path] *******************\nchanged: [builder01.fale.io] \nTASK [Recreate the repo metadata] ********************************\nchanged: [builder01.fale.io] \nPLAY [web] ******************************************************* \nTASK [setup] *****************************************************\nok: [ws01.fale.io]\nok: [ws02.fale.io] \nTASK [Ensure last version of hello-world is present] *************\nchanged: [ws01.fale.io]\nchanged: [ws02.fale.io] \nPLAY RECAP *******************************************************\nbuilder01.fale.io : ok=10   changed=7    unreachable=0    failed=0\nws01.fale.io      : ok=2    changed=1    unreachable=0    failed=0\nws02.fale.io      : ok=2    changed=1    unreachable=0    failed=0\n\n```", "```\n[web-main] \nws[00:94].fale.io \n\n[web-canary] \nws[95:99].fale.io \n\n[web:children] \nweb-main \nweb-canary \n\n```", "```\npipelining=True \n\n```"]