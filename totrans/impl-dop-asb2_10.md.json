["```\n- name: Create a data container\n  docker_container:\n    name: mydata\n    image: busybox\n    volumes:\n      - /data\n\n```", "```\n- name: Remove MYSQL container\n  docker_container:\n    name: mysql\n    state: absent\n\n```", "```\n# The following task launches a mysql docker container\n- name: MySQL Database Container Launch\n   docker:\n   name: database\n   image: mysql:1.0\n   state: started\n\n```", "```\n# The following task stops a mysql docker container\n- name: MySQL Database Container Stop\n   docker:\n   name: database\n   image: mysql:1.0\n   state: stopped\n\n```", "```\n   pull: always\n\n```", "```\n- name: Starting a container and executing a command\n docker_container:\n name: sleepy\n image: ubuntu:14.04\n command: [\"sleep\", \"infinity\"]\n\n```", "```\n- name: Add container to CoprLAN and GuestLan networks\n  docker_container:\n  name: sleepy\n  networks:\n\n- name: CorpLan\n  ipv4_address: 172.1.10.1\n  links:\n   - sleeper\n   - name: GuestLan\n  ipv4_address: 172.1.10.2\n\n```", "```\n- name: Remove container from the CorpLan network\n  docker_container:\n  name: MySQL\n  networks:\n    - name: CorpLan\n  purge_networks: yes\n\n```", "```\n# This DOCKERFILE creates a docker image with Ubuntu 14.04 and Ansible installed\n# It also executes a playbook upon startup\nFROM ansible/ubuntu14.04-ansible:stable\n\n# This Defines the location for Ansible playbooks as /srv/example\nADD ansible /srv/example\nWORKDIR /srv/example\n\n# Execute Ansible with the playbook's primary entry point as myplaybook.yml\nRUN ansible-playbook myplaybook.yml -c local\nCMD [\"--help\"] \n\n```", "```\n- name: Pull a Docker Image\n  docker_image:\n  name: pacur/centos-7\n\n```", "```\n- name: Tag a Docker Image and Push to docker hub\n  docker_image:\n  name: pacur/centos-7\n  repository: myorg/myimage\n  tag: 1.1\n  push: yes\n\n```", "```\n- name: Tag a Docker Image and push to the local registry\n  docker_image:\n  name: MyCentOS\n  repository: localhost:5000/mycentos\n  tag: 1.0\n  push: yes\n\n```", "```\n- name: Build a Docker Image from a Dockerfile and push it to a private registry\n  docker_image:\n  path: ./test\n  name: registry.myorg.com/foo/test\n  tag: v1\n  push: yes\n\n```", "```\n# This DOCKERFILE creates a docker image with Ubuntu 14.04 and Ansible installed\n# It also executes a playbook upon startup\nFROM ansible/ubuntu14.04-ansible:stable\n\n# This Defines the location for Ansible playbooks as /srv/example\nADD ansible /srv/example\nWORKDIR /srv/example\n\n# Execute Ansible with the playbook's primary entry point as myplaybook.yml\nRUN ansible-playbook myplaybook.yml -c local\nCMD [\"--help\"] \n\n```", "```\n---\n- hosts: all\n  remote_user: root\n  tasks:\n    - name: Build Docker Image\n      docker_image:\n      path: /opt/test\n      name: myimage\n\n```", "```\n---\n- hosts: all\n  tasks:\n   - name: Installs nginx web server on a Docker Image\n     apt: pkg=nginx state=installed update_cache=true\n     notify:\n       - start nginx\n\nhandlers:\n - name: start nginx\n   service: name=nginx state=started\n\n```", "```\nArchiving an Image:\n- name: Archive A Docker Image as a TAR file\n docker_image:\n name: registry.ansible.com/foo/sinatra\n tag: v1\n archive_path: sinatra.tar\n\n```", "```\n- name: Load a Docker Image from a TAR archive and push to a private registry\n docker_image:\n name: localhost:5000/foo/sinatra\n tag: v1\n push: yes\n load_path: sinatra.tar\n\n```", "```\n- name: Inspect a single Docker image\n docker_image_facts:\n name: foo/centos-7\n\n```", "```\n- name: Inspect multiple Docker images\n docker_image_facts:\n name:\n - foo/centos-7\n - sinatra\n\n```", "```\n[{'Container': 'e83a452b8fb8ff43oj094j4050131ca5c863629a47639530d9ad2008d610', 'Name': 'registry:2', 'Author': '', 'GraphDriver': {'Data': None, 'Name': 'aufs'}, 'Architecture': 'amd64', 'VirtualSize': 165808884, 'ContainerConfig': {'Cmd': ['/bin/sh', '-c', '#(nop) CMD [\"/etc/docker/registry/config.yml\"]'], 'Env': ['PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'], 'StdinOnce': False, 'Hostname': 'e5c68db50333', 'WorkingDir': '', 'Entrypoint': ['/bin/registry'], 'Volumes': {'/var/lib/registry': {}}, 'OnBuild': [], 'OpenStdin': False, 'Tty': False, 'Domainname': '', 'Image': 'c72dce2618dc8groeirgjeori444c2b1e64e0205ead5befc294f8111da23bd6a2c799', 'Labels': {}, 'ExposedPorts': {'5000/tcp': {}}, 'User': '', 'AttachStdin': False, 'AttachStderr': False, 'AttachStdout': False}, 'Os': 'linux', 'RepoTags': ['registry:2'], 'Comment': '', 'DockerVersion': '1.9.1', 'Parent': 'f0b1f729f784b755e7bf9c8c2e65d8a0a35a533769c2588f02895f6781ac0805', 'Config': {'Cmd': ['/etc/docker/registry/config.yml'], 'Env': ['PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'], 'StdinOnce': False, 'Hostname': 'e5c68db50333', 'WorkingDir': '', 'Entrypoint': ['/bin/registry'], 'Volumes': {'/var/lib/registry': {}}, 'OnBuild': [], 'OpenStdin': False, 'Tty': False, 'Domainname': '', 'Image': 'c72dce2618dc409834095834jt4ggf5ead5befc294f8111da23bd6a2c799', 'Labels': {}, 'ExposedPorts': {'5000/tcp': {}}, 'User': '', 'AttachStdin': False, 'AttachStderr': False, 'AttachStdout': False}, 'Created': '2016-03-08T21:08:15.399680378Z', 'RepoDigests': [], 'Id': '53773d8552f07b7340958340fj32094jfd67b344141d965463a950a66e08', 'Size': 0}]\n\n```"]