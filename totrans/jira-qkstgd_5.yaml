- en: Jira Schemes and Configuring Project Workflow
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jira 方案与配置项目工作流
- en: In this chapter, we will begin customizing Jira. Thus far, we have covered the
    basic functionality of the tool and have gone through the unique features of Jira
    Core, Jira Software, and Jira Service Desk. Learning how to customize Jira will
    help you tweak it for your own specific requirements.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将开始定制 Jira。到目前为止，我们已经介绍了工具的基本功能，并且走过了 Jira Core、Jira Software 和 Jira
    Service Desk 的独特功能。学习如何定制 Jira 将帮助你根据自身需求调整它。
- en: We will begin with understanding the concept of Jira schemes and then we will
    learn how to customize a workflow in our project.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从理解 Jira 方案的概念开始，然后学习如何在我们的项目中定制工作流。
- en: 'Topics covered in this chapter include the following:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涉及的主题包括以下内容：
- en: The various types of user in Jira
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jira 中的各种类型用户
- en: An overview of various schemes in Jira
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jira 中各种方案概览
- en: Customizing Jira workflow
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义 Jira 工作流
- en: The various types of user in Jira
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jira 中的各种类型用户
- en: At the beginning of the book, we created a new Jira instance, where we created
    new projects and also worked on those projects to understand the features. We
    were able to do that only because we also have the full admin rights on our instance.
    In Jira, however, not everyone can be an administrator.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的开头，我们创建了一个新的 Jira 实例，在其中创建了新项目，并且在这些项目上工作，以便了解其功能。我们能够做到这一点，因为我们也对实例拥有完整的管理员权限。然而，在
    Jira 中，并非每个人都可以成为管理员。
- en: 'Primarily, there are three types of users in Jira, and these are as follows:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 主要有三种类型的用户在 Jira 中，分别如下：
- en: User
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户
- en: Project administrator
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目管理员
- en: Jira administrator
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jira 管理员
- en: User
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用户
- en: Anyone who can log in to Jira is a user and, in most cases, a user will consume
    a Jira license as well, except in Jira Service Desk, where customers don't count
    toward the license.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 任何能够登录 Jira 的人都是用户，且在大多数情况下，用户也会占用一个 Jira 许可证，除了在 Jira Service Desk 中，客户不算在许可证数量内。
- en: A user is typically your developers or testers in the development team, and
    an agent in the service desk team. In most cases, users will work on their issues
    and tasks. More permissions can, however, be assigned to a user.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 用户通常是开发团队中的开发人员或测试人员，以及服务台团队中的代理。在大多数情况下，用户会处理他们的问题和任务。然而，可以向用户分配更多权限。
- en: Project administrator
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 项目管理员
- en: Project administrators are usually managers or leads. They are responsible for
    the whole project. They are quite similar to users, but usually have more rights
    in relation to the project. For instance, they can add people to a project, manage
    project milestones, and they have more authority as regards actual issues.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 项目管理员通常是经理或团队负责人。他们负责整个项目。与用户相比，他们通常在项目中拥有更多权限。例如，他们可以向项目中添加成员，管理项目里程碑，并且在实际问题上拥有更多权限。
- en: Jira administrator
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jira 管理员
- en: Apart from users and project administrators, Jira administrators have the authority
    to manage your Jira instance. They can create projects, users, customize project
    workflows, add more custom fields, and are also responsible for the performance
    of the whole instance.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 除了用户和项目管理员外，Jira 管理员还有权管理你的 Jira 实例。他们可以创建项目、用户，定制项目工作流，添加更多自定义字段，同时还负责整个实例的性能。
- en: Jira administrators usually receive requests from other people to customize
    their projects. Ideally, you should not give this permission to many people in
    your team. Only a few people should have responsibility for managing your instance.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Jira 管理员通常会接到其他人的请求来定制他们的项目。理想情况下，你不应将此权限授予团队中的太多人。只有少数人应当负责管理你的实例。
- en: Overview of various schemes in Jira
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jira 中各种方案概览
- en: When you create a project in Jira, the first thing that you do is create some
    issues under it. When the issues are created, you may want to assign it to someone.
    The person who is supposed to work on the issue will then start working on the
    issue and will eventually resolve it. It is a very simple example of the life
    cycle of the issue in Jira, but there are many things happening in the background.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在 Jira 中创建一个项目时，首先要做的是在项目下创建一些问题。问题创建后，你可能需要将其分配给某个人。负责处理该问题的人会开始着手处理该问题，并最终将其解决。这是
    Jira 中问题生命周期的一个非常简单的示例，但在后台发生了很多事情。
- en: The way you work on the project, the kinds of issue you create, the fields you
    capture in the issue, and its life cycle stages and behavior, are defined by various
    schemes in a Jira project.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 你在项目中的工作方式、创建的问题类型、在问题中捕获的字段、以及其生命周期阶段和行为，都是由 Jira 项目中的各种方案定义的。
- en: The project that we created earlier in this book involved utilizing the default
    template that comes with Jira. The default templates are nothing but a collection
    or set of various schemes. These templates help us to get started with Jira very
    quickly and, based on your development methodology, you can choose from various
    types of templates that are based on standard practices observed in the industry.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中我们之前创建的项目涉及使用 Jira 提供的默认模板。默认模板不过是各种方案的集合或集合。这些模板帮助我们非常快速地开始使用 Jira，根据你的开发方法论，你可以选择基于行业标准实践的各种类型模板。
- en: However, every team is different, and they may have their own expectations from
    a Jira project. Further customization can be done either on a project-by-project
    basis, or according to a set of projects using the same set of schemes, prior
    to modifying them. Let's quickly understand the purpose of the various schemes
    in Jira.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，每个团队都有自己的特点，他们可能对 Jira 项目有不同的期望。可以根据项目逐个进行自定义，或者根据使用相同方案集的一组项目来进行修改。让我们快速了解
    Jira 中各种方案的目的。
- en: Issue type schemes
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题类型方案
- en: In Jira, we can have different issue types, such as Epic, Story, Task, and Bug.
    You can always create more issue types if you want. Issue type schemes define
    which issue types will be available within a particular project.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Jira 中，我们可以有不同的问题类型，如 Epic、Story、Task 和 Bug。如果需要，你始终可以创建更多的问题类型。问题类型方案定义了在特定项目中将提供哪些问题类型。
- en: A typical scrum-based project in Jira software would have Story, Bug, Epic,
    Task, and Sub-task, which is defined by the issue type scheme used in the project.
    One scheme can always be shared by other projects in Jira.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Jira 软件中的典型 Scrum 项目会有 Story、Bug、Epic、Task 和 Sub-task，这由项目中使用的问题类型方案定义。一个方案可以始终被
    Jira 中的其他项目共享。
- en: Workflow schemes
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作流方案
- en: 'Workflow defines the life cycle of an issue in Jira. Within a project, you
    can have one workflow for all the issue types or separate workflows for each one
    of them. If you are using Jira Core with issue types such as Task and Sub-task,
    then creating a single workflow with three statues: Open, In Progress and Closed—would
    work, but, for a software development project, you may want to have separate workflows
    for Bug and Story.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 工作流定义了问题在 Jira 中的生命周期。在一个项目中，你可以为所有问题类型使用一个工作流，或者为每个问题类型使用不同的工作流。如果你使用 Jira
    Core，并且有 Task 和 Sub-task 这样的任务类型，那么创建一个包含三个状态的工作流：Open、In Progress 和 Closed 就可以工作。但对于一个软件开发项目，你可能希望为
    Bug 和 Story 设置不同的工作流。
- en: 'Workflow schemes define which workflow will be used by which issue type in
    the project. The following table provides you with some examples of workflow schemes:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 工作流方案定义了项目中每个问题类型将使用的工作流。下表为你提供了一些工作流方案的示例：
- en: '| **Project** | **Issue types** | **Workflows** |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| **项目** | **问题类型** | **工作流** |'
- en: '| Legal project | TaskContract | Legal workflow (Task and Contract) |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| 法律项目 | TaskContract | 法律工作流（Task 和 Contract） |'
- en: '| Software project | EpicStoryBugTask | Agile Workflow (Epic and Story)Defect
    Workflow (Bug and Task) |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| 软件项目 | EpicStoryBugTask | 敏捷工作流（Epic 和 Story）缺陷工作流（Bug 和 Task） |'
- en: When new workflows are created, you can attach them to an existing issue type
    in the same workflow scheme used in the project. For example, in our preceding
    software project, if, in future, a third workflow is needed for Epic, it can be
    done by simply modifying an existing workflow scheme.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当创建新工作流时，你可以将它们附加到同一工作流方案中项目的现有问题类型。例如，在我们之前的一个软件项目中，如果将来需要为 Epic 创建第三个工作流，可以通过简单地修改现有的工作流方案来实现。
- en: Issue type screen schemes
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题类型屏幕方案
- en: When you create issues in Jira, the pop-up window where you fill in the details
    is nothing but a screen. It is a collection of fields. You would normally use
    screens to add/remove fields.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在 Jira 中创建问题时，填写详细信息的弹出窗口不过是一个屏幕，它是字段的集合。你通常会使用屏幕来添加或移除字段。
- en: 'In Jira, screens are associated with three operations: create, edit, and view.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Jira 中，屏幕与三种操作关联：创建、编辑和查看。
- en: Different screens can be used when you create an issue, when you edit it, and
    when you are looking at the issue.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 创建问题时、编辑时以及查看问题时，可以使用不同的屏幕。
- en: A screen scheme defines the mapping of the screen and an operation.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕方案定义了屏幕和操作之间的映射关系。
- en: The issue type screen scheme defines the mapping of the screen scheme and an
    issue type.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 问题类型屏幕方案定义了屏幕方案和问题类型之间的映射关系。
- en: Field configuration schemes
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 字段配置方案
- en: When you create an issue in your project, you may have already noticed that
    some fields are mandatory, especially project, issue type, and summary, but if
    you want to make other fields mandatory as well, then you need to do that using
    field configurations. The other purpose of field configurations is to also hide
    certain fields completely.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在项目中创建一个问题时，你可能已经注意到一些字段是必填的，尤其是项目、问题类型和摘要，但如果你想让其他字段也成为必填项，则需要通过字段配置来实现。字段配置的另一个作用是完全隐藏某些字段。
- en: The behavior of the field that you define—Required/Hidden is also mapped to
    the issue type. For instance, a field such as Due Date can be made mandatory for
    Bug, but not an Epic in the same project.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 你定义的字段行为——必填/隐藏，也会映射到问题类型。例如，像到期日期这样的字段可以设为 Bug 的必填项，但在同一个项目中的 Epic 不必是必填项。
- en: Permission schemes
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 权限方案
- en: Once you have access to the project, then everything that you can do within
    that project is defined by the permission scheme configured for that project.
    There are various permissions related to who creates issues, edits issues, closes
    issues, adds a comment, adds attachments, and much more.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你获得了对项目的访问权限，那么你在该项目中能够执行的所有操作，都是由为该项目配置的权限方案所定义的。权限涉及到谁可以创建问题、编辑问题、关闭问题、添加评论、添加附件等。
- en: When a new project is created, it comes with a default permission scheme that
    can be modified further if required. The individual permissions within a scheme
    can be given to an individual, project role, or a group of users in Jira.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 当创建一个新项目时，它会带有一个默认的权限方案，如果需要，可以进一步修改。权限方案中的各个权限可以分配给个人、项目角色或 Jira 中的用户组。
- en: Notification schemes
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通知方案
- en: Jira can send email alerts to various people regarding different events. When
    the new issue is created, an email can be sent to the reporter of the issues.
    There are various events related to the issue and the workflow transitions. These
    notifications are configured for a variety of such events and can be modified
    if you don't want to receive lots of emails from the system.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Jira 可以向不同的人发送关于不同事件的电子邮件提醒。当新问题被创建时，可以向问题的报告人发送一封电子邮件。与问题和工作流转换相关的事件有很多种。这些通知已为各种事件进行配置，如果你不想接收系统发送的过多电子邮件，可以进行修改。
- en: Now that we know the purpose of various schemes, let's now modify the software
    project that we created earlier and create a new workflow.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了各种方案的用途，接下来让我们修改之前创建的软件项目，并创建一个新的工作流。
- en: Customizing Jira workflow
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义 Jira 工作流
- en: In [Chapter 3](a833f753-0310-4b30-8097-f5238af90724.xhtml), *Using Jira Software
    for Development Teams*, we created a Jira software project and familiarized ourselves
    with its various functionalities. We created a sample scrum project that comes
    with predefined configurations and schemes for scrum-based methodologies.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [第3章](a833f753-0310-4b30-8097-f5238af90724.xhtml)，*使用 Jira 软件进行开发团队管理*，我们创建了一个
    Jira 软件项目，并熟悉了其各种功能。我们创建了一个示例 Scrum 项目，该项目提供了针对 Scrum 方法学的预定义配置和方案。
- en: Open Sample Scrum Project and go to Project settings | Workflows.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 打开示例 Scrum 项目，进入项目设置 | 工作流。
- en: 'You will notice that there is a workflow scheme with one workflow already in
    that project used by all the available issue types. In the following screen, if
    you click on the diagram link, you will then be able to look at the workflow associated
    with the project:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到，在这个项目中已有一个工作流方案，且该工作流已被所有可用的问题类型使用。在以下屏幕中，如果点击图表链接，你将能查看与该项目相关的工作流：
- en: '![](img/572fceaf-9b8a-464c-a186-33e5ddd9e3b2.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/572fceaf-9b8a-464c-a186-33e5ddd9e3b2.png)'
- en: Figure 1
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1
- en: 'As you can see on the following screen, the workflow has three states: TO DO, DONE, and IN
    PROGRESS. The All sign signifies that you can go to any state directly; in other
    words, you don''t have to follow a specific path in order to resolve the issue:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如下图所示，工作流有三个状态：TO DO（待办）、DONE（完成）和 IN PROGRESS（进行中）。All（所有）标志表示你可以直接进入任何状态；换句话说，你不必按照特定路径来解决问题：
- en: '![](img/7ecc5f6e-5fd6-4037-a738-b4f5a939a8af.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7ecc5f6e-5fd6-4037-a738-b4f5a939a8af.png)'
- en: Figure 2
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2
- en: 'The preceding workflow is already working well, but we want to create our own
    workflow, similar to this one, but with a few specific requirements, as mentioned
    in the following:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的工作流已经运行良好，但我们想创建自己的工作流，类似于这个，但有一些具体要求，如下所述：
- en: Add a new state: ON HOLD.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加一个新状态：ON HOLD（暂停）。
- en: The issue cannot be sent to DONE directly. It has to go through the IN PROGRESS
    status first.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题不能直接发送到 DONE（完成）。它必须首先经过 IN PROGRESS（进行中）状态。
- en: 'The following diagram represents the workflow that we will be creating and
    using in our project for the Bug issue type only:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表表示我们将为 Bug 问题类型创建并使用的工作流：
- en: '![](img/012c626b-01d5-49db-9a52-762480ebf88a.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/012c626b-01d5-49db-9a52-762480ebf88a.png)'
- en: Figure 3
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3
- en: New status
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 新状态
- en: In the proposed new workflow, there is a new status called ON HOLD, which we
    first need to create in our Jira instance.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在提议的新工作流中，有一个新的状态叫做 ON HOLD，我们首先需要在我们的 Jira 实例中创建它。
- en: Go to Jira settings | Issues | Statuses (under ISSUE ATTRIBUTES) and click on
    the Add status button in the top-right corner.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 转到 Jira 设置 | 问题 | 状态（在问题属性下）并点击右上角的添加状态按钮。
- en: 'Enter `On Hold` under Name, and `Issue is on hold` under Description, and then
    click on the Add button to create a new status, demonstrated as follows:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在名称中输入 `On Hold`，在描述中输入 `Issue is on hold`，然后点击添加按钮以创建一个新状态，如下所示：
- en: '![](img/43e525ad-7779-4c44-ba22-e6d18a266aba.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/43e525ad-7779-4c44-ba22-e6d18a266aba.png)'
- en: Figure 4
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4
- en: Creating a new workflow
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建新的工作流
- en: Let's now create our new workflow.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来创建我们的新工作流。
- en: 'Go to Jira settings | Issues | Workflows (Under WORKFLOWS) and click on the
    Add workflow button in the top-right corner and enter the Name as `Bug workflow`,
    `This is the Bug workflow` under Description, and then click on the Add button,
    as demonstrated in the following screenshot:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 转到 Jira 设置 | 问题 | 工作流（在工作流下）并点击右上角的添加工作流按钮，输入名称为 `Bug workflow`，在描述中填写 `This
    is the Bug workflow`，然后点击添加按钮，如下图所示：
- en: '![](img/0b1cf8b1-9866-4111-8174-3ad1002affce.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0b1cf8b1-9866-4111-8174-3ad1002affce.png)'
- en: Figure 5
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5
- en: On the next screen, you will be presented with the options to edit the workflow.
    There are two modes to edit the workflow—Diagram and Text, both the modes will
    more or less let you do the same thing with few options available to each mode
    but we will be using the Diagram mode to create our workflow.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个屏幕上，你将看到编辑工作流的选项。有两种模式可以编辑工作流——图表模式和文本模式，两种模式基本上可以做相同的事情，不过每种模式有一些不同的选项，但我们将使用图表模式来创建我们的工作流。
- en: 'Click on the Add status option on the left-hand side and add the TO DO, IN
    PROGRESS, ON HOLD, and DONE statuses in your workflow, demonstrated as follows:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 点击左侧的添加状态选项，并在你的工作流中添加 TO DO、IN PROGRESS、ON HOLD 和 DONE 状态，如下所示：
- en: '![](img/370e8cb5-1510-45ef-ac1e-9d7b6ce556a5.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](img/370e8cb5-1510-45ef-ac1e-9d7b6ce556a5.png)'
- en: Figure 6
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6
- en: The statues will now be added to your workflow. We have made some progress,
    but we still need to do a few more things, primarily, removing unwanted statuses,
    adding transitions, and changing the Create transition to start from TO DO instead
    of OPEN state, this will ensure that the first state in the workflow is TO DO.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这些状态将现在被添加到你的工作流中。我们已经取得了一些进展，但我们仍然需要做一些事情，主要是移除不需要的状态，添加转换，并将创建的转换更改为从 TO DO
    状态开始，而不是 OPEN 状态，这将确保工作流中的第一个状态是 TO DO。
- en: 'Click on Create transition and change it to begin with from the OPEN status
    to the TO DO status instead by simply dragging the arrow and dropping it on TO
    DO, demonstrated as follows:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 点击创建转换，并将其更改为从 OPEN 状态开始，到 TO DO 状态，只需拖动箭头并将其放在 TO DO 上，如下所示：
- en: '![](img/e1075ba6-33fb-4a40-ba91-c4dc1b49aa1e.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e1075ba6-33fb-4a40-ba91-c4dc1b49aa1e.png)'
- en: Figure 7
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7
- en: Now click on the OPEN status and, in the pop-up window, click on the Remove
    status link, as shown in the preceding screenshot. Finally, click on the Remove
    button in the Confirm Remove Status dialog box.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 现在点击 OPEN 状态，在弹出的窗口中，点击移除状态链接，如前面的截图所示。最后，在确认移除状态对话框中点击移除按钮。
- en: We now have the necessary statuses in our workflow. We need to create a transition
    between those statuses as per the requirements of our workflow.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们在工作流中有了必要的状态。我们需要根据工作流的要求，在这些状态之间创建转换。
- en: 'First, click on the TO DO status, drag a line from this status to the IN PROGRESS
    status. A pop-up window called Add Transition will appear, shown as follows, where
    you will be asked to enter the Name of the transitions, which could be the same
    as your destination status or any name of your choosing:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，点击 TO DO 状态，从该状态拖动一条线到 IN PROGRESS 状态。将出现一个名为添加转换的弹出窗口，如下所示，你将被要求输入转换的名称，可以与目标状态相同，或使用你选择的任何名称：
- en: '![](img/f0f3a6ef-22e3-46ac-9525-bb1f76bfa8ee.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f0f3a6ef-22e3-46ac-9525-bb1f76bfa8ee.png)'
- en: Figure 8
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8
- en: Remember that this transition name will appear to the end user when they work
    on the Jira issue. Click on the Add button to add a new transition.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，这个转换名称将在用户处理 Jira 问题时显示。点击添加按钮以添加新的转换。
- en: 'The moment you add the transition, a line with an arrow representing a transition
    will be created between these two statues. The direction of the arrow is also
    important here. To add a transition back from IN PROGRESS to TO DO, you need to
    add one more transition, demonstrated as follows:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 当你添加转换时，一个代表转换的箭头线将会在这两个状态之间创建。箭头的方向在这里也很重要。如果你想从“进行中”转换回“待办”，你需要再添加一个转换，如下所示：
- en: '![](img/6d83248a-e0f3-4050-af1e-2afe1f4cc3e3.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6d83248a-e0f3-4050-af1e-2afe1f4cc3e3.png)'
- en: Figure 9
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9
- en: 'Now, refer to our proposed workflow in the preceding diagram and create the
    remainder of the transitions. Your final workflow should look something like the
    following diagram:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，参考前面图示中的工作流，创建其余的转换。你的最终工作流应该像下面的图示一样：
- en: '![](img/0a959775-2e44-4f47-9359-e856abdb3b5f.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0a959775-2e44-4f47-9359-e856abdb3b5f.png)'
- en: Figure 10
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10
- en: Our workflow is ready and all we need to do is use it in our project. We have
    just learned how to create a workflow, which is great, but there are lots of other
    customizations that can be done using workflow configurations, such as adding
    conditions and validators to our transitions.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的工作流已经准备好了，接下来我们需要做的就是在我们的项目中使用它。我们刚刚学会了如何创建工作流，这非常棒，但使用工作流配置还可以进行很多其他自定义操作，比如为我们的转换添加条件和验证器。
- en: Let's now go back to our project and use this workflow.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们回到项目中并使用这个工作流。
- en: 'Go to Project settings | Workflows and then click on the Add Workflow button
    in the top-left corner, demonstrated as follows, and then click on the Add Existing
    option:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 进入项目设置 | 工作流，然后点击左上角的“添加工作流”按钮，如下所示，然后点击“添加现有”选项：
- en: '![](img/fd0b41e8-41cf-45f2-9770-d10d34523898.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fd0b41e8-41cf-45f2-9770-d10d34523898.png)'
- en: Figure 11
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11
- en: 'In the Add Existing Workflow popup, find the Bug workflow that you just created
    and click on the Next button, as follows:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在“添加现有工作流”弹出窗口中，找到你刚创建的 Bug 工作流并点击“下一步”按钮，如下所示：
- en: '![](img/76f2abbf-6b83-4235-8127-2c784d4eb3b5.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/76f2abbf-6b83-4235-8127-2c784d4eb3b5.png)'
- en: Figure 12
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12
- en: 'Then, in the Assign Issue Types to "Bug workflow" popup, select Bug and click
    on the Finish button, demonstrated as follows:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在“将问题类型分配给‘Bug 工作流’”弹出窗口中，选择 Bug 并点击“完成”按钮，如下所示：
- en: '![](img/a1197b12-7318-4bca-bfbf-e08c81b5df16.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a1197b12-7318-4bca-bfbf-e08c81b5df16.png)'
- en: Figure 13
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13
- en: 'Finally, click on the Publish button at the top, demonstrated as follows:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，点击顶部的“发布”按钮，如下所示：
- en: '![](img/dc7b6a6d-ab8b-409e-98ac-f68895c45169.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dc7b6a6d-ab8b-409e-98ac-f68895c45169.png)'
- en: Figure 14
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14
- en: 'In the next set of screens, you may need to Associate any existing issue with
    the new workflow. Just follow the process and you will then have a new workflow
    in your existing workflow scheme for your project, shown as follows:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的屏幕中，你可能需要将任何现有问题与新工作流关联。只需按照流程操作，你将在项目的现有工作流方案中添加一个新工作流，如下所示：
- en: '![](img/d8a059f8-751c-48e4-a597-87bb70a842eb.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d8a059f8-751c-48e4-a597-87bb70a842eb.png)'
- en: Figure 15
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15
- en: 'You can now see this new Bug workflow in action when you work on the bugs in
    your project. Just create a new issue of type bug in your project and you will
    notice that you now have a new workflow with custom transitions and statuses,
    demonstrated as follows:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当你在项目中处理 Bug 时，你可以看到这个新的 Bug 工作流在实际运行中。只需在项目中创建一个新的 Bug 类型的问题，你会发现你现在有了一个带有自定义转换和状态的新工作流，如下所示：
- en: '![](img/7d761c02-b720-43db-a75c-4deed1d12414.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7d761c02-b720-43db-a75c-4deed1d12414.png)'
- en: Figure 16
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图 16
- en: By way of good practice, always check whether the new workflow is behaving as
    you expected.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 作为良好的实践，始终检查新工作流是否按预期运行。
- en: Summary
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Congratulations! You have now successfully started your journey of customizing
    Jira by creating your own workflow. In this chapter, we learned a lot, starting
    with an overview of various types of users in Jira and then we spent lot of time
    going through the process of creating a custom workflow and also using it in our
    existing project.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你现在已经成功开始了通过创建自己的工作流来自定义 Jira 的旅程。在本章中，我们学到了很多东西，从概览 Jira 中的各种用户类型开始，然后花了大量时间了解如何创建自定义工作流，并且如何在我们现有的项目中使用它。
- en: In the next chapter, we will continue customizing Jira further and take a look
    at how we can add more fields to our project by using screens and making sure
    that those new fields are visible only on a specific type of issue. We will also
    take a look at various permissions and learn how to modify them.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将继续进一步自定义Jira，并看看如何通过使用屏幕添加更多字段到我们的项目中，同时确保这些新字段仅在特定类型的问题上可见。我们还将查看各种权限，并学习如何修改它们。
