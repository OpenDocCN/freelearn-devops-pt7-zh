["```\n    variable \"name\" {\n      description = \"Base name for resources\"\n      type        = string\n      default     = \"iac-wordpress\"\n    }\n    variable \"region\" {\n      description = \"The region to deploy to\"\n      type        = string\n      default     = \"uksouth\"\n    }\n    variable \"tags\" {\n      description = \"The default tags to use across all of our resources\"\n      type        = map(any)\n      default = {\n        project     = \"iac-wordpress\"\n        environment = \"example\"\n        deployed_by = \"terraform\"\n      }\n    }\n    ```", "```\n    variable \"address_space\" {\n      description = \"The address space of the network\"\n      type        = string\n      default     = \"10.0.0.0/24\"\n    }\n    ```", "```\n    variable \"subnets\" {\n      description = \"The subnets to deploy the network\"\n      type = map(object({\n        name                  = string\n        address_prefix_size   = number\n        address_prefix_number = number\n      }))\n      default = {\n        subnet_001 = {\n          name                  = \"subnet001\"\n          address_prefix_size   = \"3\"\n          address_prefix_number = \"0\"\n        },\n        subnet_002 = {\n          name                  = \"subnet002\"\n          address_prefix_size   = \"3\"\n          address_prefix_number = \"1\"\n        },\n        subnet_003 = {\n          name                  = \"subnet003\"\n          address_prefix_size   = \"3\"\n          address_prefix_number = \"2\"\n        },\n        subnet_004 = {\n          name                  = \"subnet004\"\n          address_prefix_size   = \"3\"\n          address_prefix_number = \"3\"\n        },\n      }\n    }\n    ```", "```\n    resource \"aws_vpc\" \"network\" {\n      cidr_block           = var.address_space\n      tags                 = merge(var.tags, tomap({ Name = \"${var.name}-vpc\" }))\n    }\n    ```", "```\n    resource \"azurerm_virtual_network\" \"network\" {\n      resource_group_name = azurerm_resource_group.resource_group.name\n      location            = azurerm_resource_group.resource_group.location\n      name                = \"vnet-${var.name}-${var.region}\"\n      address_space       = [var.address_space]\n      tags                = merge(var.tags, tomap({ Name = \"vnet-${var.name}-${var.region}\" }))\n    }\n    ```", "```\n    resource \"aws_subnet\" \"subnets\" {\n      for_each          = var.subnets\n      vpc_id            = aws_vpc.network.id\n      cidr_block        = cidrsubnet(\"${aws_vpc.network.cidr_block}\", each.value.address_prefix_size, each.value.address_prefix_number)\n      tags              = merge(var.tags, tomap({ Name = \"${var.name}-${each.value.name}\" }))\n    }\n    ```", "```\n    resource \"azurerm_subnet\" \"subnets\" {\n      for_each             = var.subnets\n      name                 = each.value.name\n      resource_group_name  = azurerm_resource_group.resource_group.name\n      virtual_network_name = azurerm_virtual_network.network.name\n      address_prefixes     = [cidrsubnet(\"${azurerm_virtual_network.network.address_space[0]}\", each.value.address_prefix_size, each.value.address_prefix_number)]\n    }\n    ```", "```\n- name: Launch an Azure Virtal Machine instance and supporting resources using Terraform\n  community.general.terraform:\n    project_path: \"./terraform\"\n    state: \"present\"\n    complex_vars: true\n    variables:\n      name: \"{{ app.name }}\"\n      region: \"{{ azure.region }}\"\n      address_space: \"{{ azure.vnet_address_space }}\"\n      vm_admin_username: \"{{ azure.vm_admin_username }}\"\n      vm_ssh_public_key: \"{{ lookup('file', '{{ ssh.public_key_path }}') }}\"\n      tags:\n        app: \"{{ app.name }}\"\n        env: \"{{ app.env }}\"\n        deployed_by: \"{{ app.deployed_by }}\"\n    force_init: true\n  register: terraform_output\n```", "```\n- name: Add the Virtual Machine to the vmgroup group\n  ansible.builtin.add_host:\n    groups: \"{{ host_group_name }}\"\n    hostname: \"{{ terraform_output.outputs.vm_name.value }}\"\n    ansible_host: \"{{ terraform_output.outputs.public_ip.value }}\"\n    ansible_port: \"{{ ssh.port_number }}\"\n```", "```\n- name: set some facts based on the virtual machine we just launched using Terraform\n  ansible.builtin.set_fact:\n    ansible_ssh_private_key_file: \"{{ ssh.private_key_path }}\"\n    ansible_ssh_user: \"{{ azure.vm_admin_username }}\"\n    the_public_ip: \"{{ terraform_output.outputs.public_ip.value }}\"\n    the_vm_name: \"{{ terraform_output.outputs.vm_name.value }}\"\n```", "```\n$ ansible-playbook -i inv site.yml\n```", "```\n$ ansible-playbook -i inv destroy.yml\n```", "```\n$ terraform apply -var region=\"eu-west-1\"\n```", "```\n$ terraform apply -var region=\"eu-west-1\" -var address_space=\"172.16.0.0/24\"\n```", "```\n$ ansible-playbook -i inv site.yml --extra-vars 'host_group_name: \"azure_vms \"'\n```", "```\npage:\n  title: \"Infrastructure as Code for Beginners\"\n  body: \"This Virtual Machine was launched using Terraform and Ansible\"\n```", "```\n$ ansible-playbook -i inv site.yml --extra-vars '{\"page\": { \"title\": \"Changing a variable at runtime\", \"body\": \"Redeploying using a different variable\" }}'\n```", "```\nAdd variables to this Terraform code using the current values as the defaults, making sure to add a description and the type of variable.\n```", "```\n```", "```\nvariable \"resource_group_name\" {\n  description = \"The name of the Azure resource group.\"\n  type        = string\n  default     = \"example\"\n}\nvariable \"location\" {\n  description = \"The location of the Azure resource group.\"\n  type        = string\n  default     = \"West Europe\"\n}\nresource \"azurerm_resource_group\" \"example\" {\n  name     = var.resource_group_name\n  location = var.location\n}\n```", "```\n    module \"azure_region\" {\n      source       = \"claranet/regions/azurerm\"\n      azure_region = var.region\n    }\n    ```", "```\n    module \"rg\" {\n      source      = \"claranet/rg/azurerm\"\n      location    = module.azure_region.location\n      client_name = var.name\n      environment = var.environment\n      stack       = var.project_name\n    }\n    ```", "```\n    module \"azure_virtual_network\" {\n      source              = \"claranet/vnet/azurerm\"\n      environment         = var.environment\n      location            = module.azure_region.location\n      location_short      = module.azure_region.location_short\n      client_name         = var.name\n      stack               = var.project_name\n      resource_group_name = module.rg.resource_group_name\n      vnet_cidr           = var.address_space\n    }\n    ```", "```\n    module \"azure_network_subnet\" {\n      for_each             = var.subnets\n      source               = \"claranet/subnet/azurerm\"\n      environment          = var.environment\n      location_short       = module.azure_region.location_short\n      custom_subnet_name   = each.value.name\n      client_name          = var.name\n      stack                = var.project_name\n      resource_group_name  = module.rg.resource_group_name\n      virtual_network_name = module.azure_virtual_network.virtual_network_name\n      subnet_cidr_list     = [cidrsubnet(\"${module.azure_virtual_network.virtual_network_space[0]}\", each.value.address_prefix_size, each.value.address_prefix_number)]\n    }\n    ```", "```\nmodule \"azure_network_subnet_001\" {\n  for_each             = var.subnets\n  source               = \"claranet/subnet/azurerm\"\n  environment          = var.environment\n  location_short       = module.azure_region.location_short\n  custom_subnet_name   = each.value.name\n  client_name          = var.name\n  stack                = var.project_name\n  resource_group_name  = module.rg.resource_group_name\n  virtual_network_name = module.azure_virtual_network.virtual_network_name\n  subnet_cidr_list     = [\"10.0.0.0/27\"]\n  subnet_delegation = {\n    flexibleServers = [\n      {\n        name    = \"Microsoft.DBforMySQL/flexibleServers\"\n        actions = [\"Microsoft.Network/virtualNetworks/subnets/join/action\"]\n      }\n    ]\n  }\n}\n```"]