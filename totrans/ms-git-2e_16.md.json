["```\nif [ -f /etc/bash_completion.d/git-prompt.sh ]; then\n    source /etc/bash_completion.d/git-prompt.sh\nfi\n```", "```\nexport PS1='\\u@\\h:\\w$( git_ps1 \" (%s)\")\\$ '\n```", "```\nPROMPT_COMMAND='__git_ps1 \"\\\\u@\\\\h:\\\\w\" \"\\\\\\$ \"'\n```", "```\nbob@host.company.org:~/random/src (master)$\n```", "```\n. ~/git-completion.bash\n```", "```\n$ git check<TAB>\n```", "```\n$ git che<TAB><TAB>\ncheckout      cherry        cherry-pick\n```", "```\n$ git config --<TAB><TAB>\n--add              --get-regexp       --remove-section   --unset\n[…]\n```", "```\n$ git chekout\ngit: 'chekout' is not a git command. See 'git --help'.\nThe most similar command is\n        checkout\n```", "```\n$ git chekout\nWARNING: You called a Git command named 'chekout', which does not exist.\nContinuing in 0.1 seconds, assuming that you meant 'checkout'.\nYour branch is up-to-date with 'origin/master'.\n```", "```\n$ git mergetool\nThis message is displayed because 'merge.tool' is not configured.\nSee 'git mergetool --tool-help' or 'git help config' for more details.\n'git mergetool' will now attempt to use one of the following tools:\ntortoisemerge emerge vimdiff\nNo files need merging\n```", "```\n$ git mergetool --tool-help\n'git mergetool --tool=<tool>' may be set to one of the following:\n           vimdiff          Use Vim with a custom layout\n[…]\nThe following tools are valid, but not currently available:\n           araxis           Use Araxis Merge\n[…]\nSome of the tools listed above only work in a windowed\nenvironment. If run in a terminal-only session, they will fail.\n```", "```\n[merge]\n    tool = extMerge\n[mergetool \"extMerge\"]\n    cmd = extMerge \"$BASE\" \"$LOCAL\" \"$REMOTE\" \"$MERGED\"\n```", "```\n$ git -c foo.int=1k config --get --type=int foo.int\n1024\n```", "```\n[section \"subsection\"]\n```", "```\n[includeIf \"gitdir:~/work-repos/\"]\n    path = ~/work.inc\n```", "```\n$ git config --list --local\ncore.repositoryformatversion=0\ncore.filemode=false\ncore.bare=false\ncore.logallrefupdates=true\n```", "```\n$ git config user.email\n```", "```\n$ git config --get core.gitproxy 'for kernel\\.org$'\n```", "```\n$ git config --global user.name \"Alice Developer\"\n```", "```\n$ git config core.gitproxy '\"ssh\" for kernel.org' '\"ssh\" for kernel\\.org$'\n```", "```\n[core]\n        repositoryformatversion = 0\n        filemode = true\n        bare = false\n        logallrefupdates = true\n```", "```\n[user]\n    name  = Joe Random\n    email = joe@company.com\n```", "```\n$ git config --file=conf.inc foo.bar val\n$ git config --local include.path ./conf.inc\n```", "```\n$ git config --show-scope --show-origin --list\nglobal  file:/home/joe/.gitconfig  user.name=Joe Random\nglobal  file:/home/joe/.gitconfig  user.email=joe@company.com\nlocal   file:.git/config        core.repositoryformatversion=0\nlocal   file:.git/config        core.filemode=false\n[…]\nlocal   file:.git/config        include.path=./../conf.inc\nlocal   file:.git/./../conf.inc foo.bar=val\n```", "```\npath old-file old-hex old-mode new-file new-hex new-mode\n```", "```\n$ git config --local core.whitespace \\\n    trailing-space,space-before-tab,indent-with-non-tab,tabwidth=4\n```", "```\n*.py whitespace=tab-in-indent\n```", "```\npattern    attribute1 attribute2\n```", "```\n[attr]binary -diff -merge -text\n```", "```\n$ git config --global alias.co checkout\n$ git config --global alias.ps = '--paginate status'\n$ git config --global alias.lg \"log --graph --oneline --decorate\"\n$ git config --global alias.aliases 'config --get-regexp ^alias\\.'\n```", "```\n$ git config --global alias.unmerged \\\n  '!git ls-files --unmerged | cut -f2 | sort -u'\n```", "```\n[alias]\n    serve = !git daemon --reuseaddr --verbose --base-path=. --export-all ./.git\n```", "```\n[alias]\n    record-1 = !sh -c 'git add -p -- $@ && git commit' -\n    record-2 = !f() {  git add -p -- $@ && git commit }; f\n```", "```\n!f() { : git commit ; ... } f\n```", "```\n$ git co --help\n'git co' is aliased to 'checkout'\n```", "```\n$ git --list-cmds=others\n   credential-helper-selector\n   credential-manager\n   lfs\n```"]