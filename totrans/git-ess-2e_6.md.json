["```\n$ cd C:\\Repos\n$ svnadmin create MySvnRepo\n```", "```\n$ cd C:\\Sources\\svn\n$ svn checkout file:///Repos/MySvnRepo\n```", "```\n$ cd \\Sources\\svn\\MySvnRepo\n$ svn import /path/to/some/skeleton/dir\n```", "```\n$ cd \\Sources\\svn\\MySvnRepo\n$ svn mkdir trunk\n$ svn mkdir tags\n$ svn mkdir branches  \n```", "```\nsvn commit -m \"Initial layout\"  \n```", "```\n$ cd trunk\n$ echo \"This is a Subversion repo\" > readme.txt\n$ svn add readme.txt\n$ svn commit -m \"Readme file\"\n```", "```\n$ svn import \\MyProject\\Folder\n```", "```\n$ cd \\Sources\\git\n$ git svn clone file:///c/Repos/MySvnRepo  \n```", "```\n$ cd \\Sources\\svn\\MySvnRepo\\trunk\n$ echo \"This is the first file\" > svnFile01.txt\n$ svn add svnFile01.txt\n$ svn commit -m \"Add first file\"  \n```", "```\n$ svn copy file:///Repos/MySvnRepo/trunk file:///Repos/MySvnRepo/tags/v1.0 -m \"Release 1.0\" \n```", "```\n$ svn copy file:///Repos/MySvnRepo/trunk file:///Repos/MySvnRepo/branches/v1.x -m \"Maintenance branch for release 1.0\" \n```", "```\n$ echo \"This file comes from Git\" >> gitFile01.txt \n$ git add gitFile01.txt \n$ git commit -m \"Add a file using Git\" \n```", "```\n$ git svn dcommit \n```", "```\n$ git svn rebase \n```", "```\n$ git svn clone <url> --stdlayout \n```", "```\n$ svn log -q | awk -F '|' '/^r/ {sub(\"^ \", \"\", $2); sub(\" $\", \"\", $2); print $2\" = \"$2\" <\"$2\">\"}' | sort -u > authors.txt \n```", "```\n$ git svn clone <repo-url> --stdlayout --prefix svn/ -A authors.txt \n```", "```\n$ git svn clone <repo-url> --trunk=<trunk-folder> --branches=<branches-folder> --tags=<tags-folder>\n```", "```\n$ git svn show-ignore >> .gitignore\n$ git add .gitignore\n$ git commit -m \"Convert svn:ignore properties to .gitignore\"\n```", "```\n$ mkdir \\Repos\\MyGitRepo.git\n$ cd \\Repos\\MyGitRepo.git\n$ git init --bare\n```", "```\n$ cd \\Sources\\MySvnRepo\n$ git remote add bare file:///C/Repos/MyGitRepo.git\n```", "```\n$ git push --all bare\n```", "```\n$ git branch -m trunk master \n```", "```\n$ git for-each-ref --format='%(refname)' refs/heads/tags |\ncut -d / -f 4 |\nwhile read ref\ndo\n git tag \"$ref\" \"refs/heads/tags/$ref\";\n git branch -D \"tags/$ref\";\ndone\n```"]