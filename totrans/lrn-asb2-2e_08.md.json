["```\n    - hosts: localhost \n      tasks: \n      - name: Install Apache \n        yum: \n          name: httpd \n          state: present \n      - name: Enable Apache \n      service: \n          name: httpd \n          state: running \n          enabled: True \n\n```", "```\nansible-playbook playbooks/setup_apache.yaml --syntax-check\n\n```", "```\n    ERROR! Syntax Error while loading YAML. \n    The error appears to have been in '~/08_code/playbooks/setup_apache.yaml': line 9, column 4, but may \n    be elsewhere in the file depending on the exact syntax problem. \n\n    The offending line appears to be: \n\n      - name: Enable Apache \n      service: \n      ^ here \n\n```", "```\nfind . -type f | grep '.py$' | grep -v '__init__' | wc -l\n\n```", "```\ngrep -r 'supports_check_mode=True' | awk -F: '{print $1}' | sort | uniq | wc -l\n\n```", "```\ngrep -r 'supports_check_mode=True' | awk -F: '{print $1}' | sort | uniq\n\n```", "```\nPLAY [localhost] ************************************************* \n\n    TASK [setup] ***************************************************** \n    ok: [localhost] \n\n    TASK [Install Apache] ******************************************** \n    ok: [localhost] \n\n    TASK [Enable Apache] ********************************************* \n    changed: [localhost] \n\n    PLAY RECAP ******************************************************* \n    localhost         : ok=3    changed=1    unreachable=0    failed=0 \n\n```", "```\n    TASK [Install Apache] ******************************************** \n    ok: [localhost]\n\n```", "```\n    TASK [Enable Apache] ********************************************* \n    changed: [localhost]\n\n```", "```\n    - hosts: localhost \n      tasks: \n      - name: Ensure Apache is installed \n        yum: \n          name: httpd \n          state: present \n      - name: Ensure Apache in enabled \n        service: \n          name: httpd \n          state: running \n          enabled: True \n      - name: Ensure Apache userdirs are properly configured \n        template: \n          src: '../templates/userdir.conf' \n          dest: '/etc/httpd/conf.d/userdir.conf' \n\n```", "```\n    # UserDir: The name of the directory that is appended onto a user's home \n    # directory if a ~user request is received. \n    # The path to the end user account 'public_html' directory must be \n    # accessible to the webserver userid.  This usually means that ~userid \n    # must have permissions of 711, ~userid/public_html must have permissions \n    # of 755, and documents contained therein must be world-readable. \n    # Otherwise, the client will only receive a \"403 Forbidden\" message. \n    # \n    <IfModule mod_userdir.c> \n        # \n        # UserDir is disabled by default since it can confirm the presence \n        # of a username on the system (depending on home directory \n        # permissions). \n        # \n        UserDir enabled \n\n        # \n        # To enable requests to /~user/ to serve the user's public_html \n        # directory, remove the \"UserDir disabled\" line above, and uncomment \n        # the following line instead: \n        # \n        #UserDir public_html \n    </IfModule> \n\n    # \n    # Control access to UserDir directories.  The following is an example \n    # for a site where these directories are restricted to read-only. \n    # \n    <Directory \"/home/*/public_html\"> \n        AllowOverride FileInfo AuthConfig Limit Indexes \n        Options MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec \n        Require method GET POST OPTIONS \n    </Directory> \n\n```", "```\nansible-playbook playbooks/setup_apache.yaml --diff --check\n\n```", "```\n    PLAY [localhost] ************************************************* \n\n    TASK [setup] ***************************************************** \n    ok: [localhost] \n\n    TASK [Ensure Apache is installed] ******************************** \n    ok: [localhost] \n\n    TASK [Ensure Apache in enabled] ********************************** \n    changed: [localhost] \n\n    TASK [Ensure Apache userdirs are properly configured] ************ \n    changed: [localhost] \n    --- before: /etc/httpd/conf.d/userdir.conf \n    +++ after: dynamically generated \n    @@ -14,7 +14,7 @@ \n        # of a username on the system (depending on home directory \n        # permissions). \n        # \n    -    UserDir disabled \n    +    UserDir enabled \n\n        # \n        # To enable requests to /~user/ to serve the user's public_html \n    @@ -33,4 +33,3 @@ \n        Options MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec \n        Require method GET POST OPTIONS \n    </Directory> \n    - \n\n    PLAY RECAP ******************************************************* \n    localhost         : ok=4    changed=2    unreachable=0    failed=0\n\n```", "```\n    - hosts: localhost \n      tasks: \n      - name: List files in /tmp \n        command: ls /tmp \n        register: list_files \n      - name: Check if file testfile.txt exists \n        assert: \n          that: \n          - \"'testfile.txt' in list_files.stdout_lines\" \n\n```", "```\nansible-playbook playbooks/assert_ls.yaml\n\n```", "```\n    PLAY [localhost] ************************************************* \n\n    TASK [setup] ***************************************************** \n    ok: [localhost] \n\n    TASK [List files in /tmp] **************************************** \n    changed: [localhost] \n\n    TASK [Check if file testfile.txt exists] ************************* \n    fatal: [localhost]: FAILED! => {\"assertion\": \"'testfile.txt' in list_files.stdout_lines\", \"changed\":     false, \"evaluated_to\": false, \"failed\": true} \n\n    NO MORE HOSTS LEFT *********************************************** \n        to retry, use: --limit @playbooks/assert_ls.retry \n\n    PLAY RECAP ******************************************************* \n    localhost         : ok=2    changed=1    unreachable=0    failed=1\n\n```", "```\n    PLAY [localhost] ************************************************* \n\n    TASK [setup] ***************************************************** \n    ok: [localhost] \n\n    TASK [List files in /tmp] **************************************** \n    changed: [localhost] \n\n    TASK [Check if file testfile.txt exists] ************************* \n    ok: [localhost] \n\n    PLAY RECAP ******************************************************* \n    localhost         : ok=3    changed=1    unreachable=0    failed=0\n\n```", "```\n    - hosts: localhost \n      tasks: \n      - name: Ensure the file /tmp/ok exists \n        file: \n          name: /tmp/ok \n          state: touch \n        tags: \n        - file_present \n      - name: Ensure the file /tmp/ok does not exists \n        file: \n          name: /tmp/ok \n          state: absent \n        tags: \n        - file_absent \n\n```", "```\nansible-playbook playbooks/tags_example.yaml\n\n```", "```\n    PLAY [localhost] ************************************************* \n\n    TASK [setup] ***************************************************** \n    ok: [localhost] \n\n    TASK [Ensure the file /tmp/ok exists] **************************** \n    changed: [localhost] \n\n    TASK [Ensure the file /tmp/ok does not exists] ******************* \n    changed: [localhost] \n\n    PLAY RECAP ******************************************************* \n    localhost         : ok=3    changed=2    unreachable=0    failed=0\n\n```", "```\nansible-playbook playbooks/tags_example.yaml -t file_present\n\n```", "```\n    PLAY [localhost] ************************************************* \n\n    TASK [setup] ***************************************************** \n    ok: [localhost] \n\n    TASK [Ensure the file /tmp/ok exists] **************************** \n    changed: [localhost] \n\n    PLAY RECAP ******************************************************* \n    localhost         : ok=2    changed=1    unreachable=0    failed=0\n\n```", "```\nansible-playbook playbooks/tags_example.yaml --skip-tags file_present\n\n```", "```\n    PLAY [localhost] ************************************************* \n\n    TASK [setup] ***************************************************** \n    ok: [localhost] \n\n    TASK [Ensure the file /tmp/ok does not exists] ******************* \n    ok: [localhost] \n\n    PLAY RECAP ******************************************************* \n    localhost         : ok=2    changed=1    unreachable=0    failed=0\n\n```", "```\n    - name: Verify if the current version of Java is installed \n      command: rpm -q jdk1.8.0_91-1.8.0_91-fcs \n      register: java \n      ignore_errors: True \n      changed_when: java|failed \n\n    - name: Ensure that JavaSE is download \n      uri: \n        url: 'http://download.oracle.com/otn-pub/java/jdk/8u91-b14/jdk-8u91-linux-x64.rpm' \n        method: GET \n        HEADER_Cookie: 'gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie' \n        dest: /tmp \n        creates: /tmp/jdk-8u91-linux-x64.rpm \n      when: java|failed \n\n    - name: Ensure JavaSE is installed \n      dnf: \n        name: /tmp/jdk-8u91-linux-x64.rpm \n        state: present \n      when: java|failed \n\n    - name: Set alternatives for java \n      alternatives: \n        path: /usr/java/jdk1.8.0_91/jre/bin/java \n        name: java \n        link: /usr/bin/java \n      when: java|failed \n\n    - name: Set alternatives for javac \n      alternatives: \n        path: /usr/java/jdk1.8.0_91/bin/javac \n        name: javac \n        link: /usr/bin/javac \n      when: java|failed \n\n    - name: Set alternatives for javaws \n      alternatives: \n        path: /usr/java/jdk1.8.0_91/bin/javaws \n        name: javaws \n        link: /usr/bin/javaws \n      when: java|failed \n\n```", "```\n    - name: Verify if the current version of Java is installed \n      command: rpm -q jdk1.8.0_91-1.8.0_91-fcs \n      register: java \n      ignore_errors: True \n      changed_when: java|failed \n\n```", "```\n    - name: Ensure that JavaSE is download \n      uri: \n        url: 'http://download.oracle.com/otn-pub/java/jdk/8u91-b14/jdk-8u91-linux-x64.rpm' \n        method: GET \n        HEADER_Cookie: 'gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie' \n        dest: /tmp \n        creates: /tmp/jdk-8u91-linux-x64.rpm \n      when: java|failed \n\n```", "```\n    - name: Ensure JavaSE is installed \n      dnf: \n        name: /tmp/jdk-8u91-linux-x64.rpm \n        state: present \n      when: java|failed \n\n```", "```\n    - name: Set alternatives for java \n      alternatives: \n        path: /usr/java/jdk1.8.0_91/jre/bin/java \n        name: java \n        link: /usr/bin/java \n      when: java|failed \n\n    - name: Set alternatives for javac \n      alternatives: \n        path: /usr/java/jdk1.8.0_91/bin/javac \n        name: javac \n        link: /usr/bin/javac \n      when: java|failed \n\n    - name: Set alternatives for javaws \n      alternatives: \n        path: /usr/java/jdk1.8.0_91/bin/javaws \n        name: javaws \n        link: /usr/bin/javaws \n      when: java|failed \n\n```", "```\n    j01.fale.io \n\n```", "```\n    - hosts: j01.fale.io \n      user: root \n      roles: \n      - java \n\n```", "```\nansible-playbook playbooks/hosts/j01.fale.io.yaml\n\n```", "```\n    PLAY [j01.fale.io] *********************************************** \n\n    TASK [setup] ***************************************************** \n    ok: [j01.fale.io] \n\n    TASK [java : Verify if the current version of Java is installed] * \n    fatal: [j01.fale.io]: FAILED! => {\"changed\": true, \"cmd\": [\"rpm\", \"-q\", \"jdk1.8.0_91-1.8.0_91-fcs\"],         \"delta\": \"0:00:00.009788\", \"end\": \"2016-09-27 11:04:56.185618\", \"failed\": true, \"rc\": 1, \"start\":         \"2016-    09-27 11:04:56.175830\", \"stderr\": ``, \"stdout\": \"package jdk1.8.0_91-1.8.0_91-fcs is not         installed\", \"stdout_lines\": [\"package jdk1.8.0_91-1.8.0_91-fcs is not installed\"], \"warnings\":             [\"Consider using yum, dnf or zypper module rather than running rpm\"]} \n      ...ignoring \n\n    TASK [java : Ensure that JavaSE is download] ********************* \n    changed: [j01.fale.io] \n\n    TASK [java : Ensure JavaSE is installed] ************************* \n    changed: [j01.fale.io] \n\n    TASK [java : Set alternatives for java] ************************** \n    ok: [j01.fale.io] \n\n    TASK [java : Set alternatives for javac] ************************* \n    ok: [j01.fale.io] \n\n    TASK [java : Set alternatives for javaws] ************************ \n    ok: [j01.fale.io] \n\n    PLAY RECAP ******************************************************* \n    j01.fale.io       : ok=7    changed=2    unreachable=0    failed=0\n\n```", "```\n    - hosts: j01.fale.io \n      tasks: \n      - name: Ensure the tag variable is properly set \n        fail: 'The version needs to be defined. To do so, please add: --extra-vars                                 \"version=$[TAG/BRANCH]\"' \n        when: version is not defined \n      - name: Get last Project version \n        git: \n          repo: https://github.com/org/project.git \n          dest: \"/tmp\" \n          version: '{{ version }}' \n      - name: Maven clean install \n        shell: \"cd /tmp/project && mvn clean install\" \n\n```"]