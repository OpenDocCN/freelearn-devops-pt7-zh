["```\n$ git clone --bare https://github.com/PacktPublishing/Git-Version-Control-Cookbook-Second-Edition_hello_world_flow_model.git hello_world_flow_model_remote Cloning into bare repository 'hello_world_flow_model_remote'...\nremote: Counting objects: 51, done.\nremote: Total 51 (delta 0), reused 0 (delta 0), pack-reused 51\nUnpacking objects: 100% (51/51), done. \n```", "```\n$ git clone hello_world_flow_model_remote hello_world_flow_model \n```", "```\n$ cd hello_world_flow_model_remote \n$ git branch -D feature/continents  \n$ git branch -D feature/printing  \n$ git branch -D release/1.0  \n$ cd .. \n```", "```\n$ cd hello_world_flow_model \n$ git checkout develop \n$ git reset --hard origin/develop\n```", "```\n$ git branch -a \n* develop \n remotes/origin/HEAD -> origin/develop \n remotes/origin/develop \n remotes/origin/feature/cities \n remotes/origin/feature/continents \n remotes/origin/feature/printing \n remotes/origin/master \n remotes/origin/release/1.0 \n```", "```\n$ git fetch \n$ git pull \nAlready up to date. \n$ git branch -a \n\n* develop \n remotes/origin/HEAD -> origin/develop \n remotes/origin/develop \n remotes/origin/feature/cities \n remotes/origin/feature/continents \n remotes/origin/feature/printing \n remotes/origin/master \n remotes/origin/release/1.0 \n```", "```\n$ git fetch --prune \n x [deleted]         (none)     -> origin/feature/continents \n x [deleted]         (none)     -> origin/feature/printing \n x [deleted]         (none)     -> origin/release/1.0 \n$ git branch -a \n* develop \n remotes/origin/HEAD -> origin/develop \n remotes/origin/develop \n remotes/origin/feature/cities \n remotes/origin/master\n```", "```\n$ git clone https://github.com/PacktPublishing/Git-Version-Control-Cookbook-Second-Edition_hello_world_flow_model.git  \n$ cd hello_world_flow_model \n$ git checkout develop \n$ git reset --hard origin/develop \n```", "```\n$ git count-objects \n51 objects, 204 kilobytes \n```", "```\n$ git fsck --unreachable \nChecking object directories: 100% (256/256), done. \n\n$ du -sh .git \n\n292K  .git # Linux - 1K = 1024 bytes\n300K  .git # MacOS - 1K = 1000 bytes\n```", "```\n$ git remote rm origin \n$ git fsck --unreachable \nChecking object directories: 100% (256/256), done. \nunreachable commit 127c621039928c5d99e4221564091a5bf317dc27 \nunreachable commit 472a3dd2fda0c15c9f7998a98f6140c4a3ce4816 \nunreachable blob e26174ff5c0a3436454d0833f921943f0fc78070\nunreachable tree f03964e50809d5a0a9d35c208001b141ac36d997 \nunreachable commit f336166c7812337b83f4e62c269deca8ccfa3675 \n```", "```\n$ git gc \nCounting objects: 46, done. \nDelta compression using up to 8 threads. \nCompressing objects: 100% (44/44), done. \nWriting objects: 100% (46/46), done. \nTotal 46 (delta 18), reused 0 (delta 0) \n```", "```\n$ git count-objects \n5 objects, 20 kilobytes \n$ git fsck --unreachable \nChecking object directories: 100% (256/256), done. \nChecking objects: 100% (46/46), done. \nunreachable commit 127c621039928c5d99e4221564091a5bf317dc27 \nunreachable commit 472a3dd2fda0c15c9f7998a98f6140c4a3ce4816 \nunreachable blob e26174ff5c0a3436454d0833f921943f0fc78070 \nunreachable tree f03964e50809d5a0a9d35c208001b141ac36d997\nunreachable commit f336166c7812337b83f4e62c269deca8ccfa3675 \n$ du -sh .git \n120K  .git # Linux\n124K  .git # MacOS\n```", "```\n$ git gc --prune=now \nCounting objects: 46, done. \nDelta compression using up to 8 threads. \nCompressing objects: 100% (26/26), done. \nWriting objects: 100% (46/46), done. \nTotal 46 (delta 18), reused 46 (delta 18)\n```", "```\n$ git count-objects \n0 objects, 0 kilobytes \n$ git fsck --unreachable \nChecking object directories: 100% (256/256), done. \nChecking objects: 100% (46/46), done. \n$ du -sh .git \n100K  .git # Linux\n104K  .git # MacOS\n```", "```\n$ git clone https://github.com/PacktPublishing/Git-Version-Control-Cookbook-Second-Edition_hello_world_flow_model.git \nCloning into 'Git-Version-Control-Cookbook-Second-Edition_hello_world_flow_model'... \nremote: Reusing existing pack: 51, done. \nremote: Total 51 (delta 0), reused 0 (delta 0) \nUnpacking objects: 100% (51/51), done. \nChecking connectivity... done. \n$ cd Git-Version-Control-Cookbook-Second-Edition_hello_world_flow_model \n$ git checkout develop \nAlready on 'develop' \nYour branch is up-to-date with 'origin/develop'. \n$ git reset --hard origin/develop \nHEAD is now at 2269dcf Merge branch 'release/1.0' into develop \n```", "```\n$ git config gc.auto # exit code is 1 when not set\n$ echo $?\n1\n$ git config gc.auto 0 \n$ git config gc.auto \n0\n```", "```\n$ git gc --auto\n```", "```\n$ git gc \nCounting objects: 51, done. \nDelta compression using up to 8 threads. \nCompressing objects: 100% (49/49), done. \nWriting objects: 100% (51/51), done. \nTotal 51 (delta 23), reused 0 (delta 0) \n```", "```\n$ git clone https://git.eclipse.org/r/jgit/jgit \nCloning into 'jgit'... \nremote: Counting objects: 98, done\nremote: Total 95247 (delta 0), reused 95247 (delta 0)\nReceiving objects: 100% (95247/95247), 41.25 MiB | 1.91 MiB/s, done.\nResolving deltas: 100% (41334/41334), done.\n$ cd jgit \n$ git checkout master \nAlready on 'master' \nYour branch is up-to-date with 'origin/master'.\n```", "```\n$ current=$(git rev-parse --symbolic-full-name --abbrev-ref HEAD) \n```", "```\n$ for br in $(git branch -a | grep -v $current | grep remotes | grep -v HEAD); \n do \n git branch ${br##*/} $br; \n done \n\nBranch stable-0.10 set up to track remote branch stable-0.10 from origin. \nBranch stable-0.11 set up to track remote branch stable-0.11 from origin. \nBranch stable-0.12 set up to track remote branch stable-0.12 from origin. \n... \n```", "```\n#!/bin/bash \n# Clean the tree for unwanted dirs and files \n# $1 Files and dirs to keep \n\nclean-tree () { \n # Remove everything but $1 from the git index/staging area \n for f in $(git ls-files | grep -v -E \"$1\" | grep -o -E \"^[^/\\\"]+\" | sort -u); do \n git rm -rq --cached --ignore-unmatch $f \n done \n} \n\nclean-tree $1 \n```", "```\n$ chmod +x clean-tree \n```", "```\nkeep=\"org.eclipse.jgit.http|LICENSE|.gitignore|README.md|.gitattributes\" \n```", "```\n$ git filter-branch --prune-empty  --index-filter \"\\\"/absolute/path/to/clean-tree\\\" \\\"$keep\\\"\" --tag-name-filter cat -- --all \n...\nRewrite 720734983bae056955bec3b36cc7e3847a0bb46a (13/3051) \nRewrite 6e1571d5b9269ec79eadad0dbd5916508a4fee82 (23/3051) \nRewrite 2bfe561f269afdd7f4772f8ebf34e5e25884942b (37/3051) \nRewrite 2086fdaedd5e71621470865c34ad075d2668af99 (60/3051) \n... \n```", "```\n$ git ls-tree --abbrev HEAD \n100644 blob f57840b7e .gitattributes\n100644 blob 3679a3365 .gitignore\n100644 blob 1b85c6466 LICENSE\n100644 blob 54133e1d3 README.md\n040000 tree 2edd8e193 org.eclipse.jgit.http.apache\n040000 tree cda583881 org.eclipse.jgit.http.server\n040000 tree daace995c org.eclipse.jgit.http.test\n```", "```\n$ du -sh .git \n 53M  .git # MacOS\n```", "```\n$ git for-each-ref --format=\"%(refname)\" refs/original/ | xargs -n 1 git update-ref -d \n$ git reflog expire --expire=now --all \n$ git gc --prune=now \nCounting objects: 96863, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (28811/28811), done.\nWriting objects: 100% (96863/96863), done.\nTotal 96863 (delta 42589), reused 94395 (delta 41334) \n```", "```\n$ du -sh .git \n44M  .git # MacOS\n```", "```\ngit rm -rq --cached --ignore-unmatch $f \n```", "```\n$ git clone https://github.com/PacktPublishing/Git-Version-Control-Cookbook-Second-Edition_Remove-Credentials.git \n$ cd Git-Version-Control-Cookbook-Second-Edition_Remove-Credentials \n```", "```\nusername = foobar\npassword = verysecret \n```", "```\nsed -i '' -e 's/^\\(.*=\\).*$/\\1/' \n```", "```\n$ git filter-branch --prune-empty  --tree-filter \"test -f .credentials && sed -i '' -e 's/^\\(.*=\\).*$/\\1/' .credentials || true\" -- --all \n```", "```\n$ cat .credentials \nusername = \npassword = \n```", "```\n$ git clone https://git.eclipse.org/r/jgit/jgit \n$ git clone --reference jgit --bare https://git.eclipse.org/r/jgit/jgit \n$ git clone --mirror --reference jgit https://git.eclipse.org/r/jgit/jgit jgit.mirror \n```", "```\n$ cd jgit \n$ git branch \n* master \n$ cd ../jgit.git # or cd ../jgit.mirror \n$ git branch \n* master \n stable-0.10 \n stable-0.11 \n stable-0.12 \n... \n```", "```\n$ cd ../jgit.mirror\n$ git config remote.origin.fetch \n+refs/*:refs/* \n```", "```\n$ git show-ref | cut -f2 -d \" \" | cut -f1,2 -d / | sort -u \nrefs/cache-automerge \nrefs/changes \nrefs/heads \nrefs/meta \nrefs/notes \nrefs/tags \n```", "```\n$ cd ../jgit.git\n$ git config remote.origin.url \nhttps://git.eclipse.org/r/jgit/jgit \n```", "```\n$ git show-ref | cut -f2 -d \" \" | cut -f1,2 -d / | sort -u \nrefs/heads \nrefs/tags \n```", "```\n$ cd ../jgit \n$ git config remote.origin.fetch \n+refs/heads/*:refs/remotes/origin/* \n$ git show-ref | cut -f2 -d \" \" | cut -f1,2 -d / | sort -u \nrefs/heads \nrefs/remotes \nrefs/tags \n```", "```\n$ git clone --mirror git@github.com:jenkinsci/extreme-feedback-plugin.git \n$ cd extreme-feedback-plugin.git \n$ git show-ref | cut -f2 -d \" \" | cut -f1,2 -d / | sort -u \nrefs/heads \nrefs/meta \nrefs/pull \nrefs/tags\n```", "```\n$ git clone https://github.com/PacktPublishing/Git-Version-Control-Cookbook-Second-Edition_Super.git \n$ cd Git-Version-Control-Cookbook-Second-Edition_Super\n```", "```\n$ git submodule add https://github.com/PacktPublishing/Git-Version-Control-Cookbook-Second-Edition_lib_a.git lib_a \nCloning into 'lib_a'... \nremote: Counting objects: 18, done. \nremote: Compressing objects: 100% (14/14), done. \nremote: Total 18 (delta 4), reused 17 (delta 3) \nReceiving objects: 100% (18/18), done. \nResolving deltas: 100% (4/4), done. \nChecking connectivity... done. \n```", "```\n$ git status \nOn branch master \nYour branch is up-to-date with 'origin/master'. \n\nChanges to be committed: \n (use \"git reset HEAD <file>...\" to unstage)  \n\n new file:   .gitmodules \n new file:   lib_a \n```", "```\n$ cat .gitmodules \n[submodule \"lib_a\"] \n path = lib_a \n url = https://github.com/PacktPublishing/Git-Version-Control-Cookbook-Second-Edition_lib_a.git \n$ git diff --cached lib_a \ndiff --git a/lib_a b/lib_a \nnew file mode 160000 \nindex 0000000..0d96e7c \n--- /dev/null \n+++ b/lib_a \n@@ -0,0 +1 @@ \n+Subproject commit 0d96e7cfc4d4db64002e63af0f7325d33bdaf84f\n```", "```\n$ cd lib_a \n$ git checkout develop \nBranch develop set up to track remote branch develop from origin by rebasing. \nSwitched to a new branch 'develop' \n$ cd .. \n$ git status \nOn branch master \nYour branch is ahead of 'origin/master' by 1 commit. \n (use \"git push\" to publish your local commits) \n\nChanges not staged for commit: \n (use \"git add <file>...\" to update what will be committed) \n (use \"git checkout -- <file>...\" to discard changes in working directory) \n\n modified:   lib_a (new commits) \n\nno changes added to commit (use \"git add\" and/or \"git commit -a\") \n```", "```\n$ git submodule update \nSubmodule path 'lib_a': checked out '0d96e7cfc4d4db64002e63af0f7325d33bdaf84f' \n```", "```\n$ cd lib_a \n$ git status \nHEAD detached at 0d96e7c \nnothing to commit, working directory clean \n$ git checkout develop \nPrevious HEAD position was 0d96e7c... Fixes book title in README \nSwitched to branch 'develop' \nYour branch is up-to-date with 'origin/develop'. \n$ cd .. \n$ git status \nOn branch master \nYour branch is ahead of 'origin/master' by 1 commit. \n (use \"git push\" to publish your local commits) \n\nChanges not staged for commit: \n (use \"git add <file>...\" to update what will be committed) \n (use \"git checkout -- <file>...\" to discard changes in working directory) \n\n modified:   lib_a (new commits) \n\nno changes added to commit (use \"git add\" and/or \"git commit -a\") \n$ git add lib_a \n$ git commit -m 'Updated lib_a to newest version' \n[master 4d371bb] Updated lib_a to newest version \n 2 files changed, 4 insertions(+)\n create mode 100644 .gitmodules\n create mode 160000 lib_a \n```", "```\n$ git config -f .gitmodules submodule.lib_a.branch stable \n$ cat .gitmodules \n[submodule \"lib_a\"] \n path = lib_a\n```", "```\n url = https://github.com/PacktPublishing/Git-Version-Control-Cookbook-Second-Edition_lib_a.git \n branch = stable \n```", "```\n$ git add .gitmodules \n$ git commit -m 'Make lib_a module track its stable branch' \n[master bf9b9ba] Make lib_a module track its stable branch \n 1 file changed, 1 insertion(+) \n$ git submodule update --remote \nSubmodule path 'lib_a': checked out '8176a16db21a48a0969e18a51f2c2fb1869418fb' \n$ git status \nOn branch master \nYour branch is ahead of 'origin/master' by 2 commits. \n (use \"git push\" to publish your local commits) \n\nChanges not staged for commit: \n (use \"git add <file>...\" to update what will be committed) \n (use \"git checkout -- <file>...\" to discard changes in working directory) \n\n modified:   lib_a (new commits) \n\nno changes added to commit (use \"git add\" and/or \"git commit -a\") \n```", "```\n$ git clone super super_clone \nCloning into 'super_clone'... \ndone.\n```", "```\n$ cd super_clone \n$ git submodule init \nSubmodule 'lib_a' (https://github.com/PacktPublishing/Git-Version-Control-Cookbook-Second-Edition_lib_a.git) registered for path 'lib_a' \n$ git submodule update --remote \nCloning into 'lib_a'... \nremote: Counting objects: 18, done. \nremote: Compressing objects: 100% (14/14), done. \nremote: Total 18 (delta 4), reused 17 (delta 3) \nReceiving objects: 100% (18/18), done. \nResolving deltas: 100% (4/4), done. \nChecking connectivity... done. \nSubmodule path 'lib_a': checked out '8176a16db21a48a0969e18a51f2c2fb1869418fb' \n```", "```\n$ git clone https://github.com/PacktPublishing/Git-Version-Control-Cookbook-Second-Edition_Super.git\n$ cd Git-Version-Control-Cookbook-Second-Edition_Super \n```", "```\n$ git remote add lib_a https://github.com/PacktPublishing/Git-Version-Control-Cookbook-Second-Edition_lib_a.git\n$ git fetch lib_a \nwarning: no common commits \nremote: Reusing existing pack: 18, done. \nremote: Total 18 (delta 0), reused 0 (delta 0) \nUnpacking objects: 100% (18/18), done. \nFrom https://github.com/PacktPublishing/Git-Version-Control-Cookbook-Second-Edition_lib_a.git \n * [new branch]      develop    -> lib_a/develop \n * [new branch]      master     -> lib_a/master \n * [new branch]      stable     -> lib_a/stable \n```", "```\n$ git checkout -b lib_a_master lib_a/master \nBranch lib_a_master set up to track remote branch master from lib_a by rebasing. \nSwitched to a new branch 'lib_a_master' \n```", "```\n$ ls \nREADME.md  a.txt\n```", "```\n$ git checkout master \nSwitched to branch 'master' \nYour branch is up-to-date with 'origin/master'. \n$ ls \nREADME.md  super.txt \n```", "```\n$ git merge -s ours --no-commit --allow-unrelated-histories lib_a_master \nAutomatic merge went well; stopped before committing as requested \n```", "```\n$ git read-tree --prefix=lib_a/ -u lib_a_master \n```", "```\n$ tree \n. \n|-- README.md \n|-- lib_a \n|   |-- README.md \n|   '-- a.txt \n'-- super.txt \n```", "```\n$ git commit -m 'Initial add of lib_a project' \n[master 5066b7b] Initial add of lib_a project\n```", "```\n$ echo \"Lib_a included!\" >> super.txt \n$ git add super.txt \n$ git commit -m \"Update super.txt\" \n[master 83ef9a4] Update super.txt \n 1 file changed, 1 insertion(+) \n```", "```\n$ echo \"The b file in lib_a\" >> lib_a/b.txt \n$ git add lib_a/b.txt \n$ git commit -m \"[LIB_A] Enhance lib_a with b.txt\" \n[master debe836] [LIB_A] Enhance lib_a with b.txt \n 1 file changed, 1 insertion(+) \n create mode 100644 lib_a/b.txt \n```", "```\n$ git merge -m '[LIB_A] Update lib_a project to latest state' -s  subtree lib_a/develop \nMerge made by the 'subtree' strategy. \n lib_a/a.txt | 2 ++ \n 1 file changed, 2 insertions(+) \n```", "```\n$ git checkout lib_a_master \n$ git merge lib_a/develop \nUpdating 0d96e7c..ab47aca \nFast-forward \n a.txt | 2 ++ \n 1 file changed, 2 insertions(+)\n```", "```\n$ git merge --squash -s subtree --no-commit master \nSquash commit -- not updating HEAD \nAutomatic merge went well; stopped before committing as requested \n```", "```\n$ git commit -m 'Enhance lib_a with b.txt' \n[lib_a_master 01e45f7] Enhance lib_a with b.txt \n 1 file changed, 1 insertion(+) \n create mode 100644 b.txt \n```", "```\n$ git merge lib_a/stable \nMerge made by the 'recursive' strategy. \n a.txt | 2 ++ \n 1 file changed, 2 insertions(+)\n```", "```\n$ git checkout master \n$ git merge -s subtree -m '[LIB_A] Update to latest state of lib_a' lib_a_master \nMerge made by the 'subtree' strategy. \n lib_a/a.txt | 2 ++ \n 1 file changed, 2 insertions(+) \n```", "```\n$ git log -1 | head -1 | awk '{print $2}' 0f10e563c6824402d30380c9f8fbf87769e64e8a $ git ls-tree 0f10e563c6824402d30380c9f8fbf87769e64e8a 100644 blob 456a5df638694a699fff7a7ff31a496630b12d01 README.md 040000 tree 7d66ad11cb22c6d101c7ac9c309f7dce25231394 lib_a 100644 blob c552dead26fdba634c91d35708f1cfc2c4b2a100 super.txt\n```", "```\n$ git cat-file -p lib_a/master \ntree 7d66ad11cb22c6d101c7ac9c309f7dce25231394 \nparent a7d76d9114941b9d35dd58e42f33ed7e32a9c134 \nauthor John Doe <john.doe@example.com> 1396553189 +0200 \ncommitter John Doe <john.doe@example.com> 1396553189 +0200 \n\nFixes book title in README \n```"]