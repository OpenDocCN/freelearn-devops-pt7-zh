["```\n<datasource add-missing-on-start=\"true\" check-fk-indices-on-start=\"false\" check-fks-on-start=\"false\" check-indices-on-start=\"true\" check-on-start=\"true\" field-type-name=\"mysql\" helper-class=\"org.ofbiz.core.entity.GenericHelperDAO\" name=\"defaultDS\" use-foreign-key-indices=\"false\" use-foreign-keys=\"false\">\n        <jndi-jdbc jndi-name=\"java:comp/env/jdbc/JiraDS\" jndi-server-name=\"default\"/>\n</datasource>\n```", "```\n<transaction-factory class=\"org.ofbiz.core.entity.transaction.JNDIFactory\">\n      <user-transaction-jndi jndi-name=\"java:comp/env/UserTransaction\" jndi-server-name=\"default\"/>\n      <transaction-manager-jndi jndi-name=\"java:comp/env/UserTransaction\" jndi-server-name=\"default\"/>\n </transaction-factory>\n```", "```\n<entity-model-reader name=\"main\">\n<resource loader=\"maincp\" location=\"entitydefs/entitymodel.xml\"/>\n</entity-model-reader>\n<entity-group-reader name=\"main\" loader=\"maincp\" location=\"entitydefs/entitygroup.xml\"/>\n```", "```\n<delegator entity-group-reader=\"main\" entity-model-reader=\"main\" name=\"default\">\n        <group-map datasource-name=\"defaultDS\" group-name=\"default\"/>\n</delegator>\n```", "```\n<field-type loader=\"maincp\" location=\"entitydefs/fieldtype-mysql.xml\" name=\"mysql\"/>\n```", "```\n    <entity-group group=\"default\" entity=\"Employee\"/>\n    ```", "```\n    <delegator name=\"default\" entity-model-reader=\"main\" entity-group-reader=\"main\"><group-map group-name=\"default\" datasource-name=\"defaultDS\"/></delegator>\n    ```", "```\n    <entity entity-name=\"Employee\" table-name=\"employee\" package-name=\"\">\n      <field name=\"id\" type=\"numeric\"/>\n      <field name=\"name\" type=\"long-varchar\"/>\n      <field name=\"address\" col-name=\"empaddress\" type=\"long-varchar\"/>\n      <field name=\"company\" type=\"long-varchar\"/>\n\n      <prim-key field=\"id\"/>\n      <index name=\"emp_entity_name\">\n        <index-field name=\"name\"/>\n      </index>\n    </entity>\n    ```", "```\n    <field-type name=\"oracle10g\" loader=\"maincp\" location=\"entitydefs/fieldtype-oracle10g.xml\"/>\n    ```", "```\n    <relation type=\"one\" title=\"Parent\" rel-entity-name=\"Company\">\n      <key-map field-name=\"company\" rel-field-name=\"id\"/>\n    </relation>\n    ```", "```\nOfBizDelegator delegator = ComponentManager.getInstance().getComponentInstanceOfType(OfBizDelegator.class);\n```", "```\nList<GenericValue> employees = delegator.findAll(\"Employee\");\n```", "```\nLong id = employees.get(0).getLong(\"id\");\nString name = employees.get(0).getString(\"name\");\n```", "```\nList<GenericValue> employees = delegator.findByAnd(\"Employee\", EasyMap.build(\"company\",\"J-Tricks\"));\n```", "```\nList<GenericValue> employees = this.delegator.findByCondition(\"Employee\", new EntityExpr(\"id\",EntityOperator.GREATER_THAN,\"15000\"), EasyList.build(\"id\",\"name\"));\n```", "```\nOfBizListIterator iterator = this.delegator.findListIteratorByCondition(\"Employee\", new EntityExpr(\"id\",EntityOperator.GREATER_THAN,\"15000\"), null, UtilMisc.toList(\"name\"), UtilMisc.toList(\"name\"), new EntityFindOptions(true, EntityFindOptions.TYPE_SCROLL_INSENSITIVE, EntityFindOptions.CONCUR_READ_ONLY, true));\nList<GenericValue> employees = iterator.getCompleteList();\niterator.close();\n```", "```\nGenericValue newEmployee = this.delegator.createValue(\"Employee\",EasyMap.build(\"name\",\"Some Guy\", \"address\",\"Some Address\", \"company\",\"J-Tricks\"));\n```", "```\nGenericValue employee = delegator.findByAnd(\"Employee\",   EasyMap.build(\"id\",\"12000\")).get(0);\nemployee.setString(\"name\",\"New Name\");\nemployee.store();\n```", "```\n    PropertySet propertySet = PropertiesManager.getInstance().getPropertySet();\n    ```", "```\n    PropetySet propertySet =  ComponentManager.getComponent(PropertiesManager.class).getPropertySet();\n    ```", "```\n    propertySet.setBoolean(\"mt.custom.key1\", new Boolean(true));\n    ```", "```\n    Boolean key = propertySet.getBoolean(\"mt.custom.key1\");\n    ```", "```\n    HashMap entityDetails = new HashMap();\n    entityDetails.put(\"delegator.name\", \"default\");\n    entityDetails.put(\"entityName\", \"OSUser\");\n    entityDetails.put(\"entityId\", 10032L);\n    PropertySet userProperties = PropertySetManager.getInstance(\"ofbiz\", entityDetails);\n    ```", "```\n    userProperties.setString(\"state\", \"Kerala\");\n    userProperties.setString(\"country\", \"India\");\n    ```", "```\n    System.out.println(\"Address:\" + userProperties.getString(\"state\")+\", \"+userProperties.getString(\"country\"));\n    ```", "```\n    <dependency>\n      <groupId>com.atlassian.activeobjects</groupId>\n      <artifactId>activeobjects-plugin</artifactId>\n      <version>${ao.version}</version>\n      <scope>provided</scope>\n    </dependency>\n    ```", "```\n    <plugin>\n     <groupId>com.atlassian.maven.plugins</groupId>\n     <artifactId>maven-jira-plugin</artifactId>\n     <version>3.0.6</version>\n     <extensions>true</extensions>\n     <configuration>\n      <pluginArtifacts>\n       <pluginArtifact>\n        <groupId>com.atlassian.activeobjects</groupId>\n        <artifactId>activeobjects-plugin</artifactId>\n        <version>${ao.version}</version>\n       </pluginArtifact>\n       <pluginArtifact>\n        <groupId>com.atlassian.activeobjects</groupId>\n        <artifactId>activeobjects-jira-spi</artifactId>\n        <version>${ao.version}</version>\n       </pluginArtifact>\n      </pluginArtifacts>\n      <productVersion>${jira.version}</productVersion>\n      <productDataVersion>${jira.data.version}</productDataVersion>\n     </configuration>\n    </plugin>\n    ```", "```\n    <ao key=\"ao-module\">\n      <description>The configuration of the Active Objects service</description>\n      <entity>com.jtricks.entity.AddressEntity</entity>\n    </ao>\n    ```", "```\n    <component-import key=\"ao\" name=\"Active Objects components\" interface=\"com.atlassian.activeobjects.external.ActiveObjects\">\n      <description>Access to the Active Objects service</description>\n    </component-import>\n    ```", "```\n    public interface AddressEntity extends Entity{\n      public String getName();\n      public void setName(String name);\n\n      public String getState();   \n      public void setState(String state);\n\n      public String getCountry();\n      public void setCountry(String country);\n    }\n    ```", "```\nprivate ActiveObjects ao;\n\npublic ManageProperties(ActiveObjects ao) {\n  this.ao = ao;\n}\n```", "```\nAddressEntity addressEntity =  ao.create(AddressEntity.class);\naddressEntity.setName(name);\naddressEntity.setState(state);\naddressEntity.setCountry(country);\naddressEntity.save();\n```", "```\nAddressEntity addressEntity = ao.get(AddressEntity.class, id);\n```", "```\nAddressEntity[] addressEntities = ao.find(AddressEntity.class, Query.select().where(\"name = ?\", name));\nfor (AddressEntity addressEntity : addressEntities) {\n  System.out.println(\"Name:\"+addressEntity.getName()+\", State:\"+addressEntity.getState()+\", Country:\"+addressEntity.getCountry());\n}\n```", "```\naddressEntity.setState(newState);\naddressEntity.save();\n```", "```\nao.delete(addressEntity);\n```", "```\nselect * from propertyentry where ENTITY_NAME='jira.properties';\n\n```", "```\nselect PROPERTY_KEY, propertyvalue from propertyentry pe, propertystring ps where pe.id=ps.id and pe.ENTITY_NAME='jira.properties' and propertytype='5';\n\n```", "```\nselect PROPERTY_KEY, propertyvalue from propertyentry pe, propertynumber pn where pe.id=pn.id and pe.ENTITY_NAME='jira.properties' and pe.PROPERTY_KEY='jira.option.allowattachments';\n\n```", "```\n    PropertySet propertySet = PropertiesManager.getInstance().getPropertySet();\n    ```", "```\n    PropetySet propertySet =  ComponentManager.getComponent(PropertiesManager.class).getPropertySet();\n    ```", "```\n    Collection<String> keys = propertySet.getKeys();\n    ```", "```\n    Collection<String> stringKeys = propertySet.getKeys(5);\n    ```", "```\n    String attachmentHome = propertySet.getString(\"jira.path.attachments\");\n    boolean attachmentsAllowed = propertySet.getBoolean(\"jira.option.allowattachments\");\n    ```", "```\n    InitialContext cxt = new InitialContext();\n    ```", "```\n    DatasourceInfo datasourceInfo = EntityConfigUtil.getDatasourceInfo (\"defaultDS\");\n    ```", "```\n    String jndiName = datasourceInfo.jndiJdbcElement.getAttribute ( \"jndi-name\" );\n    ```", "```\n    DataSource ds = ( DataSource ) cxt.lookup ( jndiName );\n    ```", "```\n    Connection conn = ds.getConnection();\n    ```", "```\nConnection conn = new DefaultOfBizConnectionFactory().getConnection();\n```", "```\nDatasourceInfo datasourceInfo = new DefaultOfBizConnectionFactory().getDatasourceInfo();\n```", "```\n    update customfield set customfieldtypekey = 'com.atlassian.jira.plugin.system.customfieldtypes:textfield' where cfname = 'Old Number Value';\n    ```", "```\n    update customfield set customfieldsearcherkey = 'com.atlassian.jira.plugin.system.customfieldtypes:textsearcher' where cfname = 'Old Number Value';\n    ```", "```\nselect ji.id, ji.pkey, pr.pname from jiraissue ji inner join  project pr on ji.project = pr.id;\n\n```", "```\nselect ji.pkey, ja.actionbody, ja.created, ja.author from jiraissue ji left join jiraaction ja on ji.id = ja.issueid;\n\n```", "```\nselect ji.pkey, comp.cname from nodeassociation na, component comp, jiraissue ji where comp.id = na.sink_node_id and ji.id = na.source_node_id and na.association_type = \"IssueComponent\" and ji.pkey = 'DEMO-123';\n```", "```\nselect * from customfield where cfname = 'CF Name';\n\n```", "```\nselect cf.id, cf.cfname, cfo.customvalue from customfield cf inner join customfieldoption cfo on cf.id = cfo.customfield where cfname = 'CF Name';\n\n```", "```\nselect * from fieldconfigscheme where fieldid = 'customfield_12345';\n\n```", "```\nselect project.pname from configurationcontext inner join project on configurationcontext.project = project.id where fieldconfigscheme in  (select id from fieldconfigscheme where fieldid = 'customfield_12345');\n\n```", "```\nselect issuetype.pname from fieldconfigschemeissuetype inner join issuetype on fieldconfigschemeissuetype.issuetype = issuetype.id where fieldconfigscheme in (select id from fieldconfigscheme where fieldid = 'customfield_12345');\n\n```", "```\nselect pr.pname, ps.name from nodeassociation na, project pr, permissionscheme ps where pr.id = na.source_node_id and ps.id = na.sink_node_id and na.association_type = 'ProjectScheme' and na.source_node_entity = 'Project' and na.sink_node_entity = 'PermissionScheme';\n\n```", "```\nselect pr.pname, iss.name from nodeassociation na, project pr, issuesecurityscheme iss  where pr.id = na.source_node_id and iss.id = na.sink_node_id and na.association_type = 'ProjectScheme' and na.source_node_entity = 'Project' and na.sink_node_entity = 'IssueSecurityScheme';\n\n```", "```\nselect sp.perm_type, sp.perm_parameter from schemepermissions sp inner join permissionscheme ps on sp.scheme = ps.id where ps.id = 9 and sp.permission = 23\n\n```", "```\nselect iss.name, sisl.name, sis.sec_type, sis.sec_parameter from issuesecurityscheme iss , schemeissuesecurities sis, schemeissuesecuritylevels sisl where sis.scheme = iss.id and sisl.scheme =iss.id;\n\n```", "```\nselect istat.pname from issuestatus istat, jiraissue ji where istat.id=ji.issuestatus and ji.pkey='DEMO-123';\n\n```", "```\nselect * from os_wfentry where id=(select workflow_id from jiraissue where pkey='DEMO-123');\n\n```", "```\nselect ji.pkey, wf.descriptor from jiraissue ji, jiraworkflows wf, os_wfentry osw where ji.workflow_id = osw.id and osw.name = wf.workflowname and ji.pkey='DEMO-123';\n\n```", "```\nselect * from os_currentstep where entry_id = (select workflow_id from jiraissue where pkey = 'DEMO-123');\n\n```", "```\nselect * from os_historystep where entry_id = (select workflow_id from jiraissue where pkey = 'DEMO-123');\n\n```", "```\n    UPDATE jiraissue SET issuestatus = (select id from issuestatus where pname = 'Closed') where pkey = 'DEMO-123';\n    ```", "```\n    UPDATE os_currentstep SET step_id = 6 where entry_id = (select workflow_id from jiraissue where pkey = 'DEMO-123');\n    ```", "```\nselect user_name from membershipbase where group_name = 'jira-administrators';\n\n```", "```\nselect child_name from cwd_membership where parent_name='jira-administrators' and membership_type = 'GROUP_USER' and directory_id = 1;\n\n```", "```\nselect pe.property_key, ps.propertyvalue from propertystring ps inner join propertyentry pe on ps.id = pe.id  where pe.entity_name = 'OSUser' and pe.entity_id = (select id from userbase where userbase.username = 'username'); \n\n```", "```\nselect attribute_name, attribute_value from cwd_user_attributes where user_id = (select id from cwd_user where user_name = 'someguy' and directory_id =1);\n\n```", "```\nselect source_name from userassociation where association_type = 'WatchIssue' and sink_node_entity = 'Issue' and sink_node_id = (select id from jiraissue where pkey='DEMO-123');\n\n```", "```\nselect ji.pkey from jiraissue ji inner join userassociation ua on ua.sink_node_id =  ji.id where ua.association_type = 'WatchIssue' and ua.sink_node_entity = 'Issue' and ua.source_name = 'someuser';\n\n```", "```\nselect  cg.author, cg.created, ci.oldvalue, ci.oldstring, ci.newvalue, ci.newstring  from changegroup cg inner join changeitem ci on cg.id = ci.groupid  where cg.issueid = (select id from jiraissue where pkey = 'DEMO-123') order by cg.created;\n\n```", "```\n    insert into changegroup values (12345,10000,'someguy','2011-06-15');\n\n    ```", "```\n    insert into changeitem values (11111, 12345, 'jira','status','1','Open','6','Closed');\n    ```", "```\n    update sequence_value_item set seq_id = 12346 where seq_name = 'ChangeGroup';\n    update sequence_value_item set seq_id = 11112 where seq_name = 'ChangeItem';\n\n    ```"]