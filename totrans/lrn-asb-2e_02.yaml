- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Exploring Ansible Galaxy
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索 Ansible Galaxy
- en: Welcome to our second chapter. Here, we are going to be looking at the `ansible-galaxy`
    command; we are going to be covering the features provided by the command and
    also discussing its importance in the development of Ansible over the last few
    years.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到我们的第二章。在这一章中，我们将学习 `ansible-galaxy` 命令；我们将介绍该命令提供的功能，并讨论它在过去几年中对 Ansible
    发展的重要性。
- en: '**Ansible Galaxy** is an online repository of community-contributed roles;
    we will discover some of the best roles available, how to use them, and how to
    create your own role and have it hosted on Ansible Galaxy.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ansible Galaxy** 是一个由社区贡献角色的在线仓库；我们将探索一些最优秀的角色，学习如何使用它们，以及如何创建你自己的角色并将其托管在
    Ansible Galaxy 上。'
- en: 'By the end of the chapter, we will have worked through the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，我们将涵盖以下主题：
- en: The Ansible release life cycle
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ansible 发布生命周期
- en: Introduction to Ansible Galaxy
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ansible Galaxy 介绍
- en: What is a role?
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是角色？
- en: Publishing to and using Ansible Galaxy roles
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布并使用 Ansible Galaxy 角色
- en: Ansible collections
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ansible 集合
- en: Ansible Galaxy commands
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ansible Galaxy 命令
- en: Before we start exploring Ansible Galaxy, let’s discuss the Ansible core release
    life cycle and how it has changed over the last few years, as these changes have
    made it an essential component of the Ansible ecosystem.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始探索 Ansible Galaxy 之前，让我们讨论一下 Ansible 核心的发布生命周期，以及它在过去几年中的变化，因为这些变化使得它成为
    Ansible 生态系统中的一个重要组成部分。
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: In this chapter, we will again make use of **Multipass**, the tool that we covered
    in [*Chapter 1*](B21620_01.xhtml#_idTextAnchor017), *Installing and Running Ansible*,
    and the GitHub repository that accompanies this title, which can be found at [https://github.com/PacktPublishing/Learn-Ansible-Second-Edition](https://github.com/PacktPublishing/Learn-Ansible-Second-Edition).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将再次使用**Multipass**，这是我们在[*第 1 章*](B21620_01.xhtml#_idTextAnchor017)《安装与运行
    Ansible》中介绍的工具，以及本书配套的 GitHub 仓库，地址是 [https://github.com/PacktPublishing/Learn-Ansible-Second-Edition](https://github.com/PacktPublishing/Learn-Ansible-Second-Edition)。
- en: The Ansible release life cycle
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible 发布生命周期
- en: In the previous chapter, when we installed Ansible, the keen-eyed among you
    may have spotted a few different Ansible packages installed using the `sudo -H
    pip install` `ansible` command.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章安装 Ansible 时，细心的你可能注意到通过 `sudo -H pip install` `ansible` 命令安装了几个不同的 Ansible
    包。
- en: 'What follows is an edited version of the output of installing Ansible using
    `pip`:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是使用 `pip` 安装 Ansible 时输出的经过编辑的版本：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'As you can see, two main Ansible packages were installed: `ansible-8.2.0` and
    `ansible-core-2.15.2`. Before we discuss the difference between the two packages,
    let’s quickly discuss how Ansible was maintained and packaged up until `version
    2.9` of Ansible.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，安装了两个主要的 Ansible 包：`ansible-8.2.0` 和 `ansible-core-2.15.2`。在我们讨论这两个包的区别之前，让我们快速回顾一下，直到
    Ansible 的 `2.9` 版本，Ansible 是如何进行维护和打包的。
- en: Every version of Ansible before `version 2.10` shipped with many modules baked
    into the release; while Ansible was new and its user base and functionality were
    focused on a few tasks, it was easy to manage and maintain the releases of these
    modules as part of the main Ansible code base, which was maintained by the Ansible
    team at the official GitHub repo, which you can find at [https://github.com/ansible/ansible](https://github.com/ansible/ansible).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `2.10` 版本之前的每个 Ansible 版本，都包含了许多内置在发布中的模块；当 Ansible 还很新，用户基础和功能集中在少数任务上时，管理和维护这些模块的发布作为
    Ansible 代码库的一部分非常容易，而该代码库由 Ansible 团队在官方 GitHub 仓库中维护，地址是 [https://github.com/ansible/ansible](https://github.com/ansible/ansible)。
- en: 'By the end of [*Chapter 1*](B21620_01.xhtml#_idTextAnchor017), *Installing
    and Running Ansible*, we had used a total of five modules, all of which are built
    into Ansible; these were the following:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [*第 1 章*](B21620_01.xhtml#_idTextAnchor017)《安装与运行 Ansible》结束时，我们总共使用了五个模块，所有这些模块都是
    Ansible 内置的，它们分别是：
- en: '`ansible.builtin.setup`: A module that discovers information on the target
    host and makes it available during the playbook run'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ansible.builtin.setup`：一个发现目标主机信息并在 Playbook 执行过程中使其可用的模块'
- en: '`ansible.builtin.service`: A module that manages the state of a service on
    the target host'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ansible.builtin.service`：一个管理目标主机上服务状态的模块'
- en: '`ansible.builtin.debug`: This module allows you to print statements during
    your playbook execution'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ansible.builtin.debug`：该模块允许你在 Playbook 执行过程中打印语句'
- en: '`ansible.builtin.apt`: This module manages packages on the target host using
    the `apt` package manager'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ansible.builtin.apt`：这个模块使用 `apt` 包管理器管理目标主机上的软件包'
- en: '`ansible.builtin.template`: This module brings templating to Ansible, allowing
    you to output files to your target hosts'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ansible.builtin.template`：这个模块为 Ansible 带来了模板功能，使你能够将文件输出到目标主机'
- en: That was just a single playbook that did a single task; add to that the sheer
    number of modules to give you an idea of the numbers—there are currently 95 modules
    in the Amazon AWS namespace and 282 in the Microsoft Azure namespace—that’s over
    370 modules that cover the basic functionality of two different namespaces. There
    are, at the time of writing, over 40 different namespaces.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 那只不过是一个执行单一任务的 playbook；再加上模块的数量，就能让你大致了解情况——目前在 Amazon AWS 命名空间中有 95 个模块，在
    Microsoft Azure 命名空间中有 282 个模块——这意味着超过 370 个模块涵盖了两个不同命名空间的基本功能。在撰写本文时，已有超过 40
    个不同的命名空间。
- en: 'You might be asking, *“Wait, what is a namespace?”* The modules are now grouped
    into collections, and each collection has its namespace; some examples are the
    following:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会问，*“等一下，什么是命名空间？”* 这些模块现在被分组到不同的集合中，每个集合都有自己的命名空间；以下是一些示例：
- en: '**ansible.builtin**: As you might have already guessed, the modules within
    this namespace provide some of Ansible’s core functionality'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ansible.builtin**：正如你可能已经猜到的，这个命名空间中的模块提供了一些 Ansible 核心功能'
- en: '**amazon.aws**: These are the official Amazon Web Services modules'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**amazon.aws**：这些是官方的 Amazon Web Services 模块'
- en: '**azure.azcollection**: Here, you will find the official Microsoft Azure modules'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**azure.azcollection**：这里你会找到官方的 Microsoft Azure 模块'
- en: '**kubernetes.core**: If you want to work with Kubernetes, these will be your
    modules'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**kubernetes.core**：如果你想使用 Kubernetes，这些模块将会是你所需要的'
- en: Again, you might be thinking, *“That’s useful information, but what has this
    got to do with anything?”*; well, Ansible used to have a few major releases a
    year and had to ship a release that had slowly grown to include thousands of modules,
    plus their associated plugins meant that the release process quickly became unmanageable,
    as the team not only had to worry about the core Ansible code base but also about
    the modules that shipped with it.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，你可能会想，*“这有用的信息，但这和任何事情有什么关系？”*；好吧，Ansible 过去每年有几个主要版本发布，而随着模块数量的逐渐增加，发布过程变得越来越难以管理，因为团队不仅需要关注核心的
    Ansible 代码库，还需要关注与之捆绑的模块及其插件。
- en: Each namespace potentially has its dev team comprised of core Ansible contributors,
    community members, and, in the case of some namespaces, large corporations such
    as Amazon and Microsoft. Thus, trying to coordinate an Ansible release became
    a challenge, both in terms of logistics and timing. Some of the technology that
    Ansible supports changes very fast; for example, both Amazon Web Services and
    Microsoft Azure introduce new features and add functionality to existing services
    almost weekly. It didn’t make sense for Ansible to potentially wait up to six
    months to provide an update that adds compatibility issues, which is why the Ansible
    team decided it was time to decouple the release of what is now known as **Ansible
    Core**, which is the tooling needed to run **Ansible**; this now comprises over
    85 name namespace collections, which are made up of well over 1,000 modules and
    plugins.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 每个命名空间可能都有自己的开发团队，团队成员包括 Ansible 核心贡献者、社区成员，某些命名空间中还有像 Amazon 和 Microsoft 这样的巨大企业。因此，协调一次
    Ansible 发布变得异常困难，无论是在物流还是时间安排上。Ansible 支持的一些技术变化非常快速；例如，Amazon Web Services 和
    Microsoft Azure 几乎每周都会推出新特性并为现有服务添加功能。Ansible 如果等到可能需要六个月才提供更新，来解决兼容性问题，显然没有意义。这就是为什么
    Ansible 团队决定将现在被称为 **Ansible Core** 的发布过程与 **Ansible** 的其他部分解耦开来；**Ansible Core**
    是运行 **Ansible** 所需要的工具，目前已经包括了超过 85 个命名空间集合，其中包含超过 1,000 个模块和插件。
- en: The life cycle of a release
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发布生命周期
- en: The release cycle begins with introducing a new major version of `ansible-core`,
    such as `ansible-core 2.11`. Following this, the latest release of `ansible-core`
    and its two preceding versions, `ansible-base 2.10` and `Ansible 2.9`, are actively
    maintained. Development then shifts to the `ansible-core` are continuously worked
    on. During this phase, there’s a freeze on adding or updating **collections**
    in the **Ansible** **community** package.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 发布周期从引入新的主要版本 `ansible-core` 开始，例如 `ansible-core 2.11`。之后，最新版本的 `ansible-core`
    和它之前的两个版本 `ansible-base 2.10` 和 `Ansible 2.9` 会继续得到积极维护。开发工作转向 `ansible-core`，并持续进行。在此阶段，**Ansible**
    **社区**包中的**集合**不再进行新增或更新。
- en: Subsequently, a release candidate for the **Ansible community** package is introduced.
    This undergoes testing, and additional release candidates are rolled out if necessary.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 随后，**Ansible 社区**包的候选版本被引入。经过测试后，如果有必要，会推出更多的候选版本。
- en: Once finalized, a new major version of the `ansible-core`; for instance, `Ansible
    4.0.0` would be based on `ansible-core 2.11`. After this release, only the latest
    version of the **Ansible community** package remains under active maintenance.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦最终确定，新的主要版本的 `ansible-core` 会基于 `ansible-core 2.11`，例如 `Ansible 4.0.0`。在此发布之后，只有最新版本的
    **Ansible 社区** 包会继续进行积极维护。
- en: The focus then shifts to `ansible-core` versions, such as `2.11.1`, and for
    the single supported version of the `4.1.0`.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，焦点转向 `ansible-core` 版本，例如 `2.11.1` 和唯一支持的 `4.1.0` 版本。
- en: As the cycle progresses, there’s a feature freeze on `ansible-core`. This is
    followed by introducing a release candidate for `ansible-core`, which undergoes
    testing. If needed, more release candidates are introduced. Finally, the subsequent
    major version of `ansible-core` is released, marking the commencement of a new
    cycle.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 随着周期的推进，`ansible-core` 会进入功能冻结阶段。接下来是 `ansible-core` 的候选版本发布，该版本进行测试。如有需要，会推出更多的候选版本。最后，后续的主要版本将发布，标志着新周期的开始。
- en: 'The following chart provides an overview of the cycle:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表提供了周期的概览：
- en: '![Figure 2.1 – An overview of the Ansible release cycle](img/B21620_02_1.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.1 – Ansible 发布周期概览](img/B21620_02_1.jpg)'
- en: Figure 2.1 – An overview of the Ansible release cycle
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.1 – Ansible 发布周期概览
- en: As you can see, this approach allows the Ansible team to be a lot more flexible
    with their release schedules and allows a lot more concurrent work on the two
    different releases.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，这种方法使得 Ansible 团队在发布计划上更加灵活，并允许在两个不同版本之间进行更多的并行工作。
- en: Now that we have an idea of how Ansible manages its release cycle and also how
    modules can be packaged, let’s take a look at Ansible Galaxy, which can be used
    to distribute collections and roles.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了 Ansible 如何管理发布周期，以及如何打包模块，接下来我们来看看 Ansible Galaxy，它可以用来分发集合和角色。
- en: Introduction to Ansible Galaxy
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible Galaxy 介绍
- en: 'Most people’s first exposure to Ansible Galaxy is the website hosted at [https://galaxy.ansible.com/](https://galaxy.ansible.com/).
    The website is home to community-contributed roles and modules:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数人第一次接触 Ansible Galaxy 时，都会访问 [https://galaxy.ansible.com/](https://galaxy.ansible.com/)
    网站。该网站是社区贡献的角色和模块的聚集地：
- en: '![Figure 2.2 – The Ansible Galaxy home page](img/B21620_02_2.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.2 – Ansible Galaxy 首页](img/B21620_02_2.jpg)'
- en: Figure 2.2 – The Ansible Galaxy home page
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.2 – Ansible Galaxy 首页
- en: Throughout the remainder of this book, we will be writing custom roles that
    interact with the Ansible Core modules for use in our playbook.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的其余部分，我们将编写与 Ansible Core 模块交互的自定义角色，以供我们在 playbook 中使用。
- en: More than 15,000 roles are published on Ansible Galaxy; these roles cover many
    tasks and support almost all the operating systems supported by Ansible.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible Galaxy 上发布了超过 15,000 个角色，这些角色涵盖了许多任务，并支持几乎所有 Ansible 支持的操作系统。
- en: Then, we have the `ansible-galaxy` command; this is a way of interacting with
    the Ansible Galaxy website from the comfort of your command line, as well as being
    able to bootstrap roles, which we will look at shortly; we can also use it to
    download, search, and publish our custom roles on Ansible Galaxy.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们有了 `ansible-galaxy` 命令；这是与 Ansible Galaxy 网站交互的一种方式，可以在命令行中操作，并且能够启动角色，稍后我们将介绍；我们还可以用它下载、搜索并发布我们在
    Ansible Galaxy 上的自定义角色。
- en: Finally, Red Hat has open-sourced the code for Ansible Galaxy, meaning you can
    also run a self-hosted version of the site should you need to distribute your
    roles behind a company firewall.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，Red Hat 已经开源了 Ansible Galaxy 的代码，这意味着如果你需要在公司防火墙后分发你的角色，你也可以运行自己托管的版本。
- en: Before we look at publishing roles and using roles from Ansible Galaxy, let’s
    discuss what a role means.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们讨论发布角色和使用来自 Ansible Galaxy 的角色之前，先来讨论一下什么是角色。
- en: What is a role?
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是角色？
- en: Throughout the remainder of this book, we will be building custom roles of our
    own, so this will be just an overview of what a role is.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的其余部分，我们将构建我们自己的自定义角色，因此这里只是简单介绍什么是角色。
- en: In [*Chapter 1*](B21620_01.xhtml#_idTextAnchor017), *Installing and Running
    Ansible*, our final playbook comprised some variables, a handler, four tasks,
    and a template.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [*第 1 章*](B21620_01.xhtml#_idTextAnchor017)，*安装和运行 Ansible* 中，我们的最终 playbook
    包含了一些变量、一个处理器、四个任务和一个模板。
- en: Apart from the template file, all of the code was hardcoded into our playbook
    file, which, although this makes it easy to read when using a small number of
    tasks and variables, etc., taking this approach doesn’t make the code very re-useable.
    Additionally, in later chapters, we could potentially be executing over 50 tasks
    in a single playbook run, which will make for quite a large, unruly file.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 除了模板文件外，所有的代码都被硬编码到我们的剧本文件中，虽然这样在使用少量任务和变量时易于阅读，但这种做法并不使代码具有很好的重用性。此外，在后面的章节中，我们可能在一次剧本执行中需要执行超过50个任务，这将导致文件变得相当庞大且难以管理。
- en: To get around this, Ansible has the concept of roles; they allow you to structure
    your Ansible code in a way that makes sense logically, for example, grouping tasks
    that perform a single job, which, in [*Chapter 1*](B21620_01.xhtml#_idTextAnchor017),
    *Installing and Running Ansible*, was installing and configuring the NTPD service.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免这个问题，Ansible引入了角色（roles）的概念；它们允许你以逻辑上有意义的方式组织你的Ansible代码，例如将执行单一任务的任务组合在一起，在[*第1章*](B21620_01.xhtml#_idTextAnchor017)中，*安装与运行Ansible*部分就是安装和配置NTPD服务。
- en: It also means you can drop a role into another playbook by copying the role
    folder, publishing it, and then pulling it down from Ansible Galaxy.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这也意味着你可以通过复制角色文件夹来将角色添加到另一个剧本中，发布它，然后从Ansible Galaxy拉取它。
- en: So, let’s look at creating a basic role based on the tasks, handler, variables,
    and template from the final playbook we ran at the end of [*Chapter 1*](B21620_01.xhtml#_idTextAnchor017),
    *Installing and* *Running Ansible*.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们来看看如何基于我们在[*第1章*](B21620_01.xhtml#_idTextAnchor017)中运行的最终剧本中的任务、处理程序、变量和模板来创建一个基本的角色，*安装与运行Ansible*部分。
- en: 'To start with, we will need to create the folder and file structure recommended
    by Ansible for a role; luckily, the `ansible-galaxy` command has us covered here;
    by running the following command in the folder where your playbook is going to
    be stored, it will bootstrap the folder and file structure, which is considered
    by Red Hat to be a best practice:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要创建Ansible推荐的角色文件夹和文件结构；幸运的是，`ansible-galaxy`命令已经为我们解决了这个问题；只需在存储你的剧本的文件夹中运行以下命令，它将启动文件夹和文件结构，这被Red
    Hat视为最佳实践：
- en: '[PRE1]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The preceding command will create a folder called `roles` if one doesn’t already
    exist, and inside the `roles` folder, add a second called `learnansible-example-role`.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将创建一个名为`roles`的文件夹（如果该文件夹不存在的话），并在`roles`文件夹中添加一个名为`learnansible-example-role`的文件夹。
- en: The `learnansible-example-role` folder contains all the best-practice folder
    layouts and files needed to be able to publish a role on Ansible Galaxy.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '`learnansible-example-role`文件夹包含了所有最佳实践的文件夹布局和所需文件，目的是使你能够在Ansible Galaxy上发布一个角色。'
- en: 'These are as follows:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这些如下：
- en: '`README.md`: This file contains an outline for you to fill in to provide information
    on your role; you can use as much or as little as you want of the template. Please
    note its contents will appear on Ansible Galaxy if you decide to publish your
    role there, so make it as descriptive as possible.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`README.md`：这个文件包含了一个大纲，你可以在其中填写角色的信息；你可以根据需要使用模板中的内容。请注意，如果你决定将角色发布到Ansible
    Galaxy，它的内容将会显示在上面，因此尽量使其描述尽可能详细。'
- en: '`defaults/main.yml`: This YAML file typically contains any default values for
    your role.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`defaults/main.yml`：这个YAML文件通常包含你的角色的任何默认值。'
- en: '`files/`: This empty folder holds any files that need to be copied for your
    role to the target hosts during playbook execution.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`files/`：这个空文件夹存放在剧本执行过程中需要复制到目标主机上的任何文件。'
- en: '`handlers/main.yml`: As you may have already guessed by the name of this folder,
    this YAML file is where you define any handlers your role needs.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`handlers/main.yml`：正如你从这个文件夹的名称可能已经猜到的，这个YAML文件是用来定义你的角色需要的任何处理程序（handlers）的地方。'
- en: '`meta/main.yml`: This YAML file, like the `README.md` file, is only used once
    the role is published to Ansible Galaxy; here, you can provide your details, any
    tags you want to add, and define the supported platform and the minimum version
    of Ansible version your role support.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`meta/main.yml`：这个YAML文件与`README.md`文件类似，只有在角色发布到Ansible Galaxy后才会使用；在这里，你可以提供你的详细信息、添加任何标签，并定义支持的平台以及你的角色支持的最低Ansible版本。'
- en: '`tasks/main.yml`: This is the file we will spend most of the time in throughout
    the rest of the chapters; it is where all of the roles’ tasks are defined.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tasks/main.yml`：这是我们在接下来的章节中大部分时间都会使用的文件；它定义了所有角色的任务。'
- en: '`templates/`: This is another empty folder; this time, it is here to store
    your template files.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`templates/`：这是另一个空文件夹，这次它用来存储你的模板文件。'
- en: '`tests/inventory` and `test.yml`: Here, we have a file that contains two files,
    an inventory file and a test playbook; it is used to run tests on your role.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tests/inventory`和`test.yml`：这里有一个包含两个文件的文件夹，一个是库存文件，一个是测试 playbook；它用于对你的角色进行测试。'
- en: '`vars/main.yml`: Finally, this YAML file contains any variables that you may
    wish to use, and these override the contents of the `defaults/main.yml` file,
    should you need to do so.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`vars/main.yml`：最后，这个 YAML 文件包含了你可能需要使用的任何变量，如果需要的话，这些变量将覆盖`defaults/main.yml`文件中的内容。'
- en: 'To populate the role, I have taken the code from the final playbook and split
    it across the aforementioned various files; the only change that I made to the
    playbook itself was to remove the following task, as we don’t need it:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 为了填充角色，我将最终 playbook 中的代码拆分到上述各种文件中；我对 playbook 本身所做的唯一修改是删除了以下任务，因为我们不需要它：
- en: '[PRE2]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This leaves the `roles/learnansible-example-role/tasks/main.yml` file looking
    like the following code:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得`roles/learnansible-example-role/tasks/main.yml`文件看起来像下面的代码：
- en: '[PRE3]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Notice that, as mentioned in [*Chapter 1*](B21620_01.xhtml#_idTextAnchor017),
    *Installing and Running Ansible*, we have `---` at the top of the file to show
    that `main.yml` is a separate file. As it is in the `tasks` folder, we do not
    need to define that it contains tasks by using tasks, as we did in our original
    playbook.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，正如在[*第1章*](B21620_01.xhtml#_idTextAnchor017)中提到的，*安装和运行 Ansible*，我们在文件顶部有`---`，表示`main.yml`是一个独立的文件。由于它位于`tasks`文件夹中，我们不需要像在原始
    playbook 中那样使用 tasks 来定义它包含任务。
- en: 'This pattern is followed by the `roles/learnansible-example-role/handlers/main.yml`
    file, which looks like this:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模式由`roles/learnansible-example-role/handlers/main.yml`文件遵循，其内容如下：
- en: '[PRE4]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Additionally, this is followed by the `roles/learnansible-example-role/vars/main.yml`
    file, which contains the following:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，接下来是`roles/learnansible-example-role/vars/main.yml`文件，其内容如下：
- en: '[PRE5]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The `roles/learnansible-example-role/vars/ntp.conf.j2` file is an exact copy
    of the template file we used in [*Chapter 1*](B21620_01.xhtml#_idTextAnchor017),
    *Installing and* *Running Ansible*.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '`roles/learnansible-example-role/vars/ntp.conf.j2`文件与我们在[*第1章*](B21620_01.xhtml#_idTextAnchor017)中使用的模板文件完全相同，*安装和*
    *运行 Ansible*。'
- en: 'The only addition outside of the `README.md` file is `roles/learnansible-example-role/meta/main.yml`.
    This file, as mentioned, contains all of the information needed to publish the
    role to Ansible Galaxy; in our example, this looks like the following:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 除了`README.md`文件外，唯一的新增文件是`roles/learnansible-example-role/meta/main.yml`。如前所述，这个文件包含了将角色发布到
    Ansible Galaxy 所需的所有信息；在我们的示例中，其内容如下：
- en: '[PRE6]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: We will revisit this file in the next section of this chapter when it comes
    to publishing our role to Ansible Galaxy.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章的下一节中重新访问这个文件，当我们将角色发布到 Ansible Galaxy 时。
- en: 'Now that we have everything that we need to run the role in place, we need
    a playbook to call it; in the `Chapter02` folder for the repo, which accompanies
    this title, you will file the roles folder, as described earlier, and a playbook
    called `playbook01.yml`, which looks like the following:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经准备好了运行角色所需的一切，我们需要一个 playbook 来调用它；在本书附带的仓库的`Chapter02`文件夹中，你将找到前面提到的角色文件夹，以及一个名为`playbook01.yml`的
    playbook，其内容如下：
- en: '[PRE7]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: As you can see, the start of the playbook looks precisely the same as the one
    we ran at the end of [*Chapter 1*](B21620_01.xhtml#_idTextAnchor017), *Installing
    and Running Ansible*. However, it is missing the `vars`, `handlers`, and `tasks`
    sections, and instead, we are just using a `roles` section, which contains the
    single role found at `roles/learnansible-example-role`.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，playbook 的开头与我们在[*第1章*](B21620_01.xhtml#_idTextAnchor017)中运行的完全相同，*安装和运行
    Ansible*。然而，它缺少`vars`、`handlers`和`tasks`部分，而我们只使用了一个包含单个角色的`roles`部分，这个角色位于`roles/learnansible-example-role`。
- en: In the `Chapter02` folder, you will find all the files needed to launch a local
    virtual machine using Multipass.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在`Chapter02`文件夹中，你将找到所有启动本地虚拟机所需的文件，这些文件使用 Multipass。
- en: Important note
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: When running the following commands, create a copy of the `hosts.example` file
    and call it `hosts`; once copied, update the newly created file with the IP address
    of the newly launched VM, as we did in [*Chapter 1*](B21620_01.xhtml#_idTextAnchor017),
    *Installing and* *Running Ansible*.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令时，创建`hosts.example`文件的副本并将其命名为`hosts`；复制完成后，更新新创建的文件，填入新启动虚拟机的 IP 地址，正如我们在[*第1章*](B21620_01.xhtml#_idTextAnchor017)中所做的，*安装和*
    *运行 Ansible*。
- en: 'To launch the virtual machine, get its IP address and run the playbook using
    the following commands:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动虚拟机，获取其 IP 地址并使用以下命令运行 playbook：
- en: '[PRE8]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This should give you something like the following output:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会给你类似以下的输出：
- en: '![Figure 2.3 – Running the playbook using the newly created role](img/B21620_02_3.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.3 – 使用新创建的角色运行 playbook](img/B21620_02_3.jpg)'
- en: Figure 2.3 – Running the playbook using the newly created role
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.3 – 使用新创建的角色运行 playbook
- en: 'You can stop and delete the VM by using the following two commands:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过以下两个命令停止并删除虚拟机：
- en: '[PRE9]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Now that we know what a role is and have a fundamental one defined, let’s look
    at publishing our simple role to Ansible Galaxy and then use it—along with some
    others—in an Ansible playbook.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道什么是角色，并且定义了一个基本的角色，让我们看看如何将这个简单的角色发布到 Ansible Galaxy，然后在 Ansible playbook
    中使用它—以及其他一些角色。
- en: Publishing to and using Ansible Galaxy roles
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发布到并使用 Ansible Galaxy 角色
- en: Now that we know what a role is and have seen how using them can make our Ansible
    playbooks a little cleaner and repeatable, we should look at how we can publish
    our roles to Ansible Galaxy and use them from there in our playbooks.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道什么是角色，并且看到了如何使用角色让我们的 Ansible playbook 更加简洁且可重复使用，接下来我们应该看看如何将角色发布到 Ansible
    Galaxy，并在我们的 playbook 中从那里使用它们。
- en: Publishing your roles to Ansible Galaxy
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将你的角色发布到 Ansible Galaxy
- en: 'You need two main prerequisites when publishing your role to Ansible Galaxy:
    an active GitHub account, which will be used to authenticate to Ansible Galaxy,
    and a public GitHub repository containing the code for your role.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在将角色发布到 Ansible Galaxy 时，你需要满足两个主要的前提条件：一个有效的 GitHub 账户，这将用于认证到 Ansible Galaxy，以及一个包含角色代码的公开
    GitHub 仓库。
- en: In this example, I am going to be using my own GitHub account; you can find
    me at [http://github.com/russmckendrick/](http://github.com/russmckendrick/).
    I will be using a repository that can be found at [https://github.com/russmckendrick/ansible-role-learnansible-example/](https://github.com/russmckendrick/ansible-role-learnansible-example/).
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我将使用我自己的 GitHub 账户；你可以在 [http://github.com/russmckendrick/](http://github.com/russmckendrick/)
    找到我。我将使用一个可以在 [https://github.com/russmckendrick/ansible-role-learnansible-example/](https://github.com/russmckendrick/ansible-role-learnansible-example/)
    找到的仓库。
- en: 'To publish your role, you need to take the following steps:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 要发布你的角色，你需要执行以下步骤：
- en: 'Go to the Ansible Galaxy website, which can be found at [https://galaxy.ansible.com/](https://galaxy.ansible.com/),
    and click on the GitHub logo to log in:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 Ansible Galaxy 网站，网址是 [https://galaxy.ansible.com/](https://galaxy.ansible.com/)，然后点击
    GitHub 图标进行登录：
- en: '![Figure 2.4 – Logging in to Ansible Galaxy](img/B21620_02_4.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.4 – 登录到 Ansible Galaxy](img/B21620_02_4.jpg)'
- en: Figure 2.4 – Logging in to Ansible Galaxy
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.4 – 登录到 Ansible Galaxy
- en: 'Once logged in, click on the **My Content** menu item, which is represented
    by the bulleted pointed list icon in the left-hand side menu as follows:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录后，点击左侧菜单中的 **我的内容** 菜单项，该图标是一个带有项目符号的列表图标，如下所示：
- en: '![Figure 2.5 – Going to the My Content page](img/B21620_02_5.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.5 – 进入我的内容页面](img/B21620_02_5.jpg)'
- en: Figure 2.5 – Going to the My Content page
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.5 – 进入我的内容页面
- en: 'Once on the **My Content** page, click on the **+ Add Content** button; here,
    you will be given two options: **Import Role from GitHub** or **Upload** **New
    Collection**:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入 **我的内容** 页面后，点击 **+ 添加内容** 按钮；在这里，你将看到两个选项：**从 GitHub 导入角色** 或 **上传** **新集合**：
- en: '![Figure 2.6 – Adding content options](img/B21620_02_6.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.6 – 添加内容选项](img/B21620_02_6.jpg)'
- en: Figure 2.6 – Adding content options
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.6 – 添加内容选项
- en: 'Click on the **Import Role from GitHub** button, and you will be presented
    with a list of your repositories; select the repository containing the role you
    would like to publish and click on the **OK** button:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **从 GitHub 导入角色** 按钮，你将看到你的仓库列表；选择包含你想要发布的角色的仓库并点击 **确定** 按钮：
- en: '![Figure 2.7 – Choosing the repository containing the role you want to publish](img/B21620_02_7.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.7 – 选择包含你想要发布的角色的仓库](img/B21620_02_7.jpg)'
- en: Figure 2.7 – Choosing the repository containing the role you want to publish
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.7 – 选择包含你想要发布的角色的仓库
- en: 'After a few moments, your role will be published, and you will be returned
    to the **My Content** page, which should now list your newly published role:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 几分钟后，你的角色将被发布，且你将返回到 **我的内容** 页面，此时应该会列出你新发布的角色：
- en: '![Figure 2.8 – Returning to the My Content page](img/B21620_02_8.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.8 – 返回到我的内容页面](img/B21620_02_8.jpg)'
- en: Figure 2.8 – Returning to the My Content page
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.8 – 返回到我的内容页面
- en: 'Click on the newly published role name, which will take you to the Ansible
    Galaxy roles page:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击新发布的角色名称，这将把你带到 Ansible Galaxy 角色页面：
- en: '![Figure 2.9 – The newly published Ansible Galaxy roles page](img/B21620_02_9.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.9 – 新发布的 Ansible Galaxy 角色页面](img/B21620_02_9.jpg)'
- en: Figure 2.9 – The newly published Ansible Galaxy roles page
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.9 – 新发布的 Ansible Galaxy 角色页面
- en: You can find a copy of the role I published during this walk-through at https://galaxy.ansible.com/russmckendrick/ansible_role_learnansible_example.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 https://galaxy.ansible.com/russmckendrick/ansible_role_learnansible_example
    找到我在本次演示中发布的角色副本。
- en: As you can see, the details in the `meta/main.yml` file and clicking on the
    `README.md` file.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，查看 `meta/main.yml` 文件中的详细信息，并点击 `README.md` 文件。
- en: Now that the role has been published, how do we use it in our Ansible playbooks?
    Let’s find out.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 现在角色已经发布，我们如何在 Ansible playbook 中使用它呢？让我们来看看。
- en: Using roles from Ansible Galaxy
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Ansible Galaxy 中的角色
- en: The first thing we need to do before we use the role in our playbook is to download
    the role; there are a few ways of doing this; first, you can download the role
    using the command given on the roles Ansible Galaxy page.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们在 playbook 中使用角色之前，首先需要做的事情是下载角色；有几种方法可以做到这一点；首先，你可以使用在 Ansible Galaxy 页面上给出的命令来下载角色。
- en: 'Running the following command will download the role to your Ansible configuration
    directory:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令将把角色下载到你的 Ansible 配置目录：
- en: '[PRE10]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The Ansible configuration directory is typically a hidden folder in your user’s
    home folder. The shorthand for this folder is `~/.ansible`, or in my case, the
    full path to the folder is `/Users/russ.mckendrick/.ansible`, as you can see in
    the following shell output:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible 配置目录通常是用户主文件夹中的一个隐藏文件夹。该文件夹的缩写是 `~/.ansible`，或者在我的情况下，文件夹的完整路径是 `/Users/russ.mckendrick/.ansible`，如下所示的
    Shell 输出：
- en: '![Figure 2.10 – Downloading the role from Ansible Galaxy](img/B21620_02_10.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.10 – 从 Ansible Galaxy 下载角色](img/B21620_02_10.jpg)'
- en: Figure 2.10 – Downloading the role from Ansible Galaxy
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.10 – 从 Ansible Galaxy 下载角色
- en: 'The second way to download roles from Ansible Galaxy is to create a `requirements.yml`
    file; this file should contain a list of the roles you wish to download, for example,
    the `requirements.yml` file in the `Chapter02` folder of the repository, which
    accompanies this book and looks like the following:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 下载角色的第二种方式是创建一个 `requirements.yml` 文件；此文件应包含你希望下载的角色列表，例如，仓库中 `Chapter02` 文件夹中的
    `requirements.yml` 文件，它伴随本书并看起来像以下内容：
- en: '[PRE11]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'As you can see, there are three roles defined in there; to install all three,
    you can run the following command:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，这里定义了三个角色；要安装这三个角色，你可以运行以下命令：
- en: '[PRE12]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The two others we will download are the following:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将下载的另外两个角色如下：
- en: '`itnok.update_ubuntu`: This role manages updates on Ubuntu hosts'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`itnok.update_ubuntu`：此角色管理 Ubuntu 主机上的更新'
- en: '`geerlingguy.nginx`: This role helps you download, install, and configure NGINX
    on multiple Linux distributions'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`geerlingguy.nginx`：此角色帮助你在多个 Linux 发行版上下载、安装和配置 NGINX'
- en: You can find links for the roles in the further reading section at the end of
    the chapter.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在本章末尾的进一步阅读部分找到角色的相关链接。
- en: 'This will download only the missing roles; when I ran the command, I got the
    following output:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 这将只下载缺失的角色；当我运行命令时，得到以下输出：
- en: '![Figure 2.11 – Downloading the missing roles from Ansible Galaxy](img/B21620_02_11.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.11 – 从 Ansible Galaxy 下载缺失的角色](img/B21620_02_11.jpg)'
- en: Figure 2.11 – Downloading the missing roles from Ansible Galaxy
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.11 – 从 Ansible Galaxy 下载缺失的角色
- en: As you can see, as `russmckendrick.ansible_role_learnansible_example` was already
    present on my machine, it skipped downloading it.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，`russmckendrick.ansible_role_learnansible_example` 已经存在于我的机器上，因此跳过了下载它。
- en: 'The Ansible playbook called `playbook02.yml`, which can be found in the `Chapter02`
    folder, calls the three roles defined in the `requirements.yml` file using the
    following code:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible playbook 文件 `playbook02.yml`，可以在 `Chapter02` 文件夹中找到，使用以下代码调用 `requirements.yml`
    文件中定义的三个角色：
- en: '[PRE13]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'As before, you can launch a VM using Multipass (ensuring that you update the
    IP address in the hosts file) and run the playbook using the following commands:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 和以前一样，你可以使用 Multipass 启动虚拟机（确保更新 hosts 文件中的 IP 地址），并使用以下命令运行 playbook：
- en: '[PRE14]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'As you can see from the playbook recap in the following screen, a lot more
    happened this time:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 如你在以下屏幕中的 playbook 摘要中所见，这次发生了更多的事情：
- en: '![Figure 2.12 – Running the playbook, which uses the roles downloaded from
    Ansible Galaxy](img/B21620_02_12.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.12 – 运行 playbook，使用从 Ansible Galaxy 下载的角色](img/B21620_02_12.jpg)'
- en: Figure 2.12 – Running the playbook, which uses the roles downloaded from Ansible
    Galaxy
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.12 – 运行 playbook，使用从 Ansible Galaxy 下载的角色
- en: The two additional roles did a more thorough update of the operating system
    than our role did, installing the NGINX package and starting the service up; this
    means that if you put the IP address returned by the `multipass info ansiblevm`
    command into your browser, you can see the default NGINX page.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 另外两个角色对操作系统进行了比我们的角色更彻底的更新，安装了 NGINX 包并启动了该服务；这意味着，如果你将 `multipass info ansiblevm`
    命令返回的 IP 地址放入浏览器中，你将看到默认的 NGINX 页面。
- en: 'Once again, when ready, you can stop and delete the VM by using the following
    two commands:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，准备好后，你可以使用以下两个命令停止并删除虚拟机：
- en: '[PRE15]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: So now that you understand what an Ansible Role is, how to publish it to Ansible
    Galaxy, and how to incorporate our own published and community roles into an Ansible
    playbook, what else can Ansible Galaxy do?
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 既然你已经理解了什么是 Ansible 角色，如何将其发布到 Ansible Galaxy，以及如何将我们自己发布的角色和社区角色结合到 Ansible
    playbook 中，那么 Ansible Galaxy 还能做些什么呢？
- en: Ansible collections
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible 集合
- en: At the start of this chapter, we discussed how the Ansible development team
    decoupled Ansible Modules away from Ansible Core and how this affected the release
    life cycle.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章开始时，我们讨论了 Ansible 开发团队如何将 Ansible 模块与 Ansible Core 解耦，以及这如何影响发布生命周期。
- en: 'All of these modules, plugins, and other supporting code are available on Ansible
    Galaxy; for example, the AWS collection from the Amazon namespace can be found
    at [https://galaxy.ansible.com/amazon/aws](https://galaxy.ansible.com/amazon/aws);
    you can install the collection using the following command:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些模块、插件和其他支持代码都可以在 Ansible Galaxy 上找到；例如，来自 Amazon 命名空间的 AWS 集合可以在 [https://galaxy.ansible.com/amazon/aws](https://galaxy.ansible.com/amazon/aws)
    找到；你可以使用以下命令安装该集合：
- en: '[PRE16]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Running this command will download and install the collection to `~/.ansible/collections/ansible_collections/amazon/aws`,
    as seen in the following terminal output:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 运行此命令将下载并安装集合到 `~/.ansible/collections/ansible_collections/amazon/aws`，如下所示的终端输出：
- en: '![Figure 2.13 – Installing the amazon.aws collection](img/B21620_02_13.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.13 – 安装 amazon.aws 集合](img/B21620_02_13.jpg)'
- en: Figure 2.13 – Installing the amazon.aws collection
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.13 – 安装 amazon.aws 集合
- en: However, just having the collection installed doesn’t mean that you will be
    able to use it within your playbooks just yet; for example, the Amazon AWS module
    requires some additional Python libraries to be installed, and typically, each
    collection will come with a `requirements.txt` file that lists the required Python
    libraries that need to be installed on your system for the collections modules
    and plugins to work.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，单单安装集合并不意味着你可以在 playbooks 中使用它；例如，Amazon AWS 模块需要安装一些额外的 Python 库，通常每个集合都会附带一个
    `requirements.txt` 文件，列出需要在你的系统上安装的 Python 库，以便集合的模块和插件能够正常工作。
- en: 'To install these libraries, you should use pip to install them:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装这些库，你应该使用 pip 来安装它们：
- en: '[PRE17]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Once installed, you will be able to use the modules and plugins which make up
    the collection.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦安装完成，你就可以使用构成该集合的模块和插件。
- en: Ansible Galaxy commands
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible Galaxy 命令
- en: Before finishing this chapter on Ansible Galaxy, let’s quickly discuss some
    other useful commands.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成关于 Ansible Galaxy 的这一章之前，让我们快速讨论一些其他有用的命令。
- en: 'The `ansible-galaxy` command has some of the basic functionality you would
    expect, such as the following:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '`ansible-galaxy` 命令具有一些你所期望的基本功能，例如以下内容：'
- en: '[PRE18]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: This displays details of the version and basic help options on the command,
    respectively.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 这将分别显示命令的版本详情和基本帮助选项。
- en: The `ansible-galaxy` command is split into two parts, which we have already
    touched upon.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '`ansible-galaxy` 命令分为两部分，我们已经涉及过了。'
- en: 'First, there is `ansible-galaxy collection`; from here, you can add the following
    commands:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，有 `ansible-galaxy collection`；从这里，你可以添加以下命令：
- en: '`download`: Retrieves collections and their dependencies, such as **tarballs**,
    which is an archive format for Linux machines for offline installations.'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`download`：检索集合及其依赖项，如 **tarballs**，这是 Linux 机器上的离线安装归档格式。'
- en: '`init`: Set up a new collection with the foundational structure.'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`init`：设置一个带有基础结构的新集合。'
- en: '`build`: Construct an Ansible collection artifact suitable for publication
    to Ansible Galaxy.'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`build`：构建一个适合发布到 Ansible Galaxy 的 Ansible 集合工件。'
- en: '`publish`: Release a collection artifact to Ansible Galaxy.'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`publish`：将集合工件发布到 Ansible Galaxy。'
- en: '`install`: Add collection(s) from the specified file(s), URL(s), or directly
    from Ansible Galaxy.'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`install`：从指定的文件、URL 或直接从 Ansible Galaxy 添加集合。'
- en: '`list`: Display the name and version of every collection in the collections
    path.'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`list`：显示集合路径中每个集合的名称和版本。'
- en: '`verify`: Contrast the checksums of the installed collection(s) with those
    on the server; any dependencies are not verified.'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`verify`：对已安装的集合进行校验和对比，与服务器上的校验和进行对比；任何依赖项不会被验证。'
- en: 'Secondly, there is `ansible-galaxy role`, as I am sure you will have already
    guessed; these commands are for working with roles:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 其次是 `ansible-galaxy role`，正如您已经猜到的，这些命令是用于处理角色的：
- en: '`init`: Set up a new role with the foundational structure of a role'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`init`：设置一个具有基础结构的新角色'
- en: '`remove`: Erase roles from the specified roles path'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`remove`：从指定的角色路径中删除角色'
- en: '`delete`: Remove the role from Galaxy. Note that this does not affect or modify
    the actual GitHub repository'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`delete`：从 Galaxy 中删除角色。请注意，这不会影响或修改实际的 GitHub 仓库'
- en: '`list`: Display the name and version of every role in the roles path'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`list`：显示角色路径中每个角色的名称和版本'
- en: '`search`: Query the Galaxy database using tags, platforms, authors, and keywords'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`search`：使用标签、平台、作者和关键词查询 Galaxy 数据库'
- en: '`import`: Incorporate a role into a Galaxy server'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`import`：将一个角色导入到 Galaxy 服务器'
- en: '`setup`: Oversee the connection between Galaxy and the designated source'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`setup`：监督 Galaxy 与指定源之间的连接'
- en: '`info`: Obtain detailed information about a particular role'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`info`：获取某个特定角色的详细信息'
- en: '`install`: Add role(s) from specified file(s), URL(s), or directly from Ansible
    Galaxy'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`install`：从指定的文件、URL 或直接从 Ansible Galaxy 添加角色'
- en: 'For more help on any of these commands, you can append `--help` to the end.
    For example, you can run the following:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 如需获得更多关于这些命令的帮助，您可以在命令末尾添加`--help`。例如，您可以运行以下命令：
- en: '[PRE19]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'This will give you detailed information on how to search Ansible Galaxy; for
    example, to search for my roles, you would need to run the following:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 这将为您提供如何搜索 Ansible Galaxy 的详细信息；例如，要搜索我的角色，您需要运行以下命令：
- en: '[PRE20]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'This returns a list of all of the roles I have published to Ansible Galaxy,
    or you could run this:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 这将返回我已发布到 Ansible Galaxy 的所有角色的列表，或者您也可以运行以下命令：
- en: '[PRE21]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'This lists all the roles you have installed in the roles path (which is `~/.ansible/roles/`).
    From there, you could run something like the following:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 这将列出您在角色路径（即 `~/.ansible/roles/`）中安装的所有角色。您可以从那里运行以下类似的命令：
- en: '[PRE22]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: This helps you obtain information on a role you have installed, which concludes
    our look at the `ansible-galaxy` command.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 这将帮助您获取有关您已安装角色的详细信息，这也标志着我们对 `ansible-galaxy` 命令的介绍结束。
- en: Summary
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have had an in-depth look at Ansible Galaxy, the website,
    and the command-line tool. We have also discussed the Ansible development and
    release cycle and understood what an Ansible Role is.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们深入探讨了 Ansible Galaxy、该网站以及命令行工具。我们还讨论了 Ansible 的开发和发布周期，并了解了 Ansible
    角色的概念。
- en: I am sure that you will agree that Ansible Galaxy offers valuable community
    services in that it allows users to share roles for everyday tasks and provides
    a way for users to contribute to the Ansible community by publishing their roles.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信您会同意，Ansible Galaxy 提供了宝贵的社区服务，因为它允许用户共享日常任务的角色，并为用户提供了一种通过发布角色为 Ansible
    社区做出贡献的方式。
- en: However, just be careful. Remember to check the code and read through bug trackers
    before using roles from Ansible Galaxy in production environments; after all,
    many roles need escalated privileges to execute their tasks successfully.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，请小心使用。记得在生产环境中使用 Ansible Galaxy 的角色之前，检查代码并阅读 bug 跟踪器；毕竟，许多角色需要提升权限才能成功执行其任务。
- en: As mentioned in this chapter, we will be creating our own Ansible Roles throughout
    the remainder of this title, and there will be additional hints and tips on creating
    and using roles as our Ansible playbooks get more and more sophisticated.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 正如本章所述，我们将在接下来的内容中创建自己的 Ansible 角色，并且随着 Ansible playbook 越来越复杂，会提供更多关于创建和使用角色的提示和建议。
- en: In our next chapter, we will look at more Ansible commands and tools that ship
    as part of Ansible Core.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨更多的 Ansible 命令和工具，这些工具是 Ansible Core 的一部分。
- en: Further reading
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'You can find more details on the two additional roles that we installed from
    Ansible Galaxy and the official documentation at the following sites:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下网站找到更多关于我们从 Ansible Galaxy 安装的两个额外角色以及官方文档的详细信息：
- en: '`geerlingguy.nginx`: [https://galaxy.ansible.com/ui/standalone/roles/geerlingguy/nginx](https://galaxy.ansible.com/ui/standalone/roles/geerlingguy/nginx)'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`geerlingguy.nginx`：[https://galaxy.ansible.com/ui/standalone/roles/geerlingguy/nginx](https://galaxy.ansible.com/ui/standalone/roles/geerlingguy/nginx)'
- en: '`itnok.update_ubuntu`: [https://galaxy.ansible.com/ui/standalone/roles/itnok/update_ubuntu/](https://galaxy.ansible.com/ui/standalone/roles/itnok/update_ubuntu/)'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`itnok.update_ubuntu`: [https://galaxy.ansible.com/ui/standalone/roles/itnok/update_ubuntu/](https://galaxy.ansible.com/ui/standalone/roles/itnok/update_ubuntu/)'
- en: '**Ansible Galaxy** **Documentation**: [https://ansible.readthedocs.io/projects/galaxy-ng/en/latest/community/userguide/](https://ansible.readthedocs.io/projects/galaxy-ng/en/latest/community/userguide/)'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Ansible Galaxy** **文档**: [https://ansible.readthedocs.io/projects/galaxy-ng/en/latest/community/userguide/](https://ansible.readthedocs.io/projects/galaxy-ng/en/latest/community/userguide/)'
