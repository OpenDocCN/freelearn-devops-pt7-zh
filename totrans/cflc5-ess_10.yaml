- en: Chapter 10. Extending Confluence
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章 扩展 Confluence
- en: Not every feature might be available in Confluence out of the box or as add-ons
    in the marketplace. Confluence is very extendable with custom plugins, and if
    you are a developer, you can even create your own plugin using the **Atlassian
    Software Development Kit** (**SDK**).
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 不是所有功能都可能在 Confluence 开箱即用或作为市场中的附加插件提供。Confluence 通过自定义插件非常可扩展，如果你是开发人员，你甚至可以使用
    **Atlassian 软件开发工具包** (**SDK**) 创建自己的插件。
- en: 'By the end of this chapter, you will have learned about:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将了解：
- en: Setting up your development environment
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置开发环境
- en: Using the Atlassian Plugin SDK
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Atlassian 插件 SDK
- en: The different extensions points
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不同的扩展点
- en: How to release your plugin
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何发布你的插件
- en: If you are not a developer yourself, this chapter will probably be difficult
    to read, but it could give you an insight into what is possible with extending
    Confluence.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不是开发人员，本章可能会很难阅读，但它可以让你了解通过扩展 Confluence 可以实现的功能。
- en: The Atlassian Plugin SDK
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Atlassian 插件 SDK
- en: Atlassian provides plugin developers with a Software Development Kit (SDK).
    By using this SDK, developers can create plugins that extend the functionality
    of all Atlassian products. The SDK allows you to quickly connect and use the plugin
    development platform.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Atlassian 提供了一个软件开发工具包（SDK）给插件开发人员。通过使用这个 SDK，开发人员可以创建扩展所有 Atlassian 产品功能的插件。SDK
    使你能够快速连接并使用插件开发平台。
- en: 'The Atlassian Plugin SDK makes your life easier by helping to do the following:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Atlassian 插件 SDK 通过帮助完成以下任务，让你的工作更轻松：
- en: Build plugins for any Atlassian application with a single tool.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用单一工具为任何 Atlassian 应用程序构建插件。
- en: Create a plugin skeleton, specific to the Atlassian application you are developing
    for.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个特定于你正在开发的 Atlassian 应用程序的插件框架。
- en: Download the application binaries, install your plugin, and start the application.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载应用程序二进制文件，安装插件，并启动应用程序。
- en: Dynamically re-install your plugin after changes during development. No restart
    required.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在开发过程中，修改插件后可动态重新安装，无需重新启动。
- en: Write quality unit tests and integration tests.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写高质量的单元测试和集成测试。
- en: Speed up the all-important code-deploy-test cycle.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加速至关重要的代码-部署-测试循环。
- en: Installing the Atlassian Plugin SDK
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Atlassian 插件 SDK
- en: Before we can start building our first plugin, we have to install the Atlassian
    Plugin SDK. We will go through the steps required to install the SDK on a Windows
    system.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始构建第一个插件之前，我们必须安装 Atlassian 插件 SDK。我们将逐步讲解如何在 Windows 系统上安装 SDK。
- en: Prerequisites
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 先决条件
- en: First we have to make sure our Windows system has the prerequisite software
    and is configured correctly. The Atlassian SDK relies on Version 1.6.x or higher
    of the Oracle JDK.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要确保我们的 Windows 系统已经安装了必备软件，并且配置正确。Atlassian SDK 依赖于 Oracle JDK 版本 1.6.x
    或更高版本。
- en: 'To install the Oracle JDK, perform the following steps:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Oracle JDK 的步骤如下：
- en: Download the latest JDK from [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html).
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)
    下载最新的 JDK。
- en: Note
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: At the time of writing the latest version is JDK 7 update 17.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 本文写作时，最新版本是JDK 7 更新 17。
- en: Double-click the downloaded installation file to start the installation wizard.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击下载的安装文件以启动安装向导。
- en: Select where you would like to install Java, or simply accept the default values.
    The location where you install the JDK will be referred to as `JAVA_HOME`.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择你希望安装 Java 的位置，或者直接接受默认值。你安装 JDK 的位置将被称为 `JAVA_HOME`。
- en: Right-click the Computer icon.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击“计算机”图标。
- en: Select **Advanced system settings** from the left-hand side menu.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧菜单中选择 **高级系统设置**。
- en: Click on the **Environment Variables** button.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **环境变量** 按钮。
- en: Create a new environmental variable name `JAVA_HOME` with the value of where
    you just installed Java as shown:![Prerequisites](img/9526EN_10_01.jpg)
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的环境变量 `JAVA_HOME`，其值为你刚安装的 Java 路径，如下所示：![先决条件](img/9526EN_10_01.jpg)
- en: Now that you have the JDK installed on your system, add the JAVA `bin` directory
    to your path to ensure that you can use Java from the command prompt. Again, we
    assume a Windows setup.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经在系统上安装了 JDK，请将 JAVA `bin` 目录添加到系统路径中，确保可以从命令提示符中使用 Java。再次假设这是 Windows
    环境。
- en: 'To add `JAVA_HOME` to your path, perform the following steps:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 若要将 `JAVA_HOME` 添加到系统路径中，请执行以下步骤：
- en: Right-click the Computer icon.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击“计算机”图标。
- en: Select **Advanced system settings** from the left-hand side menu.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧菜单中选择**高级系统设置**。
- en: Click on the **Environment Variables** button.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**环境变量**按钮。
- en: Locate the **Path** variable under the System variables and click on **Edit...**.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在系统变量中找到**Path**变量并点击**编辑...**。
- en: Add `;%JAVA_HOME%\bin` to the end of variable value.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`;%JAVA_HOME%\bin`添加到变量值的末尾。
- en: Save the changes and close all dialogs.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存更改并关闭所有对话框。
- en: Before we continue, we have to make sure the JDK is installed correctly so that
    the Atlassian SDK is able to use it.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，我们必须确保JDK已正确安装，以便Atlassian SDK能够使用它。
- en: 'To verify your JDK installation, perform the following steps:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 为了验证你的JDK安装是否正确，请执行以下步骤：
- en: Open a command prompt window in Windows.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Windows中打开一个命令提示符窗口。
- en: 'Type the following command to verify that the `JAVA_HOME` variable is set:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下命令验证`JAVA_HOME`变量是否已设置：
- en: '[PRE0]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This should return a path, that is `C:\Program Files (x86)\Java\jdk1.7.0_17`.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这应该会返回一个路径，即`C:\Program Files (x86)\Java\jdk1.7.0_17`。
- en: 'When the variable is set, verify that your **Path** includes the JDK bin directory.
    Type the following command:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置变量后，验证你的**Path**是否包含JDK的bin目录。输入以下命令：
- en: '[PRE1]'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This should display the version of Java installed, that is:'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这应该会显示已安装的Java版本，即：
- en: '[PRE2]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: If you have the JDK installed and your **Path** is configured correctly, you
    can move forward to the next step.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你已经安装了JDK并且**Path**已正确配置，你可以继续进行下一步。
- en: When building a plugin for Confluence, the application will be running on your
    desktop. For Confluence to be able to start, it assumes **port 1990** is available.
    On most machines this would not be an issue.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在为Confluence构建插件时，应用程序将运行在你的桌面上。为了让Confluence能够启动，它假设**端口1990**是可用的。大多数机器上这不会成为问题。
- en: 'Verify your port numbers by performing the following step:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 通过执行以下步骤验证你的端口号：
- en: 'Open a command prompt window and type the following command:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符窗口并输入以下命令：
- en: '[PRE3]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: If the preceding command doesn't return anything, the port is available. If
    the preceding command does return something, port 1990 is already being used by
    another application. The Atlassian SDK will notice this during startup and assign
    a different port to Confluence. We will go into this in the *Building, installing,
    and running your plugin* section.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果前面的命令没有返回任何内容，则表示端口可用。如果前面的命令返回了内容，则说明端口1990已经被其他应用占用。Atlassian SDK在启动时会注意到这一点，并为Confluence分配一个不同的端口。我们将在*构建、安装和运行插件*部分深入讨论这个问题。
- en: Note
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you are developing your plugin on a Linux or Mac, you can follow the online
    guide for installing the JDK at [https://developer.atlassian.com/display/DOCS/Set+up+the+SDK+Prerequisites+for+Linux+or+Mac](https://developer.atlassian.com/display/DOCS/Set+up+the+SDK+Prerequisites+for+Linux+or+Mac).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在Linux或Mac上开发插件，可以参考[https://developer.atlassian.com/display/DOCS/Set+up+the+SDK+Prerequisites+for+Linux+or+Mac](https://developer.atlassian.com/display/DOCS/Set+up+the+SDK+Prerequisites+for+Linux+or+Mac)的在线指南来安装JDK。
- en: Setting up the Atlassian SDK
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置Atlassian SDK
- en: With all the prerequisites installed, we can download and set up the Atlassian
    SDK.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有先决条件安装完毕后，我们可以下载并设置Atlassian SDK。
- en: 'Download the latest version of the SDK via: [https://marketplace.atlassian.com/download/plugins/atlassian-plugin-sdk-windows](https://marketplace.atlassian.com/download/plugins/atlassian-plugin-sdk-windows)
    (direct download link).'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过以下链接下载最新版本的SDK：[https://marketplace.atlassian.com/download/plugins/atlassian-plugin-sdk-windows](https://marketplace.atlassian.com/download/plugins/atlassian-plugin-sdk-windows)（直接下载链接）。
- en: Locate the downloaded installer and double-click on the EXE file.![Setting up
    the Atlassian SDK](img/9526EN_10_02.jpg)
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定位到下载的安装程序并双击EXE文件。![设置Atlassian SDK](img/9526EN_10_02.jpg)
- en: Click on **Next** and select a location to install the SDK.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下一步**并选择一个安装SDK的路径。
- en: Follow the next screens to install the SDK.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 跟随接下来的界面安装SDK。
- en: The Atlassian Plugin SDK is now installed and we are ready to create our first
    plugin.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在Atlassian插件SDK已安装，我们准备创建第一个插件。
- en: 'To verify that the SDK is configured correctly, perform the following step:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 为了验证SDK是否配置正确，执行以下步骤：
- en: 'Open a command prompt window and run the following command:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符窗口并运行以下命令：
- en: '[PRE4]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The system should respond with similar information as follows:'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 系统应该会响应类似以下信息：
- en: '[PRE5]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Commands
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 命令
- en: The Atlassian Plugin SDK provides a set of shell scripts for creating, installing,
    and building plugins for Atlassian products. Let's take a look at some typical
    tasks and examples of commands in the SDK.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: Atlassian插件SDK提供了一组脚本，用于为Atlassian产品创建、安装和构建插件。让我们看看SDK中的一些典型任务和命令示例。
- en: Creating a new plugin
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建一个新的插件
- en: When you want to build a new plugin, you need to create a plugin skeleton. Open
    a command prompt and run the following command in the location where you want
    to create the plugin.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 当你想要构建一个新的插件时，需要创建一个插件骨架。打开命令提示符并在你想要创建插件的位置运行以下命令。
- en: '[PRE6]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Adding a new module to your plugin
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 向你的插件中添加一个新模块
- en: 'If you want to add a new module to your plugin, you could do this via the command
    line too. Open your command prompt and browse to the location of your plugin.
    Within your plugin directory run:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想为你的插件添加一个新的模块，也可以通过命令行来完成。打开命令提示符并浏览到插件所在位置。在插件目录中运行：
- en: '[PRE7]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Running a plugin in an application
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在应用程序中运行插件
- en: 'If you want to run your plugin in its target application, go to the plugin
    directory using the command prompt and type:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想在目标应用程序中运行你的插件，使用命令提示符进入插件目录并输入：
- en: '[PRE8]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The preceding command will start the application specified in your plugin (Confluence,
    JIRA, and so on) and automatically install your plugin.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将启动插件中指定的应用程序（例如 Confluence、JIRA 等），并自动安装你的插件。
- en: Running a specific version of an application
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 运行特定版本的应用程序
- en: 'If you are building a plugin that should work for a specific version, or you
    just want to test your plugin against a new version of the application, you can
    specify this while starting the application. Run the following commands in your
    plugin directory:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在构建一个插件，并且希望它能够与特定版本的应用程序兼容，或者你只是想测试你的插件在新版本应用程序中的表现，可以在启动应用程序时指定这一点。在你的插件目录中运行以下命令：
- en: '[PRE9]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The `atlas-clean` command will clear any previously run version of the plugin.
    This is only needed if the previous run was a different version.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '`atlas-clean`命令将清除任何先前运行的插件版本。只有在之前运行的是不同版本时才需要此操作。'
- en: Using the Maven Command Line Interface (CLI) plugin
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Maven 命令行界面（CLI）插件
- en: 'The SDK bundles the Maven CLI plugin, allowing you to run a command against
    a development Confluence installation. To use it with your plugin''s host application,
    go to the plugin''s project directory (where you created the plugin) and type:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: SDK 捆绑了 Maven CLI 插件，允许你在开发 Confluence 安装中运行命令。要将其与插件的宿主应用程序一起使用，进入插件的项目目录（即你创建插件的地方）并输入：
- en: '[PRE10]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: When the command-line interface is started you can use the command `pi` to package
    your plugin and install it into the running Confluence installation.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 当命令行界面启动时，你可以使用命令`pi`来打包你的插件并将其安装到正在运行的 Confluence 安装中。
- en: Running a standalone application
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 运行独立应用程序
- en: 'If you want to quickly test a new version of an application, you can use the
    standalone command to start that application. You can run this command from anywhere,
    as there is no plugin required:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想快速测试应用程序的新版本，可以使用独立命令来启动该应用程序。你可以在任何地方运行此命令，因为不需要插件：
- en: '[PRE11]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The help command
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 帮助命令
- en: 'There are more commands available, but these are the most used. If you are
    ever in doubt how a command is used and which are available, run the following
    command:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 有更多可用的命令，但这些是最常用的。如果你不确定某个命令的用法或者有哪些命令可用，可以运行以下命令：
- en: '[PRE12]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Maven
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Maven
- en: When you are building a plugin, you will be using Maven as an underlying library
    dependency management and build tool. Maven is already bundled with the Atlassian
    Plugin SDK, so there is no need to install it on your machine. Even if you already
    have a Maven version installed, you should use the bundled version, as the SDK
    requires a specific Maven version.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 当你构建插件时，Maven 将作为底层库依赖管理和构建工具。Maven 已经包含在 Atlassian Plugin SDK 中，因此不需要在你的机器上单独安装它。即使你已经安装了
    Maven 版本，也应该使用捆绑的版本，因为 SDK 需要特定的 Maven 版本。
- en: The Atlassian SDK Maven comes with configured settings so that building an Atlassian
    plugin will be as easy as possible. Using Maven and building your plugin does
    require an active Internet connection, as Maven will resolve and download all
    dependencies needed during the build process.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: Atlassian SDK Maven 配备了已配置的设置，使得构建 Atlassian 插件尽可能简单。使用 Maven 和构建插件确实需要一个活跃的互联网连接，因为
    Maven 会在构建过程中解析并下载所有需要的依赖。
- en: 'If you are behind a company proxy, make sure to configure Maven accordingly:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在公司代理后面，确保相应配置 Maven：
- en: Open `%USERPROFILE%/.m2/settings.xml` in a text editor. If the file doesn't
    exist, you can create it.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文本编辑器中打开`%USERPROFILE%/.m2/settings.xml`文件。如果该文件不存在，你可以创建它。
- en: 'Add the following section to your file and make sure to replace the settings
    with your proxy settings:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的文件中添加以下部分，并确保用你的代理设置替换这些配置：
- en: '[PRE13]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Save the file.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件。
- en: With a normal Maven installation, or if you have multiple installations, `mvn`
    would be available via your command prompt. To ensure you use the Atlassian provided
    version, Maven uses `atlas-mvn` instead.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 对于普通的Maven安装，或者如果你有多个安装版本，`mvn`将通过命令提示符使用。为了确保使用Atlassian提供的版本，Maven将使用`atlas-mvn`代替。
- en: The pom.xml file
  id: totrans-104
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: pom.xml 文件
- en: In the root of your plugin, there is a `pom.xml` file; this file is the core
    of a project's configuration in Maven. In this file, you can define dependencies
    on other libraries and specify which Confluence version you want to run, but it
    also holds the name and description of your plugin.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在插件的根目录下，有一个`pom.xml`文件；该文件是Maven中项目配置的核心。在这个文件中，你可以定义对其他库的依赖并指定要运行的Confluence版本，它还包含插件的名称和描述。
- en: The `pom.xml` file is what is being used when you start your plugin with `atlas-run`.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '`pom.xml`文件是你使用`atlas-run`启动插件时使用的文件。'
- en: The plugin descriptor
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 插件描述符
- en: Every plugin must have a plugin descriptor file. The file, `atlassian-plugin.xml`,
    describes your plugin to the target application. The Atlassian SDK generates the
    `atlassian-plugin.xml` file when you create your plugin for the first time. The
    descriptor is also updated when you use `atlassian-create-confluence-plugin-module`
    to add a new module.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 每个插件必须有一个插件描述符文件。该文件`atlassian-plugin.xml`用于描述插件与目标应用的关系。当你第一次创建插件时，Atlassian
    SDK会生成`atlassian-plugin.xml`文件。每当你使用`atlassian-create-confluence-plugin-module`添加新模块时，描述符文件也会更新。
- en: At some point during the development of you plugin, you will have to update
    the file manually, so it's a good idea to have a bit of understanding as to what
    is in the plugin descriptor. The plugin descriptor is located in the directory
    `<plugin_home>/src/main/resources/`.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在插件开发的某个阶段，你需要手动更新文件，因此理解插件描述符的内容是很有用的。插件描述符位于`<plugin_home>/src/main/resources/`目录下。
- en: 'A very minimal plugin descriptor''s built looks as follows:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 一个非常简洁的插件描述符的构建如下所示：
- en: '[PRE14]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: This descriptor file mostly contains variables; these are Maven variables and
    will be replaced with the values from your `pom.xml` file when you build your
    plugin. The rest of the descriptor file is empty; this plugin does not contain
    any components, which is very unlikely for a plugin.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 该描述符文件主要包含变量，这些是Maven变量，并将在你构建插件时，使用`pom.xml`文件中的值替换。描述符文件的其余部分为空；这个插件没有包含任何组件，这对于插件来说是非常不常见的。
- en: We will be adding more modules to this file across this chapter, if you want
    an overview of the available modules, skip ahead to the *Plugin module types*
    section.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将向这个文件添加更多的模块，如果你想了解可用模块的概览，可以跳到*插件模块类型*部分。
- en: Using a development environment
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用开发环境
- en: When developing your plugin, it is a good idea to use an IDE, short for integrated
    development environment. A development environment will help you to make fewer
    mistakes, and can come in very handy when trying to debug your plugin.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发插件时，使用集成开发环境（IDE）是个不错的主意。开发环境能帮助你减少错误，并且在调试插件时非常有用。
- en: Installing Eclipse on Windows
  id: totrans-116
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在Windows上安装Eclipse
- en: We will be using Eclipse, but if you have a different preference, use your own
    IDE.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Eclipse，但如果你有其他偏好，也可以使用自己的IDE。
- en: Download Eclipse for JAVA EE developers from [http://www.eclipse.org/downloads/](http://www.eclipse.org/downloads/).
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[http://www.eclipse.org/downloads/](http://www.eclipse.org/downloads/)下载适用于JAVA
    EE开发者的Eclipse。
- en: Extract the downloaded ZIP file onto the root of you hard drive. When you are
    done, if your hard drive root is `C:\`, you will have the following folder on
    your hard drive:![Installing Eclipse on Windows](img/9526EN_10_03.jpg)
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将下载的ZIP文件解压到硬盘根目录。当你完成时，如果你的硬盘根目录是`C:\`，你将会在硬盘上看到以下文件夹：![Installing Eclipse
    on Windows](img/9526EN_10_03.jpg)
- en: In the next step, we are making sure Eclipse uses the JDK we just installed;
    this is done by editing the Eclipse initialization file.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一步中，我们将确保Eclipse使用我们刚刚安装的JDK；这通过编辑Eclipse初始化文件来完成。
- en: Make a copy of the original `eclipse.ini` and name it `eclipse.ini.original`.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 备份原始的`eclipse.ini`文件，并将其命名为`eclipse.ini.original`。
- en: Open the `eclipse.ini` file in Notepad.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在记事本中打开`eclipse.ini`文件。
- en: 'Add a `–vm` entry before any `-vmargs` entry in the file. The entry should
    point to the value of your `%JAVA_HOME%/bin`. Eclipse requires that you reverse
    the slashes to forward slashes. Your file should look similar to this:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件中`-vmargs`条目之前添加`–vm`条目。该条目应该指向`%JAVA_HOME%/bin`的值。Eclipse要求你将反斜杠转换为正斜杠。你的文件应如下所示：
- en: '[PRE15]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Close and save the file.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭并保存文件。
- en: Start Eclipse and choose a location where Eclipse will store you workspaces.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Eclipse并选择Eclipse存储工作区的位置。
- en: Installing the Maven Eclipse plugin
  id: totrans-127
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 安装Maven Eclipse插件
- en: We will be using the Maven Eclipse plugin, which will help us with getting the
    dependencies needed for our Confluence plugins.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Maven Eclipse插件，它将帮助我们获取Confluence插件所需的依赖项。
- en: Select **Help** | **Install** new Software. Click on the **Add** button to add
    a new repository.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**帮助** | **安装**新软件。点击**添加**按钮以添加新的仓库。
- en: Enter `Sonatype M2Eclipse` in the **Name** field.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**名称**字段中输入`Sonatype M2Eclipse`。
- en: Enter `http://m2eclipse.sonatype.org/sites/m2e` in the **Location** field.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**位置**字段中输入`http://m2eclipse.sonatype.org/sites/m2e`。
- en: Click on **OK** to close the dialog. The system searches the site for the plugin.
    After a moment, the **Name** field fills with the **Maven Integration for Eclipse**
    software as the following:![Installing the Maven Eclipse plugin](img/9526EN_10_04.jpg)
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**关闭对话框。系统将搜索该站点以查找插件。稍等片刻，**名称**字段将填写**Maven Integration for Eclipse**软件，如下所示：![安装Maven
    Eclipse插件](img/9526EN_10_04.jpg)
- en: Check the checkbox and click on **Next**.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选中复选框并点击**下一步**。
- en: Accept the terms of the license agreements and click on **Finish**.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接受许可协议的条款并点击**完成**。
- en: Restart Eclipse when prompted.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在提示时重新启动Eclipse。
- en: Configuring the Maven plugin
  id: totrans-136
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 配置Maven插件
- en: After Eclipse has restarted, ensure that the Maven plugin is configured correctly.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: Eclipse重新启动后，确保Maven插件已正确配置。
- en: Choose **Window** | **Preferences** from the eclipse menu bar.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Eclipse菜单栏选择**窗口** | **首选项**。
- en: Type `Maven` in the filter text field and select **Installations**.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在过滤文本字段中输入`Maven`并选择**安装**。
- en: Click on the **Add** button to add a new Maven installation.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加**按钮以添加新的Maven安装。
- en: Browse to your Atlassian SDK installation and select the `apache-maven` folder.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览到您的Atlassian SDK安装位置并选择`apache-maven`文件夹。
- en: Click on **OK**.![Configuring the Maven plugin](img/9526EN_10_05.jpg)
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**。![配置Maven插件](img/9526EN_10_05.jpg)
- en: Click on **Apply**.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**应用**。
- en: Click on the Maven root.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击Maven根目录。
- en: Uncheck **Download repository index updates on startup**. This prevents Maven
    from updating on Eclipse startup, which can be time consuming. The `atlas-` commands
    will update the repositories for you.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 取消选中**在启动时下载仓库索引更新**。这样可以防止Maven在Eclipse启动时更新，这可能会消耗较多时间。`atlas-`命令将为您更新仓库。
- en: Click on **OK** to close the dialog.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**关闭对话框。
- en: Building your first plugin
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建您的第一个插件
- en: When you have installed the Atlassian SDK, you can start building your first
    plugin. We will be building a new Confluence macro, which can be used to format
    content.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Atlassian SDK后，您可以开始构建第一个插件。我们将构建一个新的Confluence宏，它可以用于格式化内容。
- en: 'We will take a look at:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将查看：
- en: The macro interface, which is the base of all macros
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 宏接口，这是所有宏的基础
- en: The `xhtml-macro` module
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`xhtml-macro`模块'
- en: Adding resources, such as a stylesheet, to your plugin
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向插件添加资源，例如样式表
- en: We will be building a macro that displays links as buttons.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将构建一个将链接显示为按钮的宏。
- en: Creating the plugin project
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建插件项目
- en: First, we have to create our plugin skeleton using the Atlassian SDK and load
    our new project into Eclipse.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要使用Atlassian SDK创建插件骨架，并将新项目加载到Eclipse中。
- en: Open a command prompt and navigate to the location for you new plugin.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符并导航到新插件的位置。
- en: 'Enter the following command to create a new Confluence plugin:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下命令以创建一个新的Confluence插件：
- en: '[PRE16]'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'When prompted, enter the following information to identify your plugin:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在提示时，输入以下信息以标识您的插件：
- en: '| `groupId` | `com.example.confluence` |'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `groupId` | `com.example.confluence` |'
- en: '| `artifactId` | `button-macro` |'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `artifactId` | `button-macro` |'
- en: '| `version` | `1.0-snapshot` |'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `版本` | `1.0-snapshot` |'
- en: '| `package` | `com.example.confluence.button` |'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `package` | `com.example.confluence.button` |'
- en: Confirm your entries when prompted.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在提示时确认您的输入。
- en: Start Eclipse.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Eclipse。
- en: Select **File** | **Import...** from the Eclipse menu.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Eclipse菜单中选择**文件** | **导入...**。
- en: Type `Maven` in the filter text field and select **Existing Maven Projects**:![Creating
    the plugin project](img/9526EN_10_06.jpg)
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在过滤文本字段中输入`Maven`，然后选择**现有的Maven项目**：![创建插件项目](img/9526EN_10_06.jpg)
- en: Click on **Browse** and browse to the location where you created the plugin.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**浏览**并浏览到您创建插件的位置。
- en: Select the `pom.xml` file and click on **Finish**. Eclipse will now import your
    project and download all dependencies if needed. This can take a while.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`pom.xml`文件并点击**完成**。Eclipse现在将导入您的项目并根据需要下载所有依赖项。这个过程可能需要一些时间。
- en: 'Sometimes an error will occur during this process, if so:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有时在此过程中会发生错误，如果是这样：
- en: Right-click on the imported project (in the project explorer).
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击导入的项目（在项目资源管理器中）。
- en: Select **Maven** | **Update Project Configuration**.
  id: totrans-172
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**Maven** | **更新项目配置**。
- en: Updating the generated code
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更新生成的代码
- en: When you have just generated a new plugin skeleton, you have to make sure all
    the details, like the plugin name or description, are correct. In this section,
    we'll check the Confluence version value and tweak some settings. Open your plugin
    project in Eclipse and follow along.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 当你刚刚生成一个新的插件骨架时，你需要确保所有细节，如插件名称或描述，都是正确的。在本节中，我们将检查Confluence版本值并调整一些设置。打开Eclipse中的插件项目并跟随操作。
- en: Adding plugin metadata to the POM file
  id: totrans-175
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将插件元数据添加到POM文件
- en: The metadata in your POM file will be used when your plugin is built. This would
    be the place to add your company details and description of the plugin.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: POM文件中的元数据将在插件构建时使用。这将是添加公司详细信息和插件描述的地方。
- en: Edit the `pom.xml` file in the root of your plugin.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑插件根目录中的`pom.xml`文件。
- en: 'Add your company or organization details to the `<organization>` element:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您的公司或组织的详细信息添加到`<organization>`元素中：
- en: '[PRE17]'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Update the `<name>` and `<description>` elements:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新`<name>`和`<description>`元素：
- en: '[PRE18]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Save the file.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件。
- en: Verifying your Confluence version
  id: totrans-183
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 验证您的Confluence版本
- en: When you generated a new plugin skeleton, a default Confluence version was included
    in your `pom.xml` file. Before you start building your plugin, make sure this
    version is up-to-date.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 当你生成了一个新的插件骨架时，默认的Confluence版本已经包含在`pom.xml`文件中。在开始构建插件之前，请确保此版本是最新的。
- en: Open the `pom.xml` file in Eclipse.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Eclipse中的`pom.xml`文件。
- en: Scroll to the bottom of the file.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到文件的底部。
- en: Find the `<properties>` element. This section lists the version of Confluence
    and other properties of your plugin.
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找`<properties>`元素。本节列出了Confluence版本及插件的其他属性。
- en: Change the Confluence version to `5.1.2`, or a more recent one if available.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将Confluence版本更改为`5.1.2`，如果有更高版本则选择更新版本。
- en: Save the `pom.xml` file. Eclipse will automatically download the new dependencies
    for you.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存`pom.xml`文件。Eclipse将自动为您下载新的依赖项。
- en: Cleaning up the plugin skeleton
  id: totrans-190
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 清理插件骨架
- en: We are building a new macro, and most of the generated code is for a different
    component. Therefore, we have no use for the generated code. Before we start,
    let's clean up first.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在构建一个新的宏，生成的大部分代码用于不同的组件。因此，我们不需要生成的代码。在开始之前，让我们先清理一下。
- en: Open `src/main/resources/atlassian-plugin.xml` in Eclipse.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Eclipse中打开`src/main/resources/atlassian-plugin.xml`。
- en: Remove the `<web-resource>`, `<component-import>`, and `<component>` sections.
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除`<web-resource>`、`<component-import>`和`<component>`部分。
- en: 'Also remove the corresponding files:'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 还需要删除相应的文件：
- en: '`MyPluginComponent.java`'
  id: totrans-195
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MyPluginComponent.java`'
- en: '`MyPluginComponentImpl.java`'
  id: totrans-196
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MyPluginComponentImpl.java`'
- en: '`MyComponentWiredTest.java`'
  id: totrans-197
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MyComponentWiredTest.java`'
- en: '`MyComponentUnitTest.java`'
  id: totrans-198
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MyComponentUnitTest.java`'
- en: Adding a new macro module
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加新的宏模块
- en: With our plugin skeleton ready for development, we will be adding some new modules
    to our plugin descriptor.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的插件骨架准备好进行开发后，我们将向插件描述符中添加一些新的模块。
- en: Open your `atlassian-plugin.xml` file in Eclipse.
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Eclipse中打开您的`atlassian-plugin.xml`文件。
- en: 'Add the `xhtml-macro` component to the file:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`xhtml-macro`组件添加到文件中：
- en: '[PRE19]'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The `Class` argument is pointing to an implementation of our macro.
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Class`参数指向我们宏的实现。'
- en: Implementing the macro interface
  id: totrans-205
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实现宏接口
- en: The macro module we just defined will call the `execute` method of our Java
    class `com.example.confluence.button.LinkButton`. That class doesn't exist yet,
    so let's create it.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚定义的宏模块将调用我们Java类`com.example.confluence.button.LinkButton`的`execute`方法。该类还不存在，所以我们来创建它。
- en: Right-click on the `com.example.confluence.button` package (folder) in your
    project.
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击项目中的`com.example.confluence.button`包（文件夹）。
- en: 'Select **New** | **Class** and enter the following details:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**新建** | **类**并输入以下详细信息：
- en: '**Package** – `com.example.confluence.button`'
  id: totrans-209
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**包** – `com.example.confluence.button`'
- en: '**Name** – `LinkButton`'
  id: totrans-210
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**名称** – `LinkButton`'
- en: '**Interfaces** – Add `com.atlassian.confluence.macro.Macro`'
  id: totrans-211
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**接口** – 添加`com.atlassian.confluence.macro.Macro`'
- en: Click on **Finish**.
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**完成**。
- en: Your new Java class will be generated, and you might notice we have to implement
    three methods.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 您的新Java类将被生成，您可能会注意到我们需要实现三个方法。
- en: Implementing the getBodyType and getOutputType methods
  id: totrans-214
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实现getBodyType和getOutputType方法
- en: These two methods specify whether the macro has a body (and the type of body
    if it does have one) and the output type, be it block or inline. The macro we
    implement will have a body and will have the block output type.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种方法指定了宏是否有主体（如果有主体，则指定其类型）以及输出类型，是块级元素还是内联元素。我们实现的宏将有主体，并且会有块级输出类型。
- en: '[PRE20]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Implementing the execute method
  id: totrans-217
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实现`execute`方法
- en: The execute method will determine what the output of our macro will be. I have
    included an easy template with some HTML to style our button. We will be using
    the body of our macro and use that as input for our button.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '`execute`方法将决定我们的宏输出是什么。我已经包括了一个简单的模板，里面有一些HTML代码来样式化我们的按钮。我们将使用宏的主体并将其作为按钮的输入。'
- en: '[PRE21]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The template we are using makes use of the **Atlassian User Interface** (**AUI**),
    a library with JavaScript, stylesheets, and templates that is included in all
    Atlassian products. If you use the AUI in your plugin, it will have the same look
    and feel as Confluence.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用的模板使用了**Atlassian用户界面**（**AUI**），这是一个包含JavaScript、样式表和模板的库，所有Atlassian产品中都包括这个库。如果您的插件使用了AUI，它将与Confluence具有相同的外观和感觉。
- en: More information about the AUI can be found online at [https://developer.atlassian.com/display/AUI/](https://developer.atlassian.com/display/AUI/).
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于AUI的信息可以在线查阅，网址为[https://developer.atlassian.com/display/AUI/](https://developer.atlassian.com/display/AUI/)。
- en: Building, installing, and running your plugin
  id: totrans-222
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建、安装和运行您的插件
- en: When we have the basics set for our plugin, it is time to build and run the
    plugin in Confluence.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们为插件设置好基础后，就该在Confluence中构建和运行插件了。
- en: Save all the changes to your code.
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存所有代码更改。
- en: Open a command prompt and navigate to the location of your plugin.
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符并导航到插件的位置。
- en: 'Run the following command:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令：
- en: '[PRE22]'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'This command will build your plugin, start a Confluence installation, and install
    your plugin in that Confluence installation. This may take a while. When the process
    is completed, the last lines of the output should look as follows:'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该命令将构建您的插件，启动一个Confluence安装实例，并在该Confluence实例中安装您的插件。这个过程可能需要一些时间。完成后，输出的最后几行应如下所示：
- en: '[PRE23]'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: If Confluence couldn't use port 1990 because another application is using it,
    Confluence will start on a different port and will mention it in these lines.
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果Confluence无法使用1990端口，因为另一个应用程序正在使用它，Confluence会在不同的端口启动，并在这些行中提到它。
- en: Open your browser at `http://localhost:1990/confluence`.
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中打开`http://localhost:1990/confluence`。
- en: At the Confluence login, enter a username `admin` with the password `admin`.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Confluence登录界面，输入用户名`admin`，密码为`admin`。
- en: Create a new page with your new macro.
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新页面，并使用您的新宏。
- en: Click on **Create** in the navigation bar.
  id: totrans-234
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击导航栏中的**创建**。
- en: Select **Insert** | **Other macros**.
  id: totrans-235
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**插入** | **其他宏**。
- en: Search for `Link Button`.
  id: totrans-236
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索`Link Button`。
- en: Insert your macro.![Building, installing, and running your plugin](img/9526EN_10_07.jpg)
  id: totrans-237
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 插入您的宏。![构建、安装和运行您的插件](img/9526EN_10_07.jpg)
- en: Add a link in the body of your macro as you would normally do in Confluence.
  id: totrans-238
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在宏的主体中添加链接，就像您在Confluence中通常做的那样。
- en: Save the page.
  id: totrans-239
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存页面。
- en: Watch how your new macro has formatted your link:![Building, installing, and
    running your plugin](img/9526EN_10_08.jpg)
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 观察您的新宏是如何格式化您的链接的：![构建、安装和运行您的插件](img/9526EN_10_08.jpg)
- en: Adding resources
  id: totrans-241
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加资源
- en: What the preceding screenshot displays is not very user-readable; it would be
    better if the link itself is white. For this we have to add resources, a CSS file,
    to our plugin.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的截图显示的内容不太适合用户阅读；如果链接本身是白色的，会更好。为此，我们需要将资源（一个CSS文件）添加到我们的插件中。
- en: 'In the `atlassian-plugin.xml` file, add the `<web-resources>` element to the
    file:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在`atlassian-plugin.xml`文件中，添加`<web-resources>`元素：
- en: '[PRE24]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The `<resource>` element determines which file will be included with our plugin.
    The location is relative to the `src/main/resources` folder.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '`<resource>`元素决定了哪个文件将与我们的插件一起包含。该位置相对于`src/main/resources`文件夹。'
- en: The `<context>` element will tell Confluence when to load these extra resources.
    In our case, the resources are loaded on every page except for administrative
    screens.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '`<context>`元素将告诉Confluence何时加载这些额外的资源。在我们的情况下，资源会在每个页面上加载，除了管理界面。'
- en: 'The following CSS has to be added to our `button-macro.css` class:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 以下CSS必须添加到我们的`button-macro.css`类中：
- en: '[PRE25]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'After reloading our plugin, the button should now look like this:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 重新加载插件后，按钮现在应该如下所示：
- en: '![Adding resources](img/9526EN_10_09.jpg)'
  id: totrans-250
  prefs: []
  type: TYPE_IMG
  zh: '![添加资源](img/9526EN_10_09.jpg)'
- en: Tip
  id: totrans-251
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Reloading your plugin with FastDev**'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '**使用FastDev重新加载您的插件**'
- en: FastDev is a feature of Atlassian SDK that speeds up plugin development. FastDev
    will scan your plugin directory for changes, and is able to package and reinstall
    your plugin directly from Confluence. More information on FastDev at [https://developer.atlassian.com/display/DOCS/Automatic+Plugin+Reinstallation+with+FastDev](https://developer.atlassian.com/display/DOCS/Automatic+Plugin+Reinstallation+with+FastDev).
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: FastDev是Atlassian SDK的一项功能，能够加速插件开发。FastDev会扫描插件目录中的变化，并能够直接从Confluence打包并重新安装插件。更多关于FastDev的信息，请访问[https://developer.atlassian.com/display/DOCS/Automatic+Plugin+Reinstallation+with+FastDev](https://developer.atlassian.com/display/DOCS/Automatic+Plugin+Reinstallation+with+FastDev)。
- en: Releasing your plugin
  id: totrans-254
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发布插件。
- en: At a certain point, you are done developing your plugin and you want to deliver
    the end result to your company or maybe even to the rest of world. The first thing
    we have to do is release your plugin.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 在某个时刻，你完成了插件的开发，并希望将最终成果交付给你的公司，甚至是全世界。我们需要做的第一件事就是发布你的插件。
- en: The release process relies heavily on you to have a revision control system
    for your plugin, like Subversion or GIT. If you don't have such a system in place,
    you could consider taking a look at [http://bitbucket.org](http://bitbucket.org),
    which is an online Atlassian tool that offers free source hosting.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 发布过程很大程度上依赖于你为插件设置了版本控制系统，比如Subversion或GIT。如果你没有这样的系统，可以考虑查看[http://bitbucket.org](http://bitbucket.org)，这是一个免费的在线Atlassian工具，提供源代码托管服务。
- en: Before we can release our plugin, we have to make sure that our `pom.xml` file
    has all the requirements to do so.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们发布插件之前，我们必须确保`pom.xml`文件包含所有必要的要求。
- en: 'To set the SCM properties, perform the following steps:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 设置SCM属性，按照以下步骤进行：
- en: Open the `pom.xml` file in your plugin.
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开插件中的`pom.xml`文件。
- en: 'Add the following lines to the file with your SCM information:'
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下行添加到文件中，包含你的SCM信息：
- en: '[PRE26]'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Save the `pom.xml` file.
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存`pom.xml`文件。
- en: The `connection` and `developerConnection` tell Maven how to connect to your
    repository. While `connection` requires read access for Maven to be able to find
    the source code (for example, an update), `developerConnection` requires a connection
    that will give write access.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '`connection`和`developerConnection`告诉Maven如何连接到你的仓库。`connection`要求Maven有读取权限，以便能够找到源代码（例如更新），而`developerConnection`要求有写入权限的连接。'
- en: The `url` element is not required, but can be used for a publicly accessible
    URL to your repository.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '`url`元素不是必需的，但可以用于指向你仓库的公开URL。'
- en: Setting distributionManagement
  id: totrans-265
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置distributionManagement。
- en: The release process will upload your plugin to a specified location defined
    by the `distributionManagement` section in your `pom.xml` file. This location
    can be anything from a remote server to your local filesystem. For now, we will
    set this location to a temp directory on your local machine, as the process requires
    this setting.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 发布过程将会将你的插件上传到由`pom.xml`文件中`distributionManagement`部分定义的指定位置。这个位置可以是从远程服务器到本地文件系统的任何地方。现在，我们将这个位置设置为你本地机器上的一个临时目录，因为该过程需要这个设置。
- en: Open the `pom.xml` file in your plugin.
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开插件中的`pom.xml`文件。
- en: 'Add the following lines to the file:'
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下行添加到文件中：
- en: '[PRE27]'
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: The variable will be replaced with your own local settings.
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 变量将会被替换为你自己的本地设置。
- en: Save the file.
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件。
- en: 'The next step is to release your plugin:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是发布你的插件：
- en: Make sure all changes have been committed.
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保所有更改都已提交。
- en: 'Open a command prompt and navigate to the location of your plugin and run the
    following command:'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符，导航到插件所在位置并运行以下命令：
- en: '[PRE28]'
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: This command will update your `pom.xml` file with the required version and will
    make a new tag for the release. During the process you will be asked the release
    version and the next development version.
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该命令将更新你的`pom.xml`文件，填写所需的版本，并为发布创建一个新标签。在此过程中，你将被要求输入发布版本和下一个开发版本。
- en: 'After the command has finished run the following command:'
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 命令执行完成后，运行以下命令：
- en: '[PRE29]'
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'This command will:'
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此命令将：
- en: Check out the just created tag.
  id: totrans-280
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检出刚刚创建的标签。
- en: Run all tests.
  id: totrans-281
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行所有测试。
- en: Compile the code and package it.
  id: totrans-282
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编译代码并打包它。
- en: Upload your binary to a defined location.
  id: totrans-283
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将你的二进制文件上传到指定位置。
- en: After the command is finished, you can find your released plugin in the target
    directory in your plugin folder. This should be a `.jar` file, named for your
    plugin and version, that is `button-macro-1.0.jar`.
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 命令完成后，你可以在插件文件夹的target目录中找到已发布的插件。这个文件应该是一个`.jar`文件，文件名为你的插件名和版本号，例如`button-macro-1.0.jar`。
- en: Releasing your plugin without revision control
  id: totrans-285
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在没有版本控制的情况下发布插件。
- en: If you don't have any revision control, the release process of your plugin involves
    some manual steps.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有任何版本控制，插件的发布过程将涉及一些手动步骤。
- en: Open the `pom.xml` file in your plugin.
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开插件中的 `pom.xml` 文件。
- en: Change the `<version></version>` parameter to your release version, that is
    `1.1`.
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`<version></version>`参数更改为您的发布版本，即`1.1`。
- en: Save the file.
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件。
- en: Open a command prompt and go to your plugin location.
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符并进入您的插件所在位置。
- en: Run the `atlas-package` command. This command will compile, test, and build
    your plugin.
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 `atlas-package` 命令。该命令将编译、测试并构建您的插件。
- en: After the command is finished, you can find your released plugin in the target
    directory in your plugin folder. This should be a `.jar` file, named for your
    plugin and version, that is `button-macro-1.1.jar`.
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 命令完成后，您可以在插件文件夹中的目标目录中找到已发布的插件。它应该是一个 `.jar` 文件，文件名为您的插件及其版本，例如 `button-macro-1.1.jar`。
- en: Plugin module types
  id: totrans-293
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 插件模块类型
- en: An Atlassian plugin can specify one or more plugin modules to affect the underlying
    Atlassian applications. Plugin modules are elements you can add to your plugin
    and which will be translated by the SDK and the application architecture to something
    Confluence understands.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: Atlassian 插件可以指定一个或多个插件模块，以影响底层的 Atlassian 应用程序。插件模块是您可以添加到插件中的元素，这些元素将通过 SDK
    和应用程序架构转化为 Confluence 能够理解的内容。
- en: We already used the `xhtml-macro` and `web-resource` modules in our first plugin,
    but there are many more.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在第一个插件中已经使用了 `xhtml-macro` 和 `web-resource` 模块，但还有更多其他模块。
- en: Generic module types
  id: totrans-296
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通用模块类型
- en: These are module types that are available in every application, not just Confluence.
    If you are building a plugin for multiple applications, stick to only these types.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是每个应用程序中都可用的模块类型，不仅仅是 Confluence。如果您正在为多个应用程序构建插件，请仅使用这些类型。
- en: '| Module type | Description |'
  id: totrans-298
  prefs: []
  type: TYPE_TB
  zh: '| 模块类型 | 描述 |'
- en: '| --- | --- |'
  id: totrans-299
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `component` | Adds components to the component system for reuse and autowiring.
    Think of your own services. |'
  id: totrans-300
  prefs: []
  type: TYPE_TB
  zh: '| `component` | 将组件添加到组件系统中以供重用和自动连接。可以把它当作您自己的服务。 |'
- en: '| `component-import` | Imports components from other add-ons so that they are
    available in your own add-on. |'
  id: totrans-301
  prefs: []
  type: TYPE_TB
  zh: '| `component-import` | 从其他插件导入组件，使其在您自己的插件中可用。 |'
- en: '| `module-type` | Adds new plugin modules to the plugin framework. Useful when
    building for, or on top of other add-ons. |'
  id: totrans-302
  prefs: []
  type: TYPE_TB
  zh: '| `module-type` | 向插件框架添加新的插件模块。在为其他插件或在其他插件之上构建时非常有用。 |'
- en: '| `path-converter` | Enables you to create custom URL schemes for your add-on,
    that is you can have SEO-friendly URL schemes. |'
  id: totrans-303
  prefs: []
  type: TYPE_TB
  zh: '| `path-converter` | 使您能够为插件创建自定义的 URL 方案，也就是说，您可以拥有 SEO 友好的 URL 方案。 |'
- en: '| `rest` | Makes services and resources available as REST API. |'
  id: totrans-304
  prefs: []
  type: TYPE_TB
  zh: '| `rest` | 将服务和资源作为 REST API 提供。 |'
- en: '| `servlet` | Deploys a standard Java servlet within a Confluence add-on. |'
  id: totrans-305
  prefs: []
  type: TYPE_TB
  zh: '| `servlet` | 在 Confluence 插件中部署标准 Java servlet。 |'
- en: '| `servlet-context-listener` | Deploys a Java servlet context listener as a
    part of your add-on. |'
  id: totrans-306
  prefs: []
  type: TYPE_TB
  zh: '| `servlet-context-listener` | 部署 Java servlet 上下文监听器，作为插件的一部分。 |'
- en: '| `servlet-context-param` | Adds parameters in the Java Servlet context shared
    by your add-on''s servlets, filters, and listeners. |'
  id: totrans-307
  prefs: []
  type: TYPE_TB
  zh: '| `servlet-context-param` | 在 Java Servlet 上下文中添加参数，该上下文由您的插件的 servlet、过滤器和监听器共享。
    |'
- en: '| `servlet-filter` | Adds a Java servlet filter to your add-on. Don''t forget
    to specify the location and ordering of your filter. |'
  id: totrans-308
  prefs: []
  type: TYPE_TB
  zh: '| `servlet-filter` | 向您的插件添加 Java servlet 过滤器。别忘了指定过滤器的位置和排序。 |'
- en: '| `velocity-context-item` | Adds helper objects to your Velocity context, which
    can be used in templates. |'
  id: totrans-309
  prefs: []
  type: TYPE_TB
  zh: '| `velocity-context-item` | 向您的 Velocity 上下文中添加辅助对象，可以在模板中使用。 |'
- en: '| `web-item` | Adds links and tabs to the Confluence UI. |'
  id: totrans-310
  prefs: []
  type: TYPE_TB
  zh: '| `web-item` | 向 Confluence 用户界面添加链接和标签。 |'
- en: '| `web-resource` | Enables you to include stylesheets and JavaScript to your
    add-on. |'
  id: totrans-311
  prefs: []
  type: TYPE_TB
  zh: '| `web-resource` | 使您能够将样式表和 JavaScript 包含到插件中。 |'
- en: '| `web-resource-transformer` | Allows you to manipulate web resources before
    they are send to the browser. |'
  id: totrans-312
  prefs: []
  type: TYPE_TB
  zh: '| `web-resource-transformer` | 允许您在将 Web 资源发送到浏览器之前进行操作。 |'
- en: '| `web-section` | Adds sections of links to the Confluence UI. |'
  id: totrans-313
  prefs: []
  type: TYPE_TB
  zh: '| `web-section` | 向 Confluence 用户界面添加链接部分。 |'
- en: Confluence-specific module types
  id: totrans-314
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Confluence 特定的模块类型
- en: 'Each Atlassian application has it own modules, as does Confluence. The following
    are the module types supported by Confluence:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 Atlassian 应用程序都有自己的模块，Confluence 也不例外。以下是 Confluence 支持的模块类型：
- en: '| Module type | Description |'
  id: totrans-316
  prefs: []
  type: TYPE_TB
  zh: '| 模块类型 | 描述 |'
- en: '| --- | --- |'
  id: totrans-317
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `codeformatter` | Adds new code languages to the `{code}` macro. |'
  id: totrans-318
  prefs: []
  type: TYPE_TB
  zh: '| `codeformatter` | 向 `{code}` 宏添加新的代码语言。 |'
- en: '| `colour-scheme` | Adds a color scheme to a theme. |'
  id: totrans-319
  prefs: []
  type: TYPE_TB
  zh: '| `colour-scheme` | 向主题添加颜色方案。 |'
- en: '| `decorator` | Adds a decorator (layout) to your add-on for usage without
    a theme. |'
  id: totrans-320
  prefs: []
  type: TYPE_TB
  zh: '| `decorator` | 为你的插件添加一个装饰器（布局），可以在没有主题的情况下使用。 |'
- en: '| `device-type-renderer` | Adds a renderer for a specified (mobile) device
    type. |'
  id: totrans-321
  prefs: []
  type: TYPE_TB
  zh: '| `device-type-renderer` | 为指定的（移动）设备类型添加一个渲染器。 |'
- en: '| `extractor` | Allows you to extract data and put this in the Confluence indexer.
    |'
  id: totrans-322
  prefs: []
  type: TYPE_TB
  zh: '| `extractor` | 允许你提取数据并将其放入 Confluence 索引器。 |'
- en: '| `job` | Adds a repeatable job, like a scheduled service to Confluence. |'
  id: totrans-323
  prefs: []
  type: TYPE_TB
  zh: '| `job` | 为 Confluence 添加一个可重复的作业，例如定时服务。 |'
- en: '| `keyboard-shortcut` | Defines a new keyboard shortcut within Confluence.
    |'
  id: totrans-324
  prefs: []
  type: TYPE_TB
  zh: '| `keyboard-shortcut` | 在 Confluence 中定义一个新的键盘快捷键。 |'
- en: '| `language` | Provides a new language translation to Confluence. |'
  id: totrans-325
  prefs: []
  type: TYPE_TB
  zh: '| `language` | 为 Confluence 提供新的语言翻译。 |'
- en: '| `layout` | Adds a layout (decorator) to your add-on for usage with a theme.
    |'
  id: totrans-326
  prefs: []
  type: TYPE_TB
  zh: '| `layout` | 为你的插件添加一个布局（装饰器），以便与主题一起使用。 |'
- en: '| `lifecycle` | Can be used to schedule tasks during application startup and
    shutdown. |'
  id: totrans-327
  prefs: []
  type: TYPE_TB
  zh: '| `lifecycle` | 可用于安排应用程序启动和关闭期间的任务。 |'
- en: '| `listener` | A special component that will respond to certain events in Confluence.
    |'
  id: totrans-328
  prefs: []
  type: TYPE_TB
  zh: '| `listener` | 一个特殊组件，响应 Confluence 中的某些事件。 |'
- en: '| `xhtml-macro` | Adds a new macro to the WYSIWYG editor. Should output HTML
    that can be embedded in a page. |'
  id: totrans-329
  prefs: []
  type: TYPE_TB
  zh: '| `xhtml-macro` | 向 WYSIWYG 编辑器添加一个新宏。应该输出可以嵌入页面的 HTML。 |'
- en: '| `rpc-soap` | Adds a SOAP service to Confluence. |'
  id: totrans-330
  prefs: []
  type: TYPE_TB
  zh: '| `rpc-soap` | 为 Confluence 添加一个 SOAP 服务。 |'
- en: '| `rpc-xmlrpc` | Adds an XML-RPC service to Confluence. |'
  id: totrans-331
  prefs: []
  type: TYPE_TB
  zh: '| `rpc-xmlrpc` | 为 Confluence 添加一个 XML-RPC 服务。 |'
- en: '| `theme` | Creates a new theme (look and feel) for Confluence or a single
    space. |'
  id: totrans-332
  prefs: []
  type: TYPE_TB
  zh: '| `theme` | 为 Confluence 或单个空间创建一个新的主题（外观和感觉）。 |'
- en: '| `trigger` | Adds a trigger that schedules jobs. |'
  id: totrans-333
  prefs: []
  type: TYPE_TB
  zh: '| `trigger` | 添加一个触发器，用于安排作业。 |'
- en: '| `xwork` | Adds new actions and views to an add-on, enabling user interaction.
    |'
  id: totrans-334
  prefs: []
  type: TYPE_TB
  zh: '| `xwork` | 向插件添加新的动作和视图，启用用户交互。 |'
- en: The plugin module types in detail
  id: totrans-335
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 插件模块类型详细介绍
- en: The preceding list is pretty comprehensive and there is so much to choose from.
    In this section, I will explain in detail some plugin module types that you will
    almost certainly use in most of your plugins.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 上述列表相当全面，有很多选择。在本节中，我将详细解释一些你几乎肯定会在大多数插件中使用的插件模块类型。
- en: XWork
  id: totrans-337
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: XWork
- en: If you want to add an action or screen to Confluence, like a configuration screen,
    there are two options. The first is building a standard Java servlet, the second
    is making use of XWork/WebWork.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想向 Confluence 添加一个动作或屏幕（如配置屏幕），有两种选择。第一种是构建一个标准的 Java Servlet，第二种是使用 XWork/WebWork。
- en: The module descriptor
  id: totrans-339
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 模块描述符
- en: The syntax of an XWork module is as follows
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: XWork 模块的语法如下：
- en: '[PRE30]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Let''s go quickly over the XML to explain what we just defined:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速浏览 XML，解释我们刚才定义的内容：
- en: '[PRE31]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: defines the XWork module, both the `name` and `key` attributes are for identification
    only.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 定义 XWork 模块，`name` 和 `key` 属性仅用于标识。
- en: '[PRE32]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Packages are used to group actions, and your XWork module can have more than
    one. `name` is the only required attribute and identifies the package. `extends`
    specifies if the package inherits behavior from other packages; in this case we
    use the Confluence default. With `namespace`, you can define under which URL the
    actions are available.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 包含动作的包用于组织动作，你的 XWork 模块可以有多个包。`name` 是唯一的必需属性，用于标识该包。`extends` 指定包是否继承自其他包的行为；在此案例中，我们使用
    Confluence 默认包。通过 `namespace`，你可以定义动作可用的 URL。
- en: '[PRE33]'
  id: totrans-347
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: The `action` element is the basic unit of work and defines an action, which
    in most cases is a URL. The name attribute completes the URL, as the preceding
    action is available at `/plugins/config/alpha.action`. An action always has a
    class, which will extend `ConfluenceActionSupport`. With `method`, it is possible
    to specify the method in the class responsible for this action.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: '`action` 元素是工作中的基本单元，定义了一个动作，在大多数情况下是一个 URL。name 属性完成了 URL，因为前面的动作可通过 `/plugins/config/alpha.action`
    访问。一个动作总是具有一个类，该类会扩展 `ConfluenceActionSupport`。通过 `method`，可以指定负责此动作的类中的方法。'
- en: '[PRE34]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: The `result` element will map the result of an action to a template. In the
    preceding example, the velocity template `alpha-config-action.vm` will be rendered
    if our `AlphaConfigAction` returns `success`.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: '`result` 元素会将动作的结果映射到模板中。在前面的例子中，如果我们的 `AlphaConfigAction` 返回 `success`，则会渲染
    velocity 模板 `alpha-config-action.vm`。'
- en: The action class
  id: totrans-351
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 动作类
- en: Every action should have an implementation that extends the `ConfluenceActionSupport`
    class. Actions can use the same implementation if that makes sense for your plugin.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 每个动作都应该有一个实现，继承 `ConfluenceActionSupport` 类。如果适合你的插件，多个动作可以使用相同的实现。
- en: 'Our `AlphaConfigAction` class should look something like this:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的`AlphaConfigAction`类应类似于下面这样：
- en: '[PRE35]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Based on our action configuration, the method `view()` is called and based upon
    the return the success or error template is rendered.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 基于我们的动作配置，调用方法`view()`，根据返回结果渲染成功或错误模板。
- en: This is of course a simple example, but you can do much more in this action
    class. The action class is also available in your template, so if you want to
    render certain information via that template, make sure there is a `get` method
    available, just like `#getViewMessage()`.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 这当然是一个简单的示例，但你可以在这个动作类中做更多事情。这个动作类也可以在你的模板中使用，因此，如果你希望通过模板渲染某些信息，确保有一个可用的`get`方法，类似于`#getViewMessage()`。
- en: Web Sections
  id: totrans-357
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Web Sections
- en: Web Sections allows your plugin to add new sections to existing menus; each
    section can contain one or more links, which are defined as Web Items. We can
    use Web Sections to add a new section to the Confluence administration for our
    plugin configuration.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: Web Sections 允许你的插件向现有菜单添加新部分；每个部分可以包含一个或多个链接，这些链接被定义为 Web Items。我们可以使用 Web
    Sections 向 Confluence 管理界面添加新部分，用于插件配置。
- en: The module descriptor
  id: totrans-359
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 模块描述符
- en: 'The syntax of a Web Section is as follows:'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: Web Section 的语法如下：
- en: '[PRE36]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Let''s break down this definition:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解一下这个定义：
- en: '[PRE37]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: A web-section element requires a `key`, which is a unique identifier for this
    component. `location` relates to the menu this section needs to be added to and
    the `weight` determines at which position it needs to be added to.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 一个 web-section 元素需要一个`key`，这是该组件的唯一标识符。`location`与该部分需要添加到的菜单相关，`weight`决定了它在菜单中的位置。
- en: '`location` menus can be difficult to find if you are not familiar with the
    source code of Confluence itself. More `location` menus are documented on [https://developer.atlassian.com/display/CONFDEV/Web+UI+Modules](https://developer.atlassian.com/display/CONFDEV/Web+UI+Modules).
    A few that are commonly used are:'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不熟悉 Confluence 源代码，`location`菜单可能很难找到。更多`location`菜单的文档请参见[https://developer.atlassian.com/display/CONFDEV/Web+UI+Modules](https://developer.atlassian.com/display/CONFDEV/Web+UI+Modules)。一些常用的菜单如下：
- en: '| Location | Description |'
  id: totrans-366
  prefs: []
  type: TYPE_TB
  zh: '| 位置 | 描述 |'
- en: '| --- | --- |'
  id: totrans-367
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `system.profile` | The tabs above the user profile view. |'
  id: totrans-368
  prefs: []
  type: TYPE_TB
  zh: '| `system.profile` | 用户资料视图上方的标签页。 |'
- en: '| `system.user` | The drop-down menu when you click the user avatar in the
    top-right corner. |'
  id: totrans-369
  prefs: []
  type: TYPE_TB
  zh: '| `system.user` | 点击右上角用户头像时的下拉菜单。 |'
- en: '| `system.admin` | The links in the left-hand side menu in the Administrator
    Console. |'
  id: totrans-370
  prefs: []
  type: TYPE_TB
  zh: '| `system.admin` | 管理员控制台左侧菜单中的链接。 |'
- en: The `label` element is the only required element in the web-section plugin.
    It looks up for the `label` in your plugin properties file and uses it in the
    menu section header.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '`label`元素是 web-section 插件中唯一必需的元素。它会在你的插件属性文件中查找`label`并将其用于菜单部分标题。'
- en: '[PRE38]'
  id: totrans-372
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: You can add one or more conditions to a web panel or item. The implementation
    of these conditions must return `true` in order for the section to display in
    the interface. This can be used the make sure the links are only available for
    administrators.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以为 Web 面板或项添加一个或多个条件。这些条件的实现必须返回`true`，才能在界面中显示该部分。你可以用它来确保链接仅对管理员可用。
- en: '[PRE39]'
  id: totrans-374
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Web Items
  id: totrans-375
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Web Items
- en: With Web Items you can add links to Confluence via your plugin. If you build
    a screen you probably want users to find it; adding a web items to your plugin
    should make this possible.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Web Items，你可以通过插件向 Confluence 添加链接。如果你构建了一个页面，可能希望用户能够找到它；向插件添加 Web Items
    应该可以实现这一目标。
- en: The module descriptor
  id: totrans-377
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 模块描述符
- en: 'A common Web Item will be configured similar to this:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 一个常见的 Web Item 配置可能类似于这样：
- en: '[PRE40]'
  id: totrans-379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'I''ll explain this example a bit more in detail:'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 我将更详细地解释这个示例：
- en: '[PRE41]'
  id: totrans-381
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: The `web-item` attribute knows a `section` argument instead of a location, as
    Web Items must be placed in sections. In our example, I'm placing this Web Item
    in the section we have defined earlier.
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: '`web-item`属性有一个`section`参数，而不是`location`，因为 Web Items 必须放置在某个部分中。在我们的例子中，我将这个
    Web Item 放在我们之前定义的部分中。'
- en: '[PRE42]'
  id: totrans-383
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: The `link` element will determine where the user will go after clicking on the
    menu item. The `linkId` argument is optional and will provide an HTML ID when
    rendered. The link can either be relative to the Confluence server or absolute,
    pointing to any website you wish.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: '`link`元素将决定用户点击菜单项后将前往的位置。`linkId`参数是可选的，它将在渲染时提供一个 HTML ID。链接可以是相对 Confluence
    服务器的，也可以是绝对链接，指向你想要的任何网站。'
- en: '[PRE43]'
  id: totrans-385
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Web Items can contain icons that will be placed before the their `label` elements.
    The icon can have a `width` and a `height` attribute. The location of the image
    is defined by the `link` element.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: Web Items 可以包含图标，这些图标将被放置在 `label` 元素之前。图标可以设置 `width` 和 `height` 属性。图像的位置由
    `link` 元素定义。
- en: Just like Web Sections can, Web Items can contain conditions to determine when
    a link is shown and to who.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 就像 Web Sections 一样，Web Items 也可以包含条件，用来确定何时显示链接以及显示给谁。
- en: Online resources
  id: totrans-388
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在线资源
- en: This chapter gives you only a small insight into the possibilities on extending
    Confluence and writing your own plugins. There are many online resources available
    to move you forward from this point.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 本章仅为你展示了扩展 Confluence 和编写插件的可能性的一小部分。有许多在线资源可以帮助你从这里继续前进。
- en: All developer documentation is bundled and located at [https://developer.atlassian.com](https://developer.atlassian.com).
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 所有开发者文档都已打包并可以在 [https://developer.atlassian.com](https://developer.atlassian.com)
    找到。
- en: '**The Confluence module types**: For more details about the available modules
    and which arguments and elements they accept, visit [https://developer.atlassian.com/display/CONFDEV/Confluence+Plugin+Module+Types](https://developer.atlassian.com/display/CONFDEV/Confluence+Plugin+Module+Types).'
  id: totrans-391
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Confluence 模块类型**：有关可用模块的更多细节，以及它们接受哪些参数和元素，请访问 [https://developer.atlassian.com/display/CONFDEV/Confluence+Plugin+Module+Types](https://developer.atlassian.com/display/CONFDEV/Confluence+Plugin+Module+Types)。'
- en: '**Confluence Plugin Tutorials**: Various Confluence tutorials from beginner
    to advanced developer are available at [https://developer.atlassian.com/display/CONFDEV/Confluence+Tutorials](https://developer.atlassian.com/display/CONFDEV/Confluence+Tutorials).'
  id: totrans-392
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Confluence 插件教程**：各种从初学者到高级开发者的 Confluence 教程可以在 [https://developer.atlassian.com/display/CONFDEV/Confluence+Tutorials](https://developer.atlassian.com/display/CONFDEV/Confluence+Tutorials)
    找到。'
- en: '**Atlassian Design Guidelines and User Interface**: Atlassian provides a toolkit
    for you to help you create beautiful features for their products at [https://developer.atlassian.com/display/AUI/](https://developer.atlassian.com/display/AUI/).'
  id: totrans-393
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Atlassian 设计指南与用户界面**：Atlassian 提供了一套工具包，帮助你为他们的产品创建漂亮的功能，详细信息请访问 [https://developer.atlassian.com/display/AUI/](https://developer.atlassian.com/display/AUI/)。'
- en: '**The Marketplace**: Everything you need to get your plugin Marketplace-ready
    is available at [https://developer.atlassian.com/display/MARKET/Atlassian+Marketplace](https://developer.atlassian.com/display/MARKET/Atlassian+Marketplace).'
  id: totrans-394
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**市场**：获取你的插件在 Marketplace 上架所需的一切资源，可以在 [https://developer.atlassian.com/display/MARKET/Atlassian+Marketplace](https://developer.atlassian.com/display/MARKET/Atlassian+Marketplace)
    找到。'
- en: Tip
  id: totrans-395
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Get the sources**'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: '**获取源代码**'
- en: If you have a valid license for Confluence, you can download the sources via
    [https://my.atlassian.com](https://my.atlassian.com). If you are building your
    plugin, these sources are sometimes the best documentation available. When you
    are stuck, search the source code for similar situations and take a look at how
    Atlassian solved those problems.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你拥有有效的 Confluence 许可证，你可以通过 [https://my.atlassian.com](https://my.atlassian.com)
    下载源代码。如果你正在开发插件，这些源代码有时是最好的文档。当你遇到困难时，搜索源代码中的类似情况，看看 Atlassian 是如何解决这些问题的。
- en: Summary
  id: totrans-398
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We have taken a look at how to extend Confluence with a plugin. We have learned
    how to set up our IDE and build our first plugin, creating a new Confluence macro.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经了解了如何通过插件扩展 Confluence。我们学习了如何设置 IDE 并构建我们的第一个插件，创建一个新的 Confluence 宏。
- en: We have also seen that Confluence has over 30 extension points that you can
    use enhancing Confluence with your features. This chapter should give you a head
    start when you start building your own plugin and a general sense about the possibilities.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还看到 Confluence 有超过 30 个扩展点，可以用来增强 Confluence 功能。此章节将帮助你在开始构建自己的插件时获得一些启示，并大致了解可行的扩展方式。
- en: With that, you have all the essentials to work with Confluence and make the
    tool essential to your company. If you are ever stuck, you'll find me, and many
    others in the community, on Atlassian Answers ([https://answers.atlassian.com](https://answers.atlassian.com)).
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 到这里，你已经掌握了使用 Confluence 的所有基本知识，使它成为你公司不可或缺的工具。如果你遇到任何问题，可以在 Atlassian Answers
    ([https://answers.atlassian.com](https://answers.atlassian.com)) 上找到我和其他许多社区成员的帮助。
