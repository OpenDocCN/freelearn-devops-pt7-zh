- en: Chapter 14. Customizing Look, Feel, and Behavior
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第十四章：自定义外观、感觉与行为
- en: JIRA offers a simple functionality in its UI to change the colors of various
    sections and elements, such as the header, footer, and links; you can also upload
    your custom logo. However, if you want to change the width of a certain section
    or the whole body element, you can't do it from the UI. It's possible to include
    your own custom CSS to make changes to the look and feel. It's also possible to
    load custom JavaScript in a JIRA instance; this enables changes in the behavior
    of various HTML elements. For example, you can selectively show or hide a field
    on another field's values and insert text-based templates in JIRA fields. In this
    chapter, we will take a look at such customizations.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: JIRA 在其 UI 中提供了一个简单的功能，可以更改各个部分和元素的颜色，例如头部、底部和链接；你还可以上传自定义的徽标。然而，如果你想更改某个部分或整个主体元素的宽度，是无法通过
    UI 来实现的。可以包含自定义的 CSS 来改变外观和感觉。也可以在 JIRA 实例中加载自定义的 JavaScript，这样可以改变各种 HTML 元素的行为。例如，你可以根据另一个字段的值选择性地显示或隐藏某个字段，并在
    JIRA 字段中插入基于文本的模板。在本章中，我们将探讨这些自定义功能。
- en: 'We will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将涵盖以下主题：
- en: Adding your own CSS
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加自定义 CSS
- en: Adding JavaScript to show/hide field
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加 JavaScript 以显示/隐藏字段
- en: '**Velocity** templates'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Velocity** 模板'
- en: Adding your own CSS
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加自定义 CSS
- en: 'The JIRA administration interface allows you to change the look and feel of
    various elements in JIRA and to change the default logo. Perform these steps to
    customize your JIRA interface:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: JIRA 管理界面允许你更改 JIRA 中各个元素的外观和感觉，并更改默认的徽标。按照以下步骤自定义你的 JIRA 界面：
- en: Navigate to **Administration** | **System** | **Look and feel** (under **USER
    INTERFACE**).
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**管理** | **系统** | **外观和感觉**（在**用户界面**下）。
- en: The first option on this page is to change **Logo**. Click on the **Browse…** button
    and then click on the **Upload Logo** button to upload your own custom logo:![Adding
    your own CSS](img/image_14_001.jpg)
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 本页的第一个选项是更改**徽标**。点击**浏览...**按钮，然后点击**上传徽标**按钮上传你自己的自定义徽标：![添加自定义 CSS](img/image_14_001.jpg)
- en: The second option is to display **Site Title**, located next to logo. Check
    the **Show Site Title** checkbox and click on the **Update** button:![Adding your
    own CSS](img/image_14_002.jpg)
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第二个选项是显示**站点标题**，位于徽标旁边。勾选**显示站点标题**复选框，然后点击**更新**按钮：![添加自定义 CSS](img/image_14_002.jpg)
- en: 'You will notice that the name of your instance, which you entered while installing
    JIRA, will now appear right next to the JIRA logo. In our example, it''s **Sparxsys
    JIRA Demo**, which now appears next to the JIRA logo:'
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你会注意到，在安装 JIRA 时输入的实例名称现在会显示在 JIRA 徽标旁边。在我们的示例中，它是**Sparxsys JIRA Demo**，现在显示在
    JIRA 徽标旁边：
- en: '![Adding your own CSS](img/image_14_003.jpg)'
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![添加自定义 CSS](img/image_14_003.jpg)'
- en: The third option is to update **Favicon**, which appears in the browser tab
    when JIRA is opened. Click on the **Browse…** button to select the new **Favicon**
    image and then click on the **Upload Favicon** button:![Adding your own CSS](img/image_14_004.jpg)
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第三个选项是更新**网站图标**（Favicon），它在浏览器标签页中显示，当 JIRA 被打开时会看到它。点击**浏览...**按钮，选择新的**网站图标**图片，然后点击**上传网站图标**按钮：![添加自定义
    CSS](img/image_14_004.jpg)
- en: The fourth option is to change the color of various sections of JIRA's web interface.
    For instance, click on any color in the box for **Header Background Color**. In
    the popup window, select the new color, or enter the color's hexadecimal value
    directly. Let's change this color to red, with a hexadecimal value of `#ff0000`.
    Click on the **Update** button to continue:![Adding your own CSS](img/image_14_005.jpg)
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第四个选项是更改 JIRA 网页界面中各个部分的颜色。例如，点击**头部背景颜色**框中的任何颜色。在弹出的窗口中，选择新的颜色，或者直接输入颜色的十六进制值。我们将颜色更改为红色，十六进制值为`#ff0000`。点击**更新**按钮继续：![添加自定义
    CSS](img/image_14_005.jpg)
- en: The color of the main navigation bar is now red.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，主导航栏的颜色变为红色。
- en: You can change the color of various sections available from this interface and
    match it with your company's color scheme, but JIRA's interface is limited to
    changing colors. If you want to change the width of the `<body>` element or give
    extra padding and margins to certain sections, it's not possible to do it through
    this interface.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以更改此界面中可用的各个部分的颜色，并将其与公司颜色方案匹配，但 JIRA 的界面仅限于更改颜色。如果你想更改`<body>`元素的宽度或给某些部分添加额外的填充和边距，无法通过此界面实现。
- en: 'However, it''s possible to insert your own custom CSS in JIRA, which can override
    the default look and feel. Perform these steps:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，JIRA 允许插入自定义 CSS，覆盖默认的外观和感觉。执行以下步骤：
- en: Go to **Administration** | **System** | **Announcement banner** (under **USER
    INTERFACE**).
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到 **管理** | **系统** | **公告横幅**（在**用户界面**下）。
- en: 'In the **Announcement** text area, copy `<LINK href="http://localhost:8080/includes/custom_css/custom_style.css"
    rel="stylesheet" type="text/css">` and click on the **Set Banner** button:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**公告**文本区域，复制 `<LINK href="http://localhost:8080/includes/custom_css/custom_style.css"
    rel="stylesheet" type="text/css">` 并点击 **设置横幅** 按钮：
- en: '![Adding your own CSS](img/image_14_006.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![添加自定义 CSS](img/image_14_006.jpg)'
- en: 'The **Announcement banner** is used to display text common to all the users
    in JIRA on all the pages in JIRA; the good thing is that it supports HTML tags
    as well. In our case, we want to load a custom CSS code to all the pages. The
    `LINK` tag mentioned previously specifies the path where our custom CSS will be
    found. Perform these steps:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**公告横幅**用于在 JIRA 中所有页面向所有用户显示公共文本；好消息是，它也支持 HTML 标签。在我们的例子中，我们希望将自定义的 CSS 代码加载到所有页面。之前提到的
    `LINK` 标签指定了我们的自定义 CSS 文件的路径。执行以下步骤：'
- en: 'Create a `custom_css` folder in the following directory in your JIRA installation
    directory:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的 JIRA 安装目录下创建一个 `custom_css` 文件夹：
- en: '[PRE0]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Navigate to the `custom_css` folder and create a `custom_style.css` file; the
    location of the file should be `JIRA_INSTALL/atlassian-jira/includes/custom_css/custom_style.css`.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 `custom_css` 文件夹并创建一个 `custom_style.css` 文件；该文件的位置应该是 `JIRA_INSTALL/atlassian-jira/includes/custom_css/custom_style.css`。
- en: 'This file contains the CSS to make changes to the UI of JIRA which are otherwise
    not possible through configurations. When you save the **Announcement banner**,
    nothing will be displayed to the user, but this CSS file will be loaded on all
    the pages. You can also verify this by viewing the source code of any page in
    JIRA and searching for the filename:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 该文件包含用于更改 JIRA 用户界面（UI）的 CSS，这些更改是通过配置无法实现的。当你保存**公告横幅**时，用户将看不到任何内容，但此 CSS
    文件将在所有页面加载。你也可以通过查看 JIRA 中任意页面的源代码，并搜索文件名来验证这一点：
- en: '![Adding your own CSS](img/image_14_007.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![添加自定义 CSS](img/image_14_007.jpg)'
- en: In the preceding screenshot, you can see that our custom CSS file is loaded.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，你可以看到我们的自定义 CSS 文件已经加载。
- en: 'Now it''s time to add some CSS code to this file and change the look and feel
    of our JIRA instance. Open the `custom_style.css` code in your favorite editor
    and enter the following code snippet:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候向这个文件中添加一些 CSS 代码，并更改我们 JIRA 实例的外观和感觉了。用你喜欢的编辑器打开 `custom_style.css` 文件，并输入以下代码片段：
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Then, refresh your JIRA instance in your browser. You should now see that the
    preceding CSS code is applied and the changes have appeared, as shown in the following
    screenshot:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，刷新浏览器中的 JIRA 实例。你应该能看到之前的 CSS 代码已被应用，并且更改已经显示，如下图所示：
- en: '![Adding your own CSS](img/image_14_008.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![添加自定义 CSS](img/image_14_008.jpg)'
- en: You can further customize the look and feel of the web page by adding your own
    CSS code. This will be loaded to every page; just make sure that the code in the
    **Announcement banner** is not removed.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过添加自己的 CSS 代码进一步自定义网页的外观和感觉。这些代码将加载到每个页面；只需确保**公告横幅**中的代码没有被删除。
- en: We have added an additional file to the JIRA filesystem. It's very important
    to keep a note of this file and save it separately too. When you upgrade your
    JIRA instance to a new version or migrate to a new server, the JIRA administrator
    should make sure that this file is not removed; otherwise, the customizations
    to the look and feel of the web page will not appear.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已将一个额外的文件添加到 JIRA 文件系统中。非常重要的一点是，记住此文件并将其单独保存。当你将 JIRA 实例升级到新版本或迁移到新服务器时，JIRA
    管理员应确保该文件不会被删除；否则，网页的自定义外观将无法显示。
- en: Adding JavaScript to show/hide field
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加 JavaScript 来显示/隐藏字段
- en: JIRA comes with tons of functionalities and customizations; however, there are
    times when you want more control over the behavior of HTML fields. For instance,
    if you want to show or hide a particular custom field on the basis of a value
    of another custom field, you can use custom JavaScript to do this.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: JIRA 提供了大量的功能和自定义选项；然而，有时你可能希望对 HTML 字段的行为进行更细粒度的控制。例如，如果你希望根据另一个自定义字段的值显示或隐藏某个特定的自定义字段，你可以使用自定义
    JavaScript 来实现这一点。
- en: Let's take a scenario where users who create a ticket in JIRA need to enter
    their analysis in one of the text areas based on the custom field, but they only
    need to fill it in when the priority of the issue is highest. Now, in order to
    achieve this, we want to completely hide the **Analysis** field first, and display
    it only when users set **Priority** as **Highest**.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 假设有这样的场景：在 JIRA 中创建工单的用户需要在自定义字段的文本区域中输入他们的分析内容，但只有在问题的优先级为最高时，才需要填写此内容。现在，为了实现这一点，我们希望首先完全隐藏**分析**字段，并且仅当用户将**优先级**设置为**最高**时才显示该字段。
- en: 'Unlike the preceding example for inserting custom CSS, the custom JavaScript
    can be added directly from the JIRA interface. Perform these steps:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 与前面插入自定义 CSS 的示例不同，自定义 JavaScript 可以直接从 JIRA 界面添加。请按照以下步骤操作：
- en: Go to JIRA **Administration** | **Issues** | **Custom fields** (under **FIELDS**).
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到 JIRA **管理** | **问题** | **自定义字段**（在**字段**下）。
- en: Click on the **Add custom field** button in the top-right corner and select
    **Field Type** as **Text Field (multi-line)**.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击右上角的**添加自定义字段**按钮，并将**字段类型**选择为**文本字段（多行）**。
- en: On the next screen, enter `Analysis` as **Name** and enter the JavaScript code
    (`analysis_js.css`) in the **Description** field of the custom field, as shown
    in the following screenshot:![Adding JavaScript to show/hide field](img/image_14_009.jpg)
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个屏幕中，输入`分析`作为**名称**，并在自定义字段的**描述**字段中输入 JavaScript 代码（`analysis_js.css`），如下图所示：![添加
    JavaScript 以显示/隐藏字段](img/image_14_009.jpg)
- en: Click on the **Create** button to continue.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建**按钮继续。
- en: Add this field in the screen associated with the **Create Issue** operation
    just after the **Priority** system field.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在与**创建问题**操作关联的屏幕中，将此字段添加到**优先级**系统字段之后。
- en: Note that the field description of custom fields can also be controlled by **Field
    Configurations** option. In [Chapter 4](ch04.html "Chapter 4. Customizing JIRA
    for Test Management"), *Customizing JIRA for Test Management*, we discussed the
    purpose of field configurations. In the previous example, we added the JavaScript
    code in the field description while creating the custom field; it will be overwritten
    if field configurations are used in the project.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，自定义字段的字段描述也可以通过**字段配置**选项进行控制。在[第4章](ch04.html "第4章. 测试管理的JIRA定制")，*JIRA的测试管理定制*中，我们讨论了字段配置的目的。在前面的示例中，我们在创建自定义字段时将
    JavaScript 代码添加到字段描述中；如果在项目中使用了字段配置，该代码将被覆盖。
- en: Let's understand the important section of this JavaScript code.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们了解一下这段 JavaScript 代码的重要部分。
- en: 'The **Analysis** custom field ID is equal to `10100` and we assigned a target
    variable to this field:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**分析**自定义字段的ID为`10100`，我们为该字段分配了一个目标变量：'
- en: '[PRE2]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then, for the **Priority** field, we check whether its value is **Highest**,
    which is selectable from a list with different numerical values for **Highest**,
    **High**, **Medium**, **Low**, and **Lowest** (**Highest** having the numerical
    value `1`). For every other value, the **Analysis** field is hidden:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，对于**优先级**字段，我们检查其值是否为**最高**，该值可以从包含不同数字值的列表中选择，包括**最高**、**高**、**中**、**低**和**最低**（**最高**的数值为`1`）。对于其他任何值，**分析**字段将被隐藏：
- en: '[PRE3]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: When users select the **Priority** as **Highest**, the **Analysis** field is
    displayed again.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户选择**优先级**为**最高**时，**分析**字段将再次显示。
- en: Creating the issue
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建问题
- en: 'After creating the **Analysis** field, just add one more issue in JIRA to test
    it. By default, the **Analysis** field is not displayed to the user:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 创建**分析**字段后，只需在 JIRA 中添加另一个问题来进行测试。默认情况下，**分析**字段不会显示给用户：
- en: '![Creating the issue](img/image_14_010.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![创建问题](img/image_14_010.jpg)'
- en: 'The moment you select **Priority** as **Highest**, the **Analysis** text area
    will be visible to the user:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 当你选择**优先级**为**最高**时，**分析**文本区域将对用户可见：
- en: '![Creating the issue](img/image_14_011.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![创建问题](img/image_14_011.jpg)'
- en: This example is just to give you an idea of how to use JavaScript to control
    the behavior of HTML elements.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这个示例只是为了给你一个如何使用 JavaScript 控制 HTML 元素行为的概念。
- en: Velocity templates
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Velocity 模板
- en: Velocity is a Java-based, server-side template engine used to render page content
    that allows Java objects to be used alongside HTML elements. As JIRA has been
    written in Java, it utilizes Velocity templates to display the content. These
    template files can be modified by the user. However, Atlassian will not provide
    any support for such changes to the template files; therefore, I recommend taking
    a backup of the original files before making any changes to them.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Velocity 是一个基于 Java 的服务器端模板引擎，用于渲染页面内容，它允许将 Java 对象与 HTML 元素一起使用。由于 JIRA 是用
    Java 编写的，它利用 Velocity 模板来显示内容。用户可以修改这些模板文件，但 Atlassian 不会对修改模板文件提供任何支持，因此建议在进行任何更改之前备份原始文件。
- en: In this section, let's discuss a few examples where we will make changes to
    these templates.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论一些示例，我们将对这些模板进行修改。
- en: Modifying the description system field with predefined text
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修改描述系统字段并添加预定义文本
- en: 'JIRA allows you to add a description for every custom field, where some instructions
    on how to enter the data can be given to the end user. However, it''s sometimes
    useful to present the user with a predefined text, which is like a text-based
    template. In this example, we will add some default text in the JIRA **Description**
    system field. Perform the following steps:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: JIRA 允许你为每个自定义字段添加描述，其中可以向最终用户提供有关如何输入数据的指示。然而，有时向用户展示预定义文本（如基于文本的模板）是非常有用的。在本示例中，我们将向
    JIRA **描述**系统字段添加一些默认文本。请按照以下步骤操作：
- en: 'Edit the following file in your JIRA installation directory:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑 JIRA 安装目录中的以下文件：
- en: '[PRE4]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Enter the following code just before the `$rendererDescriptor.getEditVM()`
    function:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`$rendererDescriptor.getEditVM()`函数之前输入以下代码：
- en: '[PRE5]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The code is shown in the following screenshot:![Modifying the description system
    field with predefined text](img/image_14_012.jpg)
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代码如下所示：![修改描述系统字段并添加预定义文本](img/image_14_012.jpg)
- en: Restart your JIRA instance.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重启你的 JIRA 实例。
- en: Once the JIRA instance is restarted, click on the **Create** button to create
    an issue.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦 JIRA 实例重启，点击**创建**按钮以创建一个问题。
- en: You will notice that the default text now appears in the **Description** field:![Modifying
    the description system field with predefined text](img/image_14_013.jpg)
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你会注意到，默认文本现在出现在**描述**字段中：![修改描述系统字段并添加预定义文本](img/image_14_013.jpg)
- en: You can use the same method to add custom predefined text to other fields as
    well.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用相同的方法向其他字段添加自定义预定义文本。
- en: 'After modifying the **Description** field template using the previous code,
    this predefined text will be added to the **Description** field for all the projects
    and issue types in your JIRA instance, but it''s possible to restrict it to a
    specific project and issue type. Instead, use the following code:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用之前的代码修改了**描述**字段模板之后，预定义的文本将会添加到 JIRA 实例中所有项目和问题类型的**描述**字段，但也可以将其限制为特定的项目和问题类型。请改用以下代码：
- en: '[PRE6]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: To define the default value of a custom field, the context can also be used,
    which is discussed in [Chapter 17](ch17.html "Chapter 17. JIRA Best Practices"),
    *JIRA Best Practices*.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 要定义自定义字段的默认值，也可以使用上下文，具体内容请参见[第 17 章](ch17.html "第 17 章. JIRA 最佳实践")，*JIRA 最佳实践*。
- en: 'In the preceding code, we just added two lines at the top to restrict **Project
    Key** to `SSP` and **Issue Type** to `Story`. Make sure that you restart your
    JIRA instance before making any changes in the template file. If you don''t want
    to restart your instance, it''s also possible to disable the caching of Velocity
    templates by following these steps in your JIRA installation directory:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，我们只在顶部添加了两行代码，将**项目关键字**限制为`SSP`，并将**问题类型**限制为`Story`。在修改模板文件之前，请确保重新启动你的
    JIRA 实例。如果你不想重新启动实例，也可以通过以下步骤禁用 Velocity 模板的缓存，方法是在你的 JIRA 安装目录下执行：
- en: Uncomment (remove the `#` sign from `#velocimacro.library.autoreload=true)`.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 取消注释（移除`#`符号）`#velocimacro.library.autoreload=true`。
- en: Change `class.resource.loader.cache` from `true` to `false`.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`class.resource.loader.cache`的值从`true`更改为`false`。
- en: Open `JIRA_INSTALL/atlassian-jira/WEB-INF/classes/velocity.properties`.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`JIRA_INSTALL/atlassian-jira/WEB-INF/classes/velocity.properties`。
- en: Now, any change in Velocity templates will be reflected in your instance without
    restarting JIRA. Do this only in your development environment.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，对 Velocity 模板的任何更改都会在你的实例中生效，无需重启 JIRA。仅在开发环境中执行此操作。
- en: As mentioned previously, for custom CSS, keep track of any changes you make
    in the template file and always keep a backup of the original template file. It's
    important to note that Atlassian will not provide any support for customizations
    made on the template files.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，针对自定义 CSS，请跟踪你在模板文件中所做的任何更改，并始终保留原始模板文件的备份。需要注意的是，Atlassian 不会对模板文件的自定义做任何支持。
- en: Modifying the footer
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修改页脚
- en: 'There are various template files you can customize in JIRA, and for various
    sections of the web page. Let''s take a look at another example, where we will
    add some custom text to the footer section. Perform these steps:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在 JIRA 中，你可以自定义各种模板文件，针对网页的各个部分。让我们看另一个例子，我们将在页脚部分添加一些自定义文本。请执行以下步骤：
- en: 'Edit the following file in your JIRA installation directory:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑 JIRA 安装目录中的以下文件：
- en: '[PRE7]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This file has a lot of content; just navigate to the bottom of the file and
    add the following lines before `#end`:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这个文件内容很多；只需导航到文件底部，在 `#end` 之前添加以下行：
- en: '[PRE8]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The file looks as follows:'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 文件内容如下：
- en: '![Modifying the footer](img/image_14_014.jpg)'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![修改页脚](img/image_14_014.jpg)'
- en: Restart your JIRA instance.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重启你的 JIRA 实例。
- en: Once the JIRA instance is restarted, you will notice some additional text before
    the Atlassian logo:![Modifying the footer](img/image_14_015.jpg)
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦 JIRA 实例重启，你会注意到在 Atlassian logo 前面有一些额外的文本：![修改页脚](img/image_14_015.jpg)
- en: Displaying a custom field in e-mails
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在电子邮件中显示自定义字段
- en: 'It''s also possible to customize e-mails sent to the users. The e-mail content
    is also generated using Velocity templates. Let''s now customize the template
    for e-mails that are sent when an issue is created. The custom fields that are
    created in the system are not included in the e-mail content, but we will modify
    the Velocity template of the issue creation e-mail and include the **Analysis**
    field (which we added earlier). Perform these steps:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以定制发送给用户的电子邮件。电子邮件内容也是通过 Velocity 模板生成的。现在，我们来定制创建问题时发送的电子邮件模板。系统中创建的自定义字段默认不包含在电子邮件内容中，但我们将修改问题创建电子邮件的
    Velocity 模板，并添加**分析**字段（即我们之前添加的字段）。请执行以下步骤：
- en: 'Edit the following file in your JIRA installation directory:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑 JIRA 安装目录中的以下文件：
- en: '[PRE9]'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Add the following code before the final `#parse` at the end of the file:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件的最终 `#parse` 之前添加以下代码：
- en: '[PRE10]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Save the file and restart JIRA.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件并重启 JIRA。
- en: Once the JIRA instance is restarted, create one issue in JIRA and fill the **Analysis**
    field.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦 JIRA 实例重启，创建一个问题并填写**分析**字段。
- en: Check the e-mail you receive; it should have the **Analysis** field value now.
    The e-mail content should look similar to the following screenshot:![Displaying
    a custom field in e-mails](img/image_14_016.jpg)
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查你收到的电子邮件；它现在应该包含**分析**字段的值。电子邮件内容应与以下截图类似：![在电子邮件中显示自定义字段](img/image_14_016.jpg)
- en: There are templates for similar events and system fields. You can explore them
    and make changes to them once you get comfortable with Velocity templates.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 对于类似的事件和系统字段，系统提供了模板。熟悉了 Velocity 模板后，你可以探索它们并对其进行更改。
- en: Summary
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: In this chapter, you learned how to customize the look and feel of JIRA by inserting
    custom CSS codes. We also modified the behavior of HTML elements of the JIRA interface
    using JavaScript to show/hide JIRA fields based on the selection made by the user,
    of a specific value from a selectable list. Finally, we explored Velocity templates
    and how to modify the displayed content. We also discussed how to insert custom
    field values in e-mails.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了如何通过插入自定义的 CSS 代码来定制 JIRA 的外观和感觉。我们还使用 JavaScript 修改了 JIRA 界面中 HTML
    元素的行为，以便根据用户从可选择列表中选择的特定值来显示/隐藏 JIRA 字段。最后，我们探讨了 Velocity 模板以及如何修改显示的内容。我们还讨论了如何在电子邮件中插入自定义字段值。
- en: In the next chapter, we will discuss JIRA Service Desk, which has become the
    most popular way to cater to your customer support requests. Service Desk is now
    a separate application, which can either be installed as a standalone application
    or as an application along with JIRA Core. Service Desk comes with inbuilt configurations
    that are standard to any support project.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论 JIRA Service Desk，它已成为最流行的客户支持请求解决方案。Service Desk 现在是一个独立的应用程序，可以作为独立应用程序安装，也可以与
    JIRA Core 一起作为一个应用程序安装。Service Desk 配有内置的标准配置，适用于任何支持项目。
