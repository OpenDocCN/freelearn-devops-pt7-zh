["```\nconfig:\n  azure-native:location: UKSouth\n```", "```\nname: pulumi-yaml\nruntime: yaml\ndescription: A minimal Azure Native Pulumi YAML program\noutputs:\n  primaryStorageKey: ${storageAccountKeys.keys[0].value}\n```", "```\nresources:\n  resourceGroup:\n    type: azure-native:resources:ResourceGroup\n    properties:\n      resourceGroupName: rg-pulumi-yaml\n```", "```\n  sa:\n   type: azure-native:storage:StorageAccount\n   properties:\n      kind: StorageV2\n      resourceGroupName: ${resourceGroup.name}\n      sku:\n        name: Standard_LRS\n```", "```\nvariables:\n  storageAccountKeys:\n    fn::azure-native:storage:listStorageAccountKeys:\n      accountName: ${sa.name}\n      resourceGroupName: ${resourceGroup.name}\n```", "```\n$ pulumi up -c Pulumi.dev.yaml\n```", "```\n$ pulumi destroy\n```", "```\npulumi>=3.0.0,<4.0.0\npulumi-azure-native>=1.0.0,<2.0.0\n```", "```\nname: pulumi-python\nruntime:\n  name: python\n  options:\n    virtualenv: venv\ndescription: A minimal Azure Native Python Pulumi program\n```", "```\n\"\"\"An Azure RM Python Pulumi program\"\"\"\nimport pulumi\nfrom pulumi_azure_native import storage\nfrom pulumi_azure_native import resources\n```", "```\nresource_group = resources.ResourceGroup(\n    \"resource_group\",\n    resource_group_name=\"rg-pulumi-python\",\n)\n```", "```\naccount = storage.StorageAccount(\n    \"sa\",\n    resource_group_name=resource_group.name,\n    sku=storage.SkuArgs(\n        name=storage.SkuName.STANDARD_LRS,\n    ),\n    kind=storage.Kind.STORAGE_V2,\n)\n```", "```\nprimary_key = (\n    pulumi.Output.all(resource_group.name, account.name)\n    .apply(\n        lambda args: storage.list_storage_account_keys(\n            resource_group_name=args[0], account_name=args[1]\n        )\n    )\n    .apply(lambda accountKeys: accountKeys.keys[0].value)\n)\npulumi.export(\"primary_storage_key\", primary_key)\n```", "```\n$ pulumi up -c Pulumi.dev.yaml\n```", "```\n@description('Storage Account type')\n@allowed([\n  'Premium_LRS'\n  'Premium_ZRS'\n  'Standard_GRS'\n  'Standard_GZRS'\n  'Standard_LRS'\n  'Standard_RAGRS'\n  'Standard_RAGZRS'\n  'Standard_ZRS'\n])\nparam storageAccountType string = 'Standard_LRS'\n```", "```\n@description('The storage account location.')\nparam location string = resourceGroup().location\n```", "```\n@description('The name of the storage account')\nparam storageAccountName string = 'sa${uniqueString(resourceGroup().id)}'\n```", "```\nresource sa 'Microsoft.Storage/storageAccounts@2022-09-01' = {\n  name: storageAccountName\n  location: location\n  sku: {\n    name: storageAccountType\n  }\n  kind: 'StorageV2'\n  properties: {}\n}\n```", "```\noutput storageAccountName string = storageAccountName\noutput storageAccountId string = sa.id\n```", "```\n$ az group create -l uksouth -n rg-bicep-example\n```", "```\n{\n  \"id\": \"/subscriptions/3e3c9f50-1a27-4e7e-af2e-e0d3f3e4a8f4/resourceGroups/rg-bicep-example\",\n  \"location\": \"uksouth\",\n  \"managedBy\": null,\n  \"name\": \"rg-bicep-example\",\n  \"properties\": {\n    \"provisioningState\": \"Succeeded\"\n  },\n  \"tags\": null,\n  \"type\": \"Microsoft.Resources/resourceGroups\"\n}\n```", "```\n$ az deployment group create --resource-group rg-bicep-example --template-file main.bicep\n```", "```\n\"outputs\": {\n  \"storageAccountId\": {\n    \"type\": \"String\",\n    \"value\": \"/subscriptions/ce7aa0b9-3545-4104-99dc-d4d082339a05/resourceGroups/rg-bicep-example/providers/Microsoft.Storage/storageAccounts/saljkmvlrqknl2y\"\n  },\n  \"storageAccountName\": {\n    \"type\": \"String\",\n    \"value\": \"saljkmvlrqknl2y\"\n  }\n},\n```", "```\n$ az group delete -n rg-bicep-example\n```", "```\nAWSTemplateFormatVersion: \"2010-09-09\"\nDescription: Creates a basic S3 bucket using CloudFormation\n```", "```\nParameters:\n  BucketName: { Type: String, Default: \"my-example-bucket-name\" }\n```", "```\nResources:\n  ExampleBucket:\n    Type: \"AWS::S3::Bucket\"\n    Properties:\n      BucketName: !Ref BucketName\n      BucketEncryption:\n        ServerSideEncryptionConfiguration:\n          - ServerSideEncryptionByDefault:\n              SSEAlgorithm: AES256\n```", "```\nOutputs:\n  ExampleBucketName:\n    Description: Name of the example bucket\n    Value: !Ref ExampleBucket\n```", "```\n$ aws cloudformation create-stack --stack-name iaccloudform --template-body file://cftemplate.yaml --parameters ParameterKey=BucketName,ParameterValue=iac230404\n```", "```\n{\n    \"StackId\": \"arn:aws:cloudformation:us-west-2:687011238589:stack/iaccloudform/ca605040-d2fa-11ed-84fd-027270021b81\"\n}\n```", "```\n$ aws cloudformation delete-stack --stack-name iaccloudform\n```"]