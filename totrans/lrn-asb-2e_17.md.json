["```\n$ ansible-galaxy collection install community.general\n```", "```\nhttps://hooks.slack.com/services/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\n```", "```\nslack:\n  token: \"TBCRVDMGA/B06RCMPD6R4/YBTo7ZXZHrRg57fvJXr1sg43\"\n```", "```\n$ ansible-vault encrypt_string 'TBCRVDMGA/B06RCMPD6R4/YBTo7ZXZHrRg57fvJXr1sg43' --name 'token'\n```", "```\n- name: \"Create the resource group\"\n  azure.azcollection.azure_rm_resourcegroup:\n    name: \"{{ resource_group_name }}\"\n    location: \"{{ location }}\"\n    tags: \"{{ common_tags }}\"\n  register: \"resource_group_output\"\n```", "```\n- name: \"Notify the team on Slack about the resource group status\"\n  include_tasks: slack_notify_generic.yml\n```", "```\n  vars:\n    resource_changed: \"{{ resource_group_output.changed }}\"\n    resource_type: \"Resource Group\"\n    resource_name: \"{{ resource_group_output.state.name }}\"\n    resource_location: \"{{ resource_group_output.state.location }}\"\n```", "```\n    azure_portal_link: \"https://portal.azure.com/#resource{{ resource_group_output.state.id }}\"\n```", "```\n    resource_tags: >\n      {% for key, value in resource_group_output.state.tags.items() %}\n      *{{ key }}:* {{ value }}{% if not loop.last %}, {% endif %}\n      {% endfor %}\n```", "```\n- name: \"Notify the team on Slack about resource changes\"\n  community.general.slack:\n    token: \"{{ slack.token }}\"\n    parse: \"none\"\n```", "```\n    attachments:\n      - fallback: \"Notification about Azure resource changes\"\n```", "```\n        color: \"{% if resource_changed %}warning{% else %}good{% endif %}\"\n        title: \"Ansible: {{ resource_type }}\"\n```", "```\n        text: \"{{ resource_name }} has been {% if resource_changed %}created/updated{% else %}checked (no changes){% endif %}.\"\n```", "```\n        fields:\n          - title: \"Location\"\n            value: \"{{ resource_location }}\"\n            short: true\n          - title: \"Azure Portal\"\n            value: \"<{{ azure_portal_link }}|View in Azure Portal>\"\n            short: true\n          - title: \"Tags\"\n            value: \"{{ resource_tags }}\"\n            short: false\n```", "```\n<{{ azure_portal_link }}|View in Azure Portal>\n```", "```\n$ ansible-playbook -i hosts site.yml --ask-vault-pass\n```", "```\n$ ansible-playbook -i hosts site.yml --ask-vault-pass\n```", "```\n    - name: \"Speak an update\"\n      community.general.say:\n        msg: \"Hello from Ansible running on {{ inventory_hostname }}\"\n        voice: \"Zarvox\"\n      delegate_to: localhost\n```", "```\n- name: \"Send a message to the hosts syslog\"\n  community.general.syslogger:\n    msg: \"The task has completed and all is well\"\n    priority: \"info\"\n    facility: \"daemon\"\n    log_pid: \"true\"\n```", "```\n- name: \"Create an incident in SNOW\"\n  servicenow.servicenow.snow_record:\n    username: \"{{ snow.username}}\"\n    password: \"{{ snow.passord}}\"\n    instance: \"{{ snow.instance }}\"\n    state: \"present\"\n    data:\n      short_description: \"Ansible playbook run on {{ inventory_hostname }}\"\n      severity: 3\n      priority: 2\n  register: snow_incident_result\n```", "```\n- name: \"Update the SNOW incident with work notes\"\n  servicenow.servicenow.snow_record:\n    username: \"{{ snow.username}}\"\n    password: \"{{ snow.passord}}\"\n    instance: \"{{ snow.instance }}\"\n    state: present\n    number: \"{{snow_incident_result['record']['number']}}\"\n    data:\n      work_notes : \"{{ resource_name }} has been {% if resource_changed %}created/updated{% else %}checked (no changes){% endif %}.\"\n```", "```\n- name: \"A simple playbook with a mistake\"\n  hosts: \"localhost\"\n  debugger: \"on_failed\"\n  vars:\n    message: \"The task has completed and all is well\"\n    voice: \"Daniel\"\n  tasks:\n    - name: \"Say a message on your Ansible host\"\n      community.general.say:\n        msg: \"{{ massage }}\"\n        voice: \"{{ voice }}\"\n```", "```\n$ ansible-playbook playbook.yml\n```", "```\n[WARNING]: No inventory was parsed, only implicit localhost is available\n[WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'\n```", "```\nPLAY [A simple playbook with a mistake] *******************\nTASK [Gathering Facts] ************************************\nok: [localhost]\nTASK [Say a message on your Ansible host] *****************\nfatal: [localhost]: FAILED! => {\"msg\": \"The task includes an option with an undefined variable. The error was: 'massage' is undefined. 'massage' is undefined\\n\\nThe error appears to be in '/Users/russ.mckendrick/Code/Learn-Ansible-Second-Edition/Chapter17/debugger/playbook.yml': line 12, column 7, but may\\nbe elsewhere in the file depending on the exact syntax problem.\\n\\nThe offending line appears to be:\\n\\n  tasks:\\n    - name: \\\"Say a message on your Ansible host\\\"\\n      ^ here\\n\"}\n```", "```\n[localhost] TASK: Say a message on your Ansible host (debug)>\n```", "```\np result._result\n```", "```\n{'_ansible_no_log': False,\n 'failed': True,\n 'msg': 'The task includes an option with an undefined variable. The error was: \\'massage\\' is undefined. \\'massage\\' is undefined\\n\\nThe error appears to be in \\'/Users/russ.mckendrick/Code/Learn-Ansible-Second-Edition/Chapter17/debugger/playbook.yml\\': line 12, column 7, but may\\nbe elsewhere in the file depending on the exact syntax problem.\\n\\nThe offending line appears to be:\\n\\n  tasks:\\n    - name: \"Say a message on your Ansible host\"\\n      ^ here\\n'}\n```", "```\np task.args\n```", "```\n{'msg': '{{ massage }}', 'voice': '{{ voice }}'}\n```", "```\np task_vars\n```", "```\n          'inventory_hostname': 'localhost',\n          'inventory_hostname_short': 'localhost',\n          'message': 'The task has completed and all is well',\n          'module_setup': True,\n          'omit': '__omit_place_holder__7da4853be448a08d857e98fbabe7afe1b7c97d00',\n          'play_hosts': ['localhost'],\n          'playbook_dir': '/Users/russ.mckendrick/Code/Learn-Ansible-Second-Edition/Chapter17/debugger',\n          'voice': 'Daniel'},\n```", "```\np task_vars['message']\np task_vars['voice']\n```", "```\n[localhost] TASK: Say a message on your Ansible host (debug)> p task_vars['message']\n'The task has completed and all is well'\n[localhost] TASK: Say a message on your Ansible host (debug)> p task_vars['voice']\n'Daniel'\n```", "```\ntask.args['msg'] = '{{ message }}'\n```", "```\nredo\n```", "```\nchanged: [localhost]\nPLAY RECAP ************************************************\nlocalhost: ok=1  changed=1  unreachable=0  failed=0\\. skipped=0  rescued=0\\. ignored=0\n```"]