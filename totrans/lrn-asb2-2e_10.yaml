- en: Chapter 10. Introducing Ansible for Enterprises
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章. 介绍企业版Ansible
- en: In this chapter, we will discuss the state of Ansible on different OSes. We'll
    also take a look at Ansible Galaxy and Ansible Tower.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论Ansible在不同操作系统上的状态。我们还将看看Ansible Galaxy和Ansible Tower。
- en: 'We''ll explore the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将探讨以下主题：
- en: Ansible on Windows
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ansible在Windows上
- en: Ansible for networking devices
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ansible用于网络设备
- en: Ansible Galaxy
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ansible Galaxy
- en: Ansible Tower
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ansible Tower
- en: Ansible on Windows
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible在Windows上
- en: Ansible version 1.7 started being able to manage Windows machines with a few
    basic modules. After the acquisition of Ansible by Red Hat, a lot of effort has
    been put into this task by Microsoft and many other companies and people. By the
    time of the 2.1 release, Ansible's ability to manage Windows machines was close
    to being complete. Some modules have been extended to work seamlessly on Unix
    and Windows, while in other cases, the Windows logic was so different from Unix
    that new modules needed to be created.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible 版本1.7开始能够通过一些基本模块管理Windows机器。在Red Hat收购Ansible后，微软和其他许多公司及个人为这个任务投入了大量精力。到2.1版本发布时，Ansible管理Windows机器的能力接近完成。某些模块已扩展为可以在Unix和Windows上无缝工作，而在其他情况下，Windows的逻辑与Unix差异如此之大，以至于需要创建新的模块。
- en: Note
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: At the moment, using Windows as a control machine is not supported, though some
    users have tweaked the code and their environment to make it work.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，使用Windows作为控制机并不被支持，尽管一些用户已通过调整代码和环境使其能够工作。
- en: 'The connection from the control machine to Windows machines is not made over
    SSH; instead, it''s made over **Windows Remote Management** (**WinRM**). You can
    visit Microsoft''s website for a detailed explanation and implementation: [http://msdn.microsoft.com/en-us/library/aa384426(v=vs.85).aspx](http://msdn.microsoft.com/en-us/library/aa384426(v=vs.85).aspx).'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 控制机到Windows机器的连接不是通过SSH进行的，而是通过**Windows远程管理**（**WinRM**）进行的。你可以访问微软的网站，获取详细的解释和实现：[http://msdn.microsoft.com/en-us/library/aa384426(v=vs.85).aspx](http://msdn.microsoft.com/en-us/library/aa384426(v=vs.85).aspx)。
- en: 'On the control machine, once you''ve installed Ansible, it''s important that
    you install WinRM. You can do it via `pip` with this command:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在控制机上，安装了Ansible后，重要的是你需要安装WinRM。你可以通过`pip`命令安装：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You may need to use `sudo` or the `root` account to execute this command.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能需要使用`sudo`或`root`账户来执行此命令。
- en: 'On each of the remote Windows machines, you need to install PowerShell version
    3.0 or higher. Ansible provides a couple of helpful scripts to set it up:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在每台远程Windows机器上，你需要安装PowerShell 3.0或更高版本。Ansible提供了一些有用的脚本来帮助设置：
- en: '**WinRM**: [https://github.com/ansible/ansible/blob/devel/examples/scripts/ConfigureRemotingForAnsible.ps1](https://github.com/ansible/ansible/blob/devel/examples/scripts/ConfigureRemotingForAnsible.ps1)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**WinRM**: [https://github.com/ansible/ansible/blob/devel/examples/scripts/ConfigureRemotingForAnsible.ps1](https://github.com/ansible/ansible/blob/devel/examples/scripts/ConfigureRemotingForAnsible.ps1)'
- en: '**PowerShell 3.0 upgrade**: [https://github.com/cchurch/ansible/blob/devel/examples/scripts/upgrade_to_ps3.ps1](https://github.com/cchurch/ansible/blob/devel/examples/scripts/upgrade_to_ps3.ps1)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PowerShell 3.0 升级**: [https://github.com/cchurch/ansible/blob/devel/examples/scripts/upgrade_to_ps3.ps1](https://github.com/cchurch/ansible/blob/devel/examples/scripts/upgrade_to_ps3.ps1)'
- en: You will also need to allow port `5986` via the firewall, as this is the default
    WinRM connection port, and make sure it is accessible from the command center.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要通过防火墙允许端口`5986`，因为这是默认的WinRM连接端口，并确保从命令中心可以访问该端口。
- en: 'To make sure you can access the service remotely, run a `curl` command:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保你可以远程访问服务，运行一个`curl`命令：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If basic authentication works, you're set to start running commands. Once the
    setup is done, you're ready to start running Ansible! Let's run the equivalent
    of the Windows version of the `Hello, world!` program in Ansible by running `win_ping`.
    In order to do this, let's set up our credentials file.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果基本身份验证工作正常，你就可以开始运行命令了。设置完成后，你就可以开始运行Ansible了！让我们通过运行`win_ping`来执行Ansible中的Windows版本的“Hello,
    world!”程序。为了做到这一点，让我们设置我们的凭证文件。
- en: 'This can be done using Ansible vault, as follows:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以通过Ansible vault来完成，如下所示：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'As we''ve seen, Ansible vault will ask interactively to set the password:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所见，Ansible vault将交互式地要求设置密码：
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'At this point, we can add the variables we need:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，我们可以添加所需的变量：
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Let''s set up our `inventory` file, as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们设置我们的`inventory`文件，如下所示：
- en: '[PRE5]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Followed by this, let''s run `win_ping`:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们运行`win_ping`：
- en: '[PRE6]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Ansible will ask us the vault password and then print the result of the run,
    as follows:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible将要求我们输入vault密码，然后打印运行结果，如下所示：
- en: '[PRE7]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Ansible for networking devices
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible用于网络设备
- en: Since version 2.1, we have seen many new modules for the management of networking
    devices and softwares. Many of those modules have been contributed directly from
    the company that creates the device (or software). The big advantage of this,
    which is based on the idea of **Software Defined Networking** (**SDN**), is that
    having Ansible that manages all your networking infrastructure allows you to have
    an entire datacenter completely managed within Ansible. This means, having a single
    language for all components and all people within your IT, and this will allow
    people to understand better how the company IT works as well as working more closely
    with each other.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 自版本2.1以来，我们看到许多新的模块用于网络设备和软件的管理。许多这些模块是由创建设备（或软件）的公司直接贡献的。这样做的一个巨大优势是，基于**软件定义网络**（**SDN**）的理念，Ansible可以管理您的所有网络基础设施，从而使您能够在Ansible中完全管理整个数据中心。这意味着，所有IT组件和所有人员使用相同的语言，这将有助于人们更好地理解公司IT的运作方式，并促进团队之间的紧密合作。
- en: Ansible Galaxy
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible Galaxy
- en: Ansible Galaxy is a free site from where you can download Ansible roles developed
    by the community and kick-start your automation within minutes. You can share
    or review community roles so that others can easily find the most trusted roles
    on Ansible Galaxy. You can start using Ansible Galaxy by simply signing up with
    social media applications such as Twitter, Google, and GitHub or by creating a
    new account on the Ansible Galaxy website at [https://galaxy.ansible.com/](https://galaxy.ansible.com/)
    and downloading the required roles using the `ansible-galaxy` command, which ships
    with Ansible version 1.4.2 and higher.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible Galaxy是一个免费的站点，您可以在此下载由社区开发的Ansible角色，并在几分钟内启动自动化。您可以分享或审核社区角色，以便其他人能够轻松找到Ansible
    Galaxy上最受信任的角色。您可以通过简单地使用Twitter、Google或GitHub等社交媒体应用程序注册，或者在Ansible Galaxy网站上创建一个新账户，网址为[https://galaxy.ansible.com/](https://galaxy.ansible.com/)，并使用`ansible-galaxy`命令下载所需的角色，该命令随Ansible版本1.4.2及更高版本一起提供。
- en: Note
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In case you want to host your own local Ansible Galaxy instance, you can do
    so by fetching the code from [https://github.com/ansible/galaxy](https://github.com/ansible/galaxy).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想托管自己的本地Ansible Galaxy实例，可以通过从[https://github.com/ansible/galaxy](https://github.com/ansible/galaxy)获取代码来实现。
- en: 'To download an Ansible role from Ansible Galaxy, use the following syntax:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 要从Ansible Galaxy下载Ansible角色，请使用以下语法：
- en: '[PRE8]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You can also specify a version as follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过如下方式指定版本：
- en: '[PRE9]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'If you don''t specify a version, then the `ansible-galaxy` command will download
    the latest available version. You can install multiple roles in two ways; firstly,
    by passing multiple role names separated by a space, as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不指定版本，`ansible-galaxy`命令将下载最新的可用版本。您可以通过两种方式安装多个角色；首先，通过传递多个角色名称并用空格分隔，如下所示：
- en: '[PRE10]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Secondly, you can do so by specifying role names in a file and passing that
    filename to the `-r/--role-file` option. For instance, you could create the `requirements.txt`
    file with the following content:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，您可以通过在文件中指定角色名称并将该文件名传递给`-r/--role-file`选项来执行此操作。例如，您可以创建`requirements.txt`文件，内容如下：
- en: '[PRE11]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'You could then install roles by passing the filename to the `ansible-galaxy`
    command, as follows:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以通过将文件名传递给`ansible-galaxy`命令来安装角色，如下所示：
- en: '[PRE12]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Let''s see how you can use `ansible-galaxy` to download a role for Apache HTTPd:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何使用`ansible-galaxy`下载Apache HTTPd角色：
- en: '[PRE13]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'You''ll see output like this:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到如下输出：
- en: '[PRE14]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The preceding `ansible-galaxy` command will download the Apache HTTPd role
    to the `/etc/ansible/roles` directory. You can now directly use the preceding
    role in your playbook, creating the `playbooks/galaxy.yaml` file with the following
    content:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 上述`ansible-galaxy`命令将把Apache HTTPd角色下载到`/etc/ansible/roles`目录中。现在，您可以在剧本中直接使用上述角色，创建`playbooks/galaxy.yaml`文件，内容如下：
- en: '[PRE15]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'As you can see, we created a simple playbook with a `geerlingguy.apache` role.
    We can now test it:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，我们创建了一个简单的剧本，并使用了`geerlingguy.apache`角色。现在我们可以进行测试：
- en: '[PRE16]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'This should give us the following output:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这将给我们如下输出：
- en: '[PRE17]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Note
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: As you may have noticed, many steps were skipped due to the fact that this role
    is designed to work on many different Linux distributions.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您可能已经注意到的，由于该角色设计用于在许多不同的Linux发行版上运行，因此许多步骤被跳过了。
- en: Ansible Tower
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible Tower
- en: 'Ansible Tower is a web-based GUI developed by Red Hat. Ansible Tower provides
    you with an easy-to-use dashboard to manage your nodes and role-based authentication
    to control access to your Ansible Tower dashboard. The biggest features of Ansible
    Tower are as follows:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible Tower 是红帽开发的一个基于 Web 的图形用户界面（GUI）。Ansible Tower 提供了一个易于使用的仪表盘，让您管理节点，并通过基于角色的身份验证控制对
    Ansible Tower 仪表盘的访问。Ansible Tower 的主要特点如下：
- en: '**LDAP/AD integration**: You can import (and give privileges to) users based
    on the result of LDAP/AD queries that Ansible Tower performs on your LDAP/AD server'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**LDAP/AD 集成**：您可以根据 Ansible Tower 在您的 LDAP/AD 服务器上执行的 LDAP/AD 查询结果导入（并赋予权限）用户。'
- en: '**Role-based access control**: Limit the users to only run the playbooks they
    are authorized to run and/or target only a limited amount of hosts'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于角色的访问控制**：限制用户仅运行他们被授权运行的 playbook，并/或仅针对有限数量的主机。'
- en: '**REST API**: All Ansible Tower capabilities are exposed via a REST API'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**REST API**：所有 Ansible Tower 的功能都通过 REST API 暴露。'
- en: '**Job scheduling**: Ansible Tower allows us to schedule jobs (playbook execution)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**作业调度**：Ansible Tower 允许我们调度作业（playbook 执行）。'
- en: '**Graphical inventory management**: Ansible Tower manages the inventory in
    a more dynamic way than Ansible'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图形化库存管理**：Ansible Tower 以比 Ansible 更动态的方式管理库存。'
- en: '**Dashboard**: Ansible Tower allows us to see the situation of all current
    and previous job executions'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**仪表盘**：Ansible Tower 允许我们查看所有当前和过去作业执行的情况。'
- en: '**Logging**: Ansible Tower logs all the results of every job execution to be
    able to go back and check if needed'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志记录**：Ansible Tower 记录每个作业执行的所有结果，以便在需要时回溯检查。'
- en: Although Red Hat has promised to make Ansible Tower open source soon, at the
    moment, it is not freely available and you need to pay depending on the number
    of nodes you want to manage.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管红帽（Red Hat）承诺很快将 Ansible Tower 开源，但目前它并非免费提供，您需要根据要管理的节点数量支付费用。
- en: At the time of writing, Red Hat provides a free copy of Ansible Tower for 10
    nodes. For more details, visit the Ansible Tower website at [http://www.ansible.com/tower](http://www.ansible.com/tower);
    the user guide is available at [http://docs.ansible.com/ansible-tower/](http://docs.ansible.com/ansible-tower/).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，红帽为 10 个节点提供了免费的 Ansible Tower 副本。有关更多详情，请访问 Ansible Tower 网站：[http://www.ansible.com/tower](http://www.ansible.com/tower)；用户指南可在
    [http://docs.ansible.com/ansible-tower/](http://docs.ansible.com/ansible-tower/)
    中找到。
- en: Summary
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have seen some options that Ansible and its ecosystem provide
    us. This chapter also wants to teach you to search even less canonical things
    on the Ansible documentation, because it could be that Ansible has such capability.
    Also, as you may have noticed, in this chapter many of the covered topics have
    had major changes in 2.1 (released less than 6 months before the publication of
    the second edition of this book) and are very actively developed areas, so the
    official documentation is the right place to check the current state of such topics.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经看到了一些 Ansible 及其生态系统提供的选项。本章还希望教会你如何在 Ansible 文档中查找那些不那么规范的内容，因为 Ansible
    可能具有这样的功能。此外，正如你可能已经注意到的，本章涵盖的许多主题在 2.1 版本（发布于本书第二版出版前不到 6 个月）中发生了重大变化，并且这些领域仍在积极开发中，因此查看官方文档是了解这些主题当前状态的最佳途径。
