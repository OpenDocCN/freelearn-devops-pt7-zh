["```\n    $ ansible --version\n    ```", "```\n    $ ansible all -i n1.example.org, -c network_cli -u my_user -k -m cisco.ios.ios_facts -e ansible_network_os=cisco.ios.ios all\n    ```", "```\n$ ansible -i vx01.example.org, -u cumulus -m ansible.builtin.setup -a 'filter=ansible_swp*' all --ask-pass\n```", "```\nvx01.example.org | SUCCESS => {\n  \"ansible_facts\": {\n    \"ansible_swp1\": {\n      \"active\": false,\n      \"device\": \"swp1\",\n      \"features\": {\n        \"esp_hw_offload\": \"off [fixed]\",\n        \"esp_tx_csum_hw_offload\": \"off [fixed]\",\n        \"fcoe_mtu\": \"off [fixed]\",\n        \"generic_receive_offload\": \"on\",\n        \"generic_segmentation_offload\": \"on\",\n        \"highdma\": \"off [fixed]\",\n        ...\n```", "```\n    [routers]\n    n1.example.org\n    n2.example.org\n    [cumulusvx]\n    vx01.example.org\n    ```", "```\n    ---\n    ansible_connection: network_cli\n    ansible_network_os: cisco.ios.ios\n    ansible_become: True\n    ansible_become_method: enable\n    ```", "```\n---\n- name: Play to return facts from a Cisco IOS device\n  hosts: routers\n  gather_facts: False\n  tasks:\n  - name: Gather IOS facts\n    cisco.ios.ios_facts:\n      gather_subset: all\n```", "```\n$ ansible-playbook -i hosts ios_facts.yml --ask-pass\n```", "```\n---\nansible_user: cumulus\nbecome: false\n```", "```\n---\n- name: Simply play to gather Cumulus VX switch facts\n  hosts: cumulusvx\n  gather_facts: no\n  tasks:\n  - name: Gather facts\n    ansible.builtin.setup:\n      gather_subset: all\n```", "```\n$ ansible-playbook -i hosts cumulusvx_facts.yml --ask-pass\n```", "```\nSSH password:\nPLAY [Simply play to gather Cumulus VX switch facts] ************************************************************************************************\nTASK [Gather facts] ************************************************************************************************\nok: [vx01.example.org]\nPLAY RECAP ************************************************************************************************\nvx01.example.org : ok=1 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\n[bastion_routers]\nn1.example.org\nn2.example.org\n[bastion_cumulusvx]\nvx01.example.org\n```", "```\n---\nansible_connection: network_cli\nansible_network_os: cisco.ios.ios\nansible_become: True\nansible_become_method: enable\nansible_ssh_common_args: '-o ProxyCommand=\"ssh -W %h:%p -q bastion.example.org\"'\nproxy_env:\nhttp_proxy: http://proxy.example.org:8080\n```", "```\n---\nansible_user: cumulus\nansible_become: false\nansible_ssh_common_args: '-o ProxyCommand=\"ssh -W %h:%p -q bastion.example.org\"'\nproxy_env:\nhttp_proxy: http://proxy.example.org:8080\n```", "```\n$ ansible -i hosts -m ping -u cumulus bastion_cumulusvx\nvx01.example.org | SUCCESS => {\n    \"ansible_facts\": {\n    \"discovered_interpreter_python\": \"/usr/bin/python\"\n  },\n  \"changed\": false,\n  \"ping\": \"pong\"\n}\n```", "```\n- name: Wait for interface to be enabled\n  arista.eos.eos_command:\n    commands:\n    - show interface Ethernet4 | json\n    wait_for:\n    - \"result[0].interfaces.Ethernet4.interfaceStatus eq connected\"\n```", "```\n---\n- name: Simple play to demonstrate conditional on Cumulus Linux\n  hosts: cumulusvx\n  tasks:\n  - name: Enable swp2 if it is disabled\n    community.network.nclu:\n      commands:\n      - add int swp2\n    commit: true\n    when: not ansible_swp2.active\n```", "```\nPLAY [Simple play to demonstrate conditional on Cumulus Linux] ***************************************************************\nTASK [Gathering Facts]\n***************************************************************\nok: [vx01.example.org]\nTASK [Enable swp2 if it is disabled] ***************************************************************\nchanged: [vx01.example.org]\nPLAY RECAP\n***************************************************************\nvx01.example.org : ok=2 changed=1 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0\n```", "```\nPLAY [Simple play to demonstrate conditional on Cumulus Linux] ***************************************************************\nTASK [Gathering Facts]\n***************************************************************\nok: [vx01.example.org]\nTASK [Enable swp2 if it is disabled] ***************************************************************\nskipping: [vx01.example.org]\nPLAY RECAP\n***************************************************************\nvx01.example.org : ok=1 changed=0 unreachable=0 failed=0 skipped=1 rescued=0 ignored=0\n```"]