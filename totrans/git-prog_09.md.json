["```\nusing System;\nnamespace LogDemo\n{\n    public class Program\n    {\n        static void Main(string[] args)\n        {\n            var calculator = new Calculator.Calculator();\n            Console.WriteLine($\"5+3 = {calculator.Add(5, 3)}\");\n            Console.WriteLine($\"The square root of 3.14159 is {calculator.squareRoot(3.14159)}\");\n        }\n    }\n} \n```", "```\n5+3 = 8\nThe square root of 3.14159 is 1.7724531023414978 \n```", "```\ngit log ––name-only \n```", "```\ndiff --git a/LogDemo/LogDemo/Program.cs b/LogDemo/LogDemo/Program.cs \n```", "```\npublic double Absolute (double x)\n {\n     return Math.Abs(x);\n } \n```", "```\ngit compare with unmodified \n```", "```\ngit log <filename> \n```", "```\ngit log -Scalculator \n```", "```\ngit lg ––committer=\"Jesse\" \n```", "```\ngit lg --since=\"80 minutes\" \n```", "```\ngit clone git@github.com:JesseLiberty/LogChallenge.git \n```", "```\nnamespace LogChallenge\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            Console.WriteLine(\"Hello World!\");\n            Console.WriteLine(\"Log Challenge!\");\n        }\n    }\n} \n```", "```\nnamespace LogChallenge\n{\n    public static class Program\n    {\n        public static void Main(string[] args)\n        {\n            var calculator = new Calculator.Calculator();\n            Console.WriteLine($\"The square root of 2 is {calculator.SquareRoot(2)}\");\n        }\n    }\n}\nnamespace LogChallenge.Calculator\n{\n    public class Calculator\n    {\n        public int Add(int left, int right)\n        {\n            return left + right;\n        }\n        public int Subtract(int left, int right)\n        {\n            return left - right;\n        }\n        public int Multiply(int left, int right)\n        {\n            return left * right;\n        }\n        public int IntDivision(int left, int right)\n        {\n            return left / right;\n        }\n        public double Division(double left, double right)\n        {\n            return left / right;\n        }\n        public int Modulus(int left, int right)\n        {\n            return left % right;\n        }\n        public double SquareRoot(double x)\n        {\n            return Math.Sqrt(x);\n        }\n    }\n} \n```", "```\nThe square root of 2 is 1.4142135623730951 \n```", "```\n> git lg\n43dd70e  | test the square root function [Jesse Liberty]  (5 minutes ago)  (HEAD -> main)\n0fa51fa  | make Main public and remove writelines [Jesse Liberty]  (8 minutes ago)\n51dd6e9  | Add square root function [Jesse Liberty]  (8 minutes ago)\n711c4e8  | add modulus operator [Jesse Liberty]  (9 minutes ago)\n06d7319  | add division function [Jesse Liberty]  (10 minutes ago)\n31f5873  | Add intDivision function [Jesse Liberty]  (11 minutes ago)\n9639a70  | add the multiply function [Jesse Liberty]  (12 minutes ago)\nd1eaff5  | capitalize subtract function [Jesse Liberty]  (12 minutes ago)\nd92657d  | Add subtract function [Jesse Liberty]  (13 minutes ago)\nb5e945f  | Capitalize add function [Jesse Liberty]  (13 minutes ago)\nf535d26  | Add the add function [Jesse Liberty]  (14 minutes ago)\na8cf101  | make calculator class public [Jesse Liberty]  (15 minutes ago)\nacd2ce4  | Create calculator class [Jesse Liberty]  (15 minutes ago)\n29cfe55  | First commit [Jesse Liberty]  (19 minutes ago)\nd0518a1  | Initial commit [Jesse Liberty]  (41 minutes ago)  (origin/main, origin/HEAD) \n```", "```\n public decimal Round(decimal x)\n        {\n           return  Math.Round(x);\n        } \n```", "```\npublic static void Main(string[] args)\n {\n     var calculator = new Calculator.Calculator();\n     Console.WriteLine($\"The square root of 93 is {calculator.SquareRoot(93)}\");\n     Console.WriteLine($\"93.64 rounded is \" + $\"{calculator.Round((decimal)93.64)}\");\n } \n```", "```\ngit log LogChallenge/LogChallenge/Program.cs \n```"]