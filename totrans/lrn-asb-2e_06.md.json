["```\n- name: \"Set a fact for the wordpress domain\"\n  ansible.builtin.set_fact:\n    wordpress_domain: \"{{ ansible_ssh_host }}\"\n    os_family: \"{{ ansible_distribution }} {{ ansible_distribution_version }}\"\n```", "```\nRedHat ansible_host=178.79.178.78.nip.io\nDebian ansible_host=176.58.114.60.nip.io\n[ansible_hosts]\nRedHat\nDebian\n[ansible_hosts:vars]\nansible_connection=ssh\nansible_user=root\nansible_private_key_file=~/.ssh/id_rsa\nhost_key_checking=False\n```", "```\n$ ansible -i hosts RedHat -m ansible.builtin.setup | grep ansible_os_family\n$ ansible -i hosts Debian -m ansible.builtin.setup | grep ansible_os_family\n```", "```\n$ ansible -i hosts RedHat -m ansible.builtin.setup | grep ansible_distribution\n$ ansible -i hosts Debian -m ansible.builtin.setup | grep ansible_distribution\n```", "```\n$ ansible -i hosts ansible_hosts -m ansible.builtin.setup | grep ansible_os_family\n```", "```\n- name: \"Include the operating system specific variables\"\n  ansible.builtin.include_vars: \"{{ ansible_os_family }}.yml\"\n```", "```\n- name: \"Install the stack on Debian based systems\"\n  ansible.builtin.import_tasks: \"Debian.yml\"\n  when: ansible_os_family == 'Debian'\n```", "```\n- name: \"Install the stack on RedHat based systems\"\n  ansible.builtin.import_tasks: \"RedHat.yml\"\n  when: ansible_os_family == 'RedHat'\n```", "```\n- name: \"Update all of the installed packages\"\n  ansible.builtin.dnf:\n    name: \"*\"\n    state: \"latest\"\n    update_cache: true\n```", "```\n- name: \"Add the NGINX mainline repo\"\n  ansible.builtin.yum_repository:\n    name: \"{{ nginx_repo.name }}\"\n    description: \"{{ nginx_repo.description }}\"\n    baseurl: \"{{ nginx_repo.baseurl }}\"\n    gpgcheck: \"{{ nginx_repo.gpgcheck }}\"\n    enabled: \"{{ nginx_repo.enabled }}\"\n```", "```\n- name: \"Update cache and install the stack packages\"\n  ansible.builtin.dnf:\n    state: \"present\"\n    update_cache: true\n    pkg: \"{{ system_packages + extra_packages + stack_packages }}\"\n```", "```\nselinux:\n  http_permissive: true\nfirewall_comands:\n  - \"firewall-cmd --zone=public --add-port=80/tcp --permanent\"\n  - \"firewall-cmd --zone=public --add-port=80/tcp\"\n```", "```\nmysql_socket_path: \"/var/run/mysqld/mysqld.sock\"\nphp_fpm_path: \"/etc/php/8.1/fpm/pool.d/www.conf\"\nphp_ini_path: \"/etc/php/8.1/fpm/php.ini\"\nphp_service_name: \"php8.1-fpm\"\n```", "```\nmysql_socket_path: \"/var/lib/mysql/mysql.sock\"\nphp_fpm_path: \"/etc/php-fpm.d/www.conf\"\nphp_ini_path: /etc/php.ini\nphp_service_name: \"php-fpm\"\n```", "```\n- name: Include the operating system specific variables\n  ansible.builtin.include_vars: \"{{ ansible_os_family }}.yml\"\n```", "```\n- name: \"Set the selinux allowing httpd_t to be permissive is required\"\n  community.general.selinux_permissive:\n    name: httpd_t\n    permissive: true\n  when: selinux.http_permissive and ansible_os_family == 'RedHat'\n```", "```\n- name: \"Check to see if the ~/firewall-configured file exists\"\n  ansible.builtin.stat:\n    path: \"~/firewall-configured\"\n  register: firewall_configured\n```", "```\n- name: \"Check if firewalld is running\"\n  ansible.builtin.command: firewall-cmd --state\n  register: fireweall_status\n  when: ansible_os_family == 'RedHat'\n```", "```\n- name: \"Set a fact so the playbook can continue if running on a Debian based system\"\n  ansible.builtin.set_fact:\n    fireweall_status:\n      stdout: notrunning\n  when: ansible_os_family == 'Debian'\n```", "```\n- name: \"Run the firewall-cmd commands if the firewall-cmd --state command returns running\"\n  ansible.builtin.command: \"{{ item }}\"\n  with_items: \"{{ firewall_comands }}\"\n  when: fireweall_status.stdout == \"running\" and ansible_os_family == 'RedHat' and not firewall_configured.stat.exists\n```", "```\n- name: \"Create the ~/firewall-configured file\"\n  ansible.builtin.file:\n    path: ~/firewall-configured\n    state: touch\n    mode: \"0644\"\n  when: not firewall_configured.stat.exists\n```", "```\n$ ansible-playbook -i hosts site.yml\n```", "```\nTASK [Gathering Facts] ************************************\nok: [Debian]\nok: [RedHat]\n```", "```\nTASK [roles/stack_install : update apt-cache and upgrade packages] *************\nskipping: [RedHat]\nchanged: [Debian]\n```", "```\nTASK [roles/stack_install : update all of the installed packages] **************\nskipping: [Debian]\nchanged: [RedHat]\n```", "```\nTASK [roles/stack_config : add the wordpress group] *******\nchanged: [RedHat]\nchanged: [Debian]\n```", "```\nTASK [roles/stack_config : run the firewall-cmd commands if the firewall-cmd --state command returns running] ***\nskipping: [Debian] => (item=firewall-cmd --zone=public --add-port=80/tcp --permanent)\nskipping: [Debian] => (item=firewall-cmd --zone=public --add-port=80/tcp)\nskipping: [Debian]\nchanged: [RedHat] => (item=firewall-cmd --zone=public --add-port=80/tcp --permanent)\nchanged: [RedHat] => (item=firewall-cmd --zone=public –\n-add-port=80/tcp)\n```", "```\nPLAY RECAP ************************************************\nDebian                     : ok=44   changed=29   unreachable=0    failed=0    skipped=7    rescued=0    ignored=2\nRedHat                     : ok=45   changed=34   unreachable=0    failed=0    skipped=6    rescued=0    ignored=2\n```"]