["```\n    $ ansible-galaxy init --init-path roles/ mysql\n\n    ```", "```\n     haproxy was created successfully\n\n    ```", "```\n    ---\n    # filename: roles/haproxy/defaults/main.yml\n    haproxy:\n      config:\n        cnfpath: /etc/haproxy/haproxy.cfg\n        enabled: 1\n        listen_address: 0.0.0.0\n        listen_port: 8080\n      service: haproxy\n      pkg: haproxy\n    ```", "```\n    ---\n    # filename: roles/haproxy/tasks/main.yml\n    - include: install.yml\n    - include: configure.yml\n    - include: service.yml\n\n    ---\n    # filename: roles/haproxy/tasks/install.yml\n      - name: install haproxy\n        apt:\n          name: \"{{ haproxy['pkg'] }}\"\n\n    ---\n    # filename: roles/haproxy/tasks/configure.yml\n     - name: create haproxy config\n       template: src=\"img/haproxy.cfg.j2\" dest=\"{{ haproxy['config']['cnfpath'] }}\" mode=0644\n       notify:\n        - restart haproxy service\n\n     - name: enable haproxy\n       template: src=\"img/haproxy.default.j2\" dest=/etc/default/haproxy mode=0644\n       notify:\n        - restart haproxy service\n\n    ---\n    # filename: roles/haproxy/tasks/service.yml\n     - name: start haproxy server\n       service:\n         name: \"{{ haproxy['service'] }}\" \n         state: started\n\n    ---\n    # filename: roles/haproxy/handlers/main.yml\n    - name: restart haproxy service\n      service: name=\"{{ haproxy['service'] }}\" state=restarted\n    ```", "```\n#filename: roles/haproxy/templates/haproxy.default\nENABLED=\"{{ haproxy['config']['enabled'] }}\"\n\n#filename: roles/haproxy/templates/haproxy.cfg.j2\nglobal\n        log 127.0.0.1 local0\n        log 127.0.0.1 local1 notice\n        maxconn 4096\n        user haproxy\n        group haproxy\n        daemon\n\ndefaults\n        log global\n        mode http\n        option httplog\n        option dontlognull\n        retries 3\n        option redispatch\n        maxconn 2000\n        contimeout 5000\n        clitimeout 50000\n        srvtimeout 50000\n\nlisten fifanews {{ haproxy['config']['listen_address'] }}:{{ haproxy['config']['listen_port'] }}\n        cookie  SERVERID rewrite\n        balance roundrobin\n    {% for host in groups['www'] %}\n        server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_eth1']['ipv4']['address'] }}:{{ hostvars[host]['nginx']['phpsites']['fifanews']['port'] }} cookie {{ hostvars[host]['inventory_hostname'] }} check\n    {% endfor %}\n```", "```\n    {{ hostvars[host]['inventory_hostname'] }}\n    {{ hostvars[host]['nginx']['phpsites']['fifanews']['port'] }}\n    ```", "```\n---\n#filename: lb.yml\n- hosts: lb\n  remote_user: vagrant\n  sudo: yes\n  roles:\n     - { role: haproxy, when: ansible_os_family == 'Debian' }\n\n---\n# This is a site wide playbook \n# filename: site.yml\n- include: db.yml\n- include: www.yml\n- include: lb.yml\n```", "```\n$ ansible-playbook -i customhosts site.yml\n\n```", "```\nlisten fifanews 0.0.0.0:8080\n     cookie  SERVERID rewrite\n     balance roundrobin\n     server  vagrant 192.168.61.12:8080 cookie 192.168.61.12 check\n```", "```\n$ ansible-playbook -i customhosts lb.yml\n\n```", "```\n$ sudo apt-get install redis-server\n$ sudo service redis-server start\n$ apt-get install python-pip\n$ pip install redis\n\n```", "```\n$ sudo yum install redis\n$ sudo yum install python-pip\n$ sudo service start redis\n$ sudo pip install redis\n\n```", "```\n# filename: /etc/ansible/ansible.cfg\n# Comment  following lines \n# gathering = smart\n# fact_caching = memory\n# Add  following lines \ngathering = smart\nfact_caching = redis\nfact_caching_timeout = 86400\nfact_caching_connection = localhost:6379:0\n```", "```\n$ ansible-playbook -i customhosts www.yml\n$ redis-cli \n$ keys *\n\n```", "```\n$ ansible-playbook -i customhosts lb.yml\n\n```", "```\n   # filename: /etc/ansible/ansible.cfg \n   fact_caching = jsonfile\nfact_caching_connection = /tmp/cache\n```", "```\n$ mkdir /tmp/cache\n$ chmod 777 /tmp/cache\n\n```"]