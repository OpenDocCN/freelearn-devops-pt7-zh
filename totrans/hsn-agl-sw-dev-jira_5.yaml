- en: Searching and Filtering on Issues
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在问题上进行搜索和筛选
- en: In this chapter, we're going to be talking about searching and filtering on
    issues, which can be a very powerful capability within JIRA.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论在 JIRA 中进行问题搜索和筛选，这是一项非常强大的功能。
- en: We are also going to talk about JQL, what it is, how to write queries in JIRA
    using simple and advanced editors, and how to export WER results.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将讨论 JQL，它是什么，如何使用简单和高级编辑器在 JIRA 中编写查询，以及如何导出 WER 结果。
- en: 'In this chapter, we will be covering the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将覆盖以下主题：
- en: Issue searching using JQL
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 JQL 进行问题搜索
- en: Saving and managing filters
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存和管理筛选器
- en: Executing bulk changes
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行批量更改
- en: Creating new boards from saved filters
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从保存的筛选器创建新看板
- en: Issue searching using JQL
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 JQL 进行问题搜索
- en: In this section, let's talk about issue searching using JQL. We are going to
    talk about what JQL is, writing queries in both the simple editor and the advanced
    editor in order to return results, and how to export those results to use them
    in other ways.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论使用 JQL 进行问题搜索。我们将讲解 JQL 是什么，如何在简单编辑器和高级编辑器中编写查询以返回结果，以及如何将这些结果导出以便用于其他方式。
- en: First, let's talk about JQL. We don't want to confuse this with the Java query
    language, which is something different—it's the **JIRA Query Language** that we
    want to look at. It's very similar in format to SQL, so if we've spent any time
    in SQL and understand that query syntax, we're going to feel pretty comfortable
    in JQL. It uses fields, values, operators, and keywords. Let's talk about what
    those are.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们来谈谈 JQL。我们不想把它与 Java 查询语言混淆，后者是另一回事——我们要关注的是**JIRA 查询语言**。它的格式与 SQL 非常相似，因此如果我们曾经使用过
    SQL 并理解其查询语法，我们会在 JQL 中感到非常舒适。它使用字段、值、运算符和关键字。接下来我们来讨论这些内容。
- en: The fields themselves are the different types of information that are contained
    within the systems; these are the different attributes for the work types and
    more. The values are actually what's contained within those fields, so those are
    the actual values that we would be looking for. The operators are essentially
    the heart of the query—they're the intelligence—so they'd be things like equal
    to, or not equals to, or less than, and more, which we would then use to create
    some intelligence around the fields and values. And then, we've got keywords,
    which are really reserved words that we use in our query language to connect these
    different operators together.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 字段本身是系统中包含的不同类型的信息；这些是工作类型等的不同属性。值实际上是这些字段中包含的内容，因此它们是我们要查找的实际值。运算符基本上是查询的核心——它们是智能部分——例如等于、不等于、小于、大于等，我们可以用它们在字段和值之间创建智能查询。然后，我们有关键字，这些是我们在查询语言中使用的保留字，用来将这些不同的运算符连接在一起。
- en: Here is a link to a post on the Atlassian website that talks more deeply about
    searching JIRA: [https://confluence.atlassian.com/jiracore/blog/2015/07/search-jira-like-a-boss-with-jql](https://confluence.atlassian.com/jiracore/blog/2015/07/search-jira-like-a-boss-with-jql).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个链接，指向 Atlassian 网站上的一篇文章，深入讲解了如何搜索 JIRA：[https://confluence.atlassian.com/jiracore/blog/2015/07/search-jira-like-a-boss-with-jql](https://confluence.atlassian.com/jiracore/blog/2015/07/search-jira-like-a-boss-with-jql)。
- en: Simple and advanced JQL editors in JIRA
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JIRA 中的简单和高级 JQL 编辑器
- en: Let's take a look at the simple and advanced JQL editors in JIRA.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看 JIRA 中的简单和高级 JQL 编辑器。
- en: 'We have two projects called First Project and Second Project in our instance
    of JIRA. What we want to do is run some queries against these projects. Go to
    the Issues link in the upper left-hand corner:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的 JIRA 实例中，有两个项目，分别是**第一个项目**和**第二个项目**。我们要做的是对这些项目运行一些查询。请点击左上角的**问题**链接：
- en: '![](img/00109.jpeg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00109.jpeg)'
- en: Dashboard containing WER projects
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 包含 WER 项目的仪表盘
- en: 'Our default screen for searching is going to be basically the most generic
    query that we can do, and we''re actually in the advanced editor. Let''s flip
    over to the basic editor in the upper right-hand corner of the screen:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们搜索的默认屏幕基本上是我们能够做的最通用的查询，实际上我们是在高级编辑器中。让我们切换到屏幕右上角的基本编辑器：
- en: '![](img/00110.jpeg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00110.jpeg)'
- en: As we can see in the preceding screenshot, it's going to give us dropdowns that
    allow us to build a query. We know that we can check these projects. Say that
    we want to see just the First Project, or just the Second Project, and, as we
    do that, we can see the results underneath changing. We can also choose the types
    of issues that we want to see, the status that we want to see, who the issue is
    assigned to, and more. This is the basic editor, and we can run a query just by
    clicking and searching for issues.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 正如在前面的截图中所示，它将提供下拉菜单，允许我们构建查询。我们知道可以选择这些项目。例如，如果我们只想查看第一个项目，或者只查看第二个项目，在这样操作时，我们可以看到下面的结果发生变化。我们还可以选择要查看的缺陷类型、要查看的状态、缺陷的负责人等。这是基本编辑器，我们只需点击并搜索缺陷，即可运行查询。
- en: 'If we go to the advanced editor, we can see that we can also look up some specific
    things:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们进入高级编辑器，我们可以看到可以查找一些特定的内容：
- en: '![](img/00111.jpeg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00111.jpeg)'
- en: 'One of my favorite queries concerns open Sprints:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我最喜欢的查询之一涉及打开的冲刺：
- en: '![](img/00112.jpeg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00112.jpeg)'
- en: Here, we can say, *show me all of the open Sprints within the FP-1 project*.
    We can see that it's actually going to write a query for us, which makes it easier
    for us to run this. We can say that the *first project and our issue type equals
    story*, and that we want to search for it. We can see how this works; we can use
    the advanced editor to write our queries.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以说，*显示我FP-1项目中的所有开放冲刺*。我们可以看到它实际上为我们编写了一个查询，这使得我们更容易运行它。我们可以说*第一个项目，问题类型等于Story*，然后我们想要搜索它。我们可以看到它是如何工作的；我们可以使用高级编辑器来编写我们的查询。
- en: 'We also have a query that was already written, as shown in the following screenshot.
    This is the query for the First Project and the issue type is Story, which says *Show
    us everything that''s in an open Sprint and order that by the created date descending*:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有一个已经编写的查询，如下图所示。这是第一个项目的查询，问题类型是Story，查询内容是*显示所有在开放冲刺中的内容，并按创建日期降序排序*：
- en: '![](img/00113.jpeg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00113.jpeg)'
- en: What we get back are two stories. These are the two stories that are currently
    in the First Project and that are in an open Sprint.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的结果是两个故事。这是目前在第一个项目中并且处于开放冲刺中的两个故事。
- en: In this section, we looked at how we would write a query in both the basic and
    advanced query editor, and we've also been given a nice little sheet for the open
    Sprints.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们看了如何在基本查询编辑器和高级查询编辑器中编写查询，还为打开的冲刺提供了一个非常有用的表格。
- en: Saving and managing filters
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保存和管理筛选器
- en: In this section, we're going to talk about saving and managing filters. This
    means that we're going to learn how to save a created filter, how to set writes
    for our saved filters, and how to see all of our saved filters and manage those.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论如何保存和管理筛选器。这意味着我们将学习如何保存创建的筛选器，如何设置保存筛选器的权限，以及如何查看和管理所有保存的筛选器。
- en: 'Let''s go ahead and hop over to JIRA and take a look at our issue searching
    screen. We have a query, so let''s flip over to the basic editor and say *show
    me everything that''s in the second project*. Saving this is really easy, as all
    we have to do is click on Save as and this will take you to the following screen,
    and write `Second Project Work Items` as our Filter Name:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续前往JIRA，看看我们的缺陷搜索界面。我们有一个查询，所以让我们切换到基本编辑器并说*显示我第二个项目中的所有内容*。保存这个筛选器非常简单，我们只需要点击“另存为”，然后会跳转到以下屏幕，写上`Second
    Project Work Items`作为我们的筛选器名称：
- en: '![](img/00114.jpeg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00114.jpeg)'
- en: Save Filter dialog
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 保存筛选器对话框
- en: 'If we click Submit, we now have a saved filter. What we''ve done is we''ve
    taken a query and turned it into a filter by saving it so that we can run it again
    and again. If we look under Manage filters on the left, we can see the filter
    that we just saved to the Second Project Work Items:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们点击提交，现在我们已经有了一个保存的筛选器。我们所做的是将查询转化为筛选器，并保存它，这样我们就可以反复运行它。如果我们在左侧的“管理筛选器”下查看，我们可以看到刚刚保存的筛选器——第二项目工作项：
- en: '![](img/00115.jpeg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00115.jpeg)'
- en: 'We can also see that we have three ellipses on the right-hand side, which provide
    us with some options such as Manage subscriptions, Copy filter and Edit filter
    details, and we can even click on Shared with and take a look at who these are
    shared with. If we click on the Second Project work items, we''re going to see
    the content of that query. We can also click Advanced so that we can see what
    query language we used:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以看到，右侧有三个省略号，提供了如“管理订阅”、“复制过滤器”和“编辑过滤器详细信息”等选项，我们甚至可以点击“共享给”查看这些内容是与谁共享的。如果我们点击“第二项目工作项”，将看到该查询的内容。我们还可以点击“高级”，查看我们使用的查询语言：
- en: '![](img/00116.jpeg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00116.jpeg)'
- en: Second Project Work Items
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 第二项目工作项
- en: 'In the top corner of the preceding screenshot, we can see that we can share
    the item by providing the link, inserting the username or email of that person
    contained within JIRA, and then we can add a note and hit Share. We''ve also got
    the details of the item that we created:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面截图的右上角，我们可以看到可以通过提供链接、插入 JIRA 中某个人的用户名或电子邮件来共享该项内容，然后我们可以添加备注并点击“共享”。我们还可以查看我们创建的项目的详细信息：
- en: '![](img/00117.jpeg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00117.jpeg)'
- en: This allows us to set the permissions and subscriptions, and see who should
    have access to them and be able to see the content of this filter. We can see
    that we have the ability to share this with a group, a particular project, any
    logged-in user, or just make it public. That's how we save and we manage our queries
    and turn them into filters.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这允许我们设置权限和订阅，并查看谁应该拥有访问权限，能够查看此过滤器的内容。我们可以看到，我们有能力与一个组、特定项目、任何登录用户共享，或者直接公开共享。这就是我们如何保存和管理查询并将其转换为过滤器。
- en: Executing bulk changes
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行批量更改
- en: In this section, we're going to be talking about executing bulk changes. This
    can be really powerful when we need to make a lot of changes to many items and
    we don't want to make those changes individually. We do this by figuring out whether
    there is a pattern or a way that we can make that change to many items and execute
    what's called a bulk change.  We're going to learn how to execute a bulk change
    using the results of a filter.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将讨论如何执行批量更改。当我们需要对许多项目进行大量更改时，这种方法非常有效，尤其是当我们不想逐一进行这些更改时。我们通过找出是否有某种模式或方法，能够对多个项目进行更改，从而执行所谓的批量更改。我们将学习如何使用过滤器的结果来执行批量更改。
- en: Let's jump back over to JIRA and take a look at one of our filters, as shown
    in the following screenshot. In our First Project Open Sprint Work Items filter,
    we can see that this says project FP1, and, if the issue type is story, we're
    going to look at our open Sprints and return everything ordered by the created
    date descending. It returns the two stories, FP1-24 and FP1-25.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到 JIRA，查看我们的一些过滤器，如下图所示。在我们的“第一个项目开放冲刺工作项”过滤器中，我们可以看到它显示的是项目 FP1，并且，如果问题类型是故事，我们将查看我们的开放冲刺并按创建日期降序排列返回所有内容。它返回了两个故事，FP1-24
    和 FP1-25。
- en: 'We also want to change both of these stories to tasks. The best way to do this
    would be with a bulk change, so let''s proceed. We''re going to go to the ellipsis
    in the right-hand corner, and we''re going to click on Bulk change all 2 issue(s):'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还希望将这两个故事转换为任务。最好的方法是进行批量更改，所以我们继续操作。我们将前往右上角的省略号，点击“批量更改所有 2 个问题”：
- en: '![](img/00118.jpeg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00118.jpeg)'
- en: Executing bulk changes
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 执行批量更改
- en: 'This will bring us to the following screen:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这将带我们进入以下屏幕：
- en: '![](img/00119.jpeg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00119.jpeg)'
- en: Bulk operation
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 批量操作
- en: 'We''re going to select each of the issues that we want to change, and, in this
    case, we can just select the top one. It will check all of them, so we can click
    Next. This will take us to the following screen:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将选择要更改的每个问题，在这种情况下，我们只需选择第一个，它将自动勾选所有问题，接着我们可以点击“下一步”。这将带我们进入以下屏幕：
- en: '![](img/00120.jpeg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00120.jpeg)'
- en: 'We''re going to choose the operation we want to perform. We want to edit these
    issues, but we can also move them from one project to another, transition them
    to the workflow, and more. Let''s click Edit Issues, and then Next, and then we''re
    going to change the issue type to Task:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将选择要执行的操作。我们想编辑这些问题，但我们也可以将它们从一个项目移到另一个项目，过渡到工作流等。我们点击“编辑问题”，然后点击“下一步”，接着我们将把问题类型更改为任务：
- en: '![](img/00121.jpeg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00121.jpeg)'
- en: 'As we can see in the preceding screenshot, we can also change lots of other
    items as well. We''ll click Next, and then we can click Confirm, as shown in the
    following screenshot:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前面的截图中看到的，我们还可以更改许多其他条目。我们点击**下一步**，然后可以点击**确认**，如以下截图所示：
- en: '![](img/00122.jpeg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00122.jpeg)'
- en: 'And it will go ahead and execute that change for us as follows:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 它将自动为我们执行该更改，如下所示：
- en: '![](img/00123.jpeg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00123.jpeg)'
- en: 'While it''s running, we''ll let it run for a minute and, when it''s done, we
    can click Acknowledge. If we go back to our query that was for this project issue
    type story, we get no results:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在它运行时，我们让它运行一会儿，等它完成后，我们可以点击**确认**。如果我们回到这个项目问题类型故事的查询，我们将没有结果：
- en: '![](img/00124.jpeg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00124.jpeg)'
- en: 'If we change the story to a `Task` and run this query again, we can see that
    we''ve now changed these items from stories into tasks:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将故事更改为`任务`并再次运行此查询，我们可以看到这些条目现在已经从故事更改为任务：
- en: '![](img/00125.jpeg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00125.jpeg)'
- en: Running query
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 运行查询
- en: That's how we execute a bulk change.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们如何执行批量更改。
- en: Creating new boards from saved filters
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从保存的筛选器创建新看板
- en: In this section, we're going to be talking about trading new boards from saved
    filters. Here, we're going to use a saved filter and create a new JIRA board.
    In the previous sections, we've talked about what JQL is, creating a filter from
    a query, and bulk changes, and now we're going to take a look at using those same
    filters to create a JIRA board. There's actually a lot of power within JIRA.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将讨论如何从保存的筛选器中创建新的看板。在这里，我们将使用一个保存的筛选器来创建一个新的JIRA看板。在之前的部分中，我们谈到了JQL是什么，如何从查询创建筛选器，以及批量更改，现在我们将使用这些相同的筛选器来创建一个JIRA看板。实际上，JIRA中有很多强大的功能。
- en: 'As we can see in the following screenshot, we have a query. We''ve actually
    saved this query as a filter. Let''s take a look at what this query does:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在下图中看到的，我们有一个查询。我们实际上已经将这个查询保存为一个筛选器。让我们来看一下这个查询的作用：
- en: '![](img/00126.jpeg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00126.jpeg)'
- en: Saved filters
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 保存的筛选器
- en: As we can see in the preceding screenshot, it's basically returning all of the
    items in the First Project and Second Project, and it's ordering them by the creation
    date descending. That's pretty simple; it's basically saying, *show me all of
    the work items in these two projects.*
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前面的截图中看到的，它基本上返回了第一个项目和第二个项目中的所有条目，并按创建日期降序排列。这很简单；它基本上是在说，*展示这两个项目中的所有工作项*。
- en: 'Let''s use this to create a new board. Let''s say, hypothetically, that we
    want to go and mine these two projects together into a bigger initiative, and
    we want to create a board that will let us view all of that in a single board
    view. What we''ll do now is go over to the search screen, to RECENT BOARDS. We
    can see in the following screenshot that we have View all boards:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用这个来创建一个新的看板。假设我们想把这两个项目合并成一个更大的计划，并且我们想创建一个看板来在单一看板视图中查看所有内容。我们现在要做的是转到搜索界面，进入**最近的看板**。我们可以在以下截图中看到我们有一个**查看所有看板**选项：
- en: '![](img/00127.jpeg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00127.jpeg)'
- en: 'We might remember that a board gets created automatically when we create a
    new project. Here, we can see that we actually have two boards already; we have
    the first project and second project boards as follows:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可能记得，当我们创建一个新项目时，系统会自动创建一个看板。这里，我们可以看到我们已经有了两个看板；我们有第一个项目和第二个项目的看板，如下所示：
- en: '![](img/00128.jpeg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00128.jpeg)'
- en: 'We''re now going to create a new project, so if we go to the upper right-hand
    corner, we can see that we have a Create board option, so let''s click that. We''re
    going to get a prompt that gives us some options on what kind of board we''d like
    to create:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们要创建一个新项目，所以如果我们去右上角，我们可以看到有一个**创建看板**选项，我们点击它。接下来会弹出一个提示，给我们一些关于要创建哪种看板的选择：
- en: '![](img/00129.jpeg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00129.jpeg)'
- en: The first is the Agility board, which is the board that JIRA will create to
    allow us to view the content of a project in a more streamlined way. We already
    have projects in place with boards, and so we're trying to create a board from
    a query. We can also see that we have a Scrum board, which would include things
    like iterations and similar. We're really just trying to bring a board view together
    that gives us all of the contents of the two projects. Kanban is going to be what
    we want to use in this situation. Kanban is really about moving work items and
    a limited number of work items through a workflow, with each column representing
    a workflow. Let's create a Kanban board. We can see in the following screenshot
    that we get a few more options, for example, do we want to create a new software
    project, an existing project, or a board from an existing saved filter?
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个是敏捷看板，这是 JIRA 创建的看板，用于以更简化的方式查看项目内容。我们已经有了带有看板的项目，因此我们尝试从查询中创建看板。我们还可以看到有一个
    Scrum 看板，它会包含像迭代等内容。我们的目标是将两个项目的所有内容整合到一个看板视图中。Kanban 看板是我们在这种情况下希望使用的。Kanban
    主要是将工作项及有限数量的工作项通过工作流推进，每一列代表一个工作流。让我们创建一个 Kanban 看板。我们可以在以下截图中看到，我们有更多的选项，例如，我们是想创建一个新的软件项目、一个现有项目，还是从现有的保存筛选器创建一个看板？
- en: '![](img/00130.jpeg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00130.jpeg)'
- en: 'Let''s create a board by clicking on the Board from an existing Saved Filter
    option and hitting Next. We''ll call this board `All Projects`, and we''re going
    to use the Saved Filter of the First and Second Projects. We''re not going to
    share it now, but we''re going to have me as the owner, and then, as a location,
    we can save this as another board underneath either the first or second projects,
    or we can just attach this to our profile, as shown in the following screenshot:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过点击“从现有保存的筛选器中选择看板”并点击“下一步”来创建一个看板。我们将这个看板命名为`所有项目`，并使用“第一个”和“第二个项目”的保存筛选器。我们现在不会分享它，但我们将把我设置为所有者，然后，作为位置，我们可以将其保存为第一个或第二个项目下的另一个看板，或者直接将其附加到我们的个人资料中，如下图所示：
- en: '![](img/00131.jpeg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00131.jpeg)'
- en: 'Let''s go ahead and create the board. We can see that we have a Kanban board
    with three columns, TO DO, IN PROGRESS, and DONE, and all of the content of both
    of the projects:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续创建看板。我们可以看到我们有一个包含三列的看板，分别是“待办”、“进行中”和“已完成”，以及两个项目的所有内容：
- en: '![](img/00132.jpeg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00132.jpeg)'
- en: We can see in the preceding screenshot, which shows us that all of the first
    and second project's content is now contained within this board, and that we live
    in this workflow. If you found that easy, we will now look at a few options that
    give us both of those projects combined.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在前面的截图中看到，这显示了第一个和第二个项目的所有内容现在都包含在这个看板中，并且我们正在这个工作流中操作。如果你觉得这个过程很简单，那么我们现在将看几个选项，让我们能够将这两个项目合并在一起。
- en: Summary
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned what the JIRA query language is, that is, JQL— this
    is not the Java Query Language, but the JIRA Query Language. We learned how to
    write both simple and advanced queries using JQL, how to export our query results,
    and we learned how to save the query and turn it into a filter. Finally, we learned
    how to use those saved filters to execute bulk changes, and we learned how to
    use a saved filter to create a new JIRA board.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们了解了什么是 JIRA 查询语言，也就是 JQL——这不是 Java 查询语言，而是 JIRA 查询语言。我们学习了如何使用 JQL 编写简单和高级查询，如何导出查询结果，如何保存查询并将其转换为筛选器。最后，我们学习了如何使用这些保存的筛选器执行批量更改，并学习了如何使用保存的筛选器创建新的
    JIRA 看板。
- en: In our next and final chapter, we're going to be talking about dashboards and
    widgets.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们接下来的最后一章中，我们将讨论仪表板和小部件。
