- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Introduction
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: A very brief history of version control and Git
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本控制和Git的简短历史
- en: Getting and setting up Visual Studio 2019, GitHub Desktop, and your terminal
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取并设置Visual Studio 2019、GitHub Desktop和终端
- en: Getting and installing Git
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取并安装Git
- en: Configuring Git for Visual Studio, GitHub Desktop, and GitHub at the command
    line
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为Visual Studio、GitHub Desktop和GitHub命令行配置Git
- en: Let's get started!
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 开始吧！
- en: About this book
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书简介
- en: '"Begin at the beginning," the King said gravely, "and go on till you come to
    the end, then stop." – Alice in Wonderland'
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “从一开始开始，”国王庄严地说，“一直进行到结束，然后停下来。”——《爱丽丝梦游仙境》
- en: 'In this book, we will cover Git from the very beginning all the way through
    to advanced topics. No experience with Git is expected. Though if you have been
    using Git, you''ll probably want to skim the initial chapters. Git is arguably
    the most popular version control system in the world, but this raises the question:
    "What is version control?"'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将从Git的基础开始，逐步深入到高级主题。无需任何Git的使用经验。当然，如果你已经在使用Git，你可能希望跳过前面的章节。Git可以说是全球最流行的版本控制系统，但这也引发了一个问题：“什么是版本控制？”
- en: Version control
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 版本控制
- en: Before version control, I would code a bit and then when I became afraid of
    losing that code, I would make a backup of my directory. This is slow, inefficient,
    takes up a lot of disk space, and is very hard to share with others.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在有版本控制之前，我会写一点代码，然后当我开始担心丢失这些代码时，我会备份我的目录。这种做法很慢、低效，占用了大量的磁盘空间，而且很难与他人共享。
- en: A **Version Control System** (**VCS**) does all this work for you (and more)
    and does so in a way that is fast, efficient, and takes up a minimum of disk space.
    One of the fastest and most efficient is Git, although there are others. This
    book will not spend a lot of time convincing you that Git is better than the others.
    First, the market has spoken, and Git prevails. Second, if you've purchased this
    book, you've already decided. And if you haven't already purchased this book,
    go do so. I'll wait here.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**版本控制系统**（**VCS**）为你完成所有这些工作（还有更多），并且以一种快速、高效、占用最少磁盘空间的方式进行。其中最快和最有效的之一就是Git，尽管也有其他的工具。本书不会花很多时间说服你Git比其他工具更好。首先，市场已经证明了这一点，Git占据了主导地位。其次，如果你已经购买了本书，那说明你已经做出了选择。如果你还没有购买本书，那就去购买吧。我会在这里等你。'
- en: About the code examples
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于代码示例
- en: In order to demonstrate the use of Git, we need to have a small program that
    we can evolve. The code examples are given in C#, but they are so simple that
    you'll be able to follow them regardless of your experience with the language.
    For example, if you can figure out what this does, you're all set.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示Git的使用，我们需要有一个可以演变的小程序。代码示例使用C#编写，但它们非常简单，无论你是否熟悉这门语言，你都能跟得上。例如，如果你能搞清楚这段代码的作用，那你就准备好了。
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This code declares a class (don't worry about what that is) named `Program`.
    Inside that class is a method (function) called `PrintHello` that prints `Hello
    World` to the console (your screen).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码声明了一个类（不用担心它是什么）名为`Program`。在这个类内部，有一个方法（函数）叫做`PrintHello`，它会将`Hello World`打印到控制台（你的屏幕上）。
- en: This is about as complex as it gets, and I'll explain each code snippet as we
    go.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这大概就是最复杂的地方了，我会在接下来的过程中解释每个代码片段。
- en: Just a brief history
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简短的历史
- en: In July of 2005, after just a few month's work, Linus Torvalds, the genius behind
    Linux, released Git to meet his own needs, the needs of the Linux community, and
    eventually, the rest of us. The goal of Git was to be fast and efficient. It succeeded.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 2005年7月，在仅仅几个月的工作后，Linux背后的天才Linus Torvalds发布了Git，以满足他自己的需求、Linux社区的需求，最终也满足了我们所有人的需求。Git的目标是快速和高效。它做到了。
- en: While most VCSes at the time were centralized (all the files were kept on a
    big server), Git uses a distributed system, in which everyone has their own repository.
    Technically, no central server is required for Git, although if you are working
    in a team, a central place for sharing code is convenient. But the huge difference
    is that with Git, the vast majority of your interactions with the VCS are local
    – right there on your disk.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然当时大多数VCS都是集中式的（所有文件都保存在一个大服务器上），但Git使用的是分布式系统，其中每个人都有自己的仓库。从技术上讲，Git不需要中央服务器，尽管如果你在团队中工作，中央的代码共享位置会很方便。但最大的不同在于，使用Git时，你与VCS的绝大多数交互都是本地的——就在你的磁盘上。
- en: Tools for working with Git
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Git的工具
- en: There are a number of easily confused terms (such as Git versus GitHub) and
    there are many tools for working with Git – from the command line to **Graphical
    User Interface** (**GUI**) tools. This section will review some of these options.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多容易混淆的术语（例如 Git 与 GitHub 的区别），而且有很多工具可以与 Git 一起使用——从命令行到**图形用户界面**（**GUI**）工具。本节将回顾其中的一些选项。
- en: GitHub, et al.
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GitHub 等
- en: There are many services that allow you to create shared "repositories" (the
    location of all the versions of your program). The most famous and popular are
    GitHub and Microsoft's Azure, as well as BitBucket and GitLab. Azure is a very
    powerful system for DevOps, while GitHub is a very straightforward way to host
    your program. We'll be using GitHub in this book. (Recently, Microsoft acquired
    GitHub for $7.5 billion in stock – and made a huge commitment to GitHub, open
    source and, of course, to Git.)
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多服务允许你创建共享的“仓库”（存储程序所有版本的位置）。最著名和流行的包括 GitHub 和微软的 Azure，还有 BitBucket 和 GitLab。Azure
    是一个功能强大的 DevOps 系统，而 GitHub 是一个非常直接的托管程序的方式。本书中我们将使用 GitHub。（最近，微软以 75 亿美元的股票收购了
    GitHub，并对 GitHub、开源项目以及 Git 做出了巨大的承诺。）
- en: '**Key point**: Git is the system we''re covering in this book. GitHub is a
    central repository system for sharing code (we''ll make this more specific later
    in the book) and GitHub Desktop is a GUI for working with Git.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**关键点**：Git 是本书中讲解的系统。GitHub 是一个用于共享代码的中央仓库系统（我们将在书中稍后更加具体地讲解），而 GitHub Desktop
    是一个用于操作 Git 的 GUI。'
- en: GUIs and the command line
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GUI 和命令行
- en: There are many ways in which to interact with Git. The principal ones are to
    work at the command line or to use a GUI. There are a wide number of GUIs. This
    book will focus on GitHub for Desktop and Visual Studio 2019, as well as the command
    line. In fact, one of the things that makes this book different is that all of
    Git will be explained using these three tools. This will give you a deep understanding
    of Git along with how the GUIs can help (and can hinder) your work.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多方式可以与 Git 互动。主要的方式是通过命令行操作或使用 GUI。GUI 工具种类繁多。本书将重点介绍 GitHub for Desktop 和
    Visual Studio 2019 以及命令行。事实上，本书的一个不同之处在于，我们将通过这三种工具来讲解 Git。这将帮助你深入理解 Git，同时了解
    GUI 工具如何帮助（或阻碍）你的工作。
- en: There are many other excellent GUI tools, and the ecosystem of tools keeps evolving.
    That said, the ones we will use are both powerful and representative of what you
    get with nearly all the other GUI tools. In addition, these tools are well established
    and likely to stick around. Furthermore, if you learn one GUI and see how it relates
    to command-line instructions, you'll find it easy to use other GUIs.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多其他优秀的 GUI 工具，而且工具的生态系统也在不断发展。话虽如此，我们将使用的这些工具既强大又具有代表性，几乎所有其他 GUI 工具也都提供类似功能。此外，这些工具已经得到广泛应用，未来很可能会继续存在。更重要的是，如果你掌握了一个
    GUI 工具，并了解它与命令行指令的关系，你会发现使用其他 GUI 工具也变得轻松。
- en: We will look first at the command-line interface to Git. While there are some
    limitations in GUI tools, if it can be done with Git, it can be done at the command
    line, that is, all of Git's functionality is exposed at the command line. Furthermore,
    as has often been pointed out, understanding Git at the command line will make
    your use of a GUI much easier as you will know what is actually happening.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先看一下 Git 的命令行界面。虽然 GUI 工具有一些局限性，但如果 Git 可以做到的事，你也能在命令行中完成，也就是说，Git 的所有功能都可以在命令行中操作。此外，正如常常有人指出的那样，了解
    Git 的命令行使用方式，会让你使用 GUI 工具更加得心应手，因为你会知道发生了什么。
- en: Does it help to understand how your car works? Not at all, until something goes
    wrong. Then you turn to the expert mechanic who can fix the problem. In Git, the
    expert is the programmer who knows the command line.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 理解你的车是怎么运作的有帮助吗？完全没有，除非出现故障。然后你会求助于能够修理问题的专业机械师。在 Git 中，专家就是熟悉命令行的程序员。
- en: The command line
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 命令行
- en: 'Out of the box, on Windows 10, the command line is available straight from
    your terminal. It gives you everything you need, but it is a bit ugly:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 10 上，开箱即用的命令行可以直接从终端访问。它提供了你需要的一切，但它有点难看：
- en: '![](img/B17441_01_01.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B17441_01_01.png)'
- en: 'Figure 1.1: Git at the command line'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1：Git 在命令行中的表现
- en: It is hard to read, but we can make it pretty, so that it's easier on the eye.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 它比较难读，但我们可以把它美化，使它更容易阅读。
- en: Making the command line pretty
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 美化命令行界面
- en: 'If you are using Git on Windows 10, you can make the command line prettier
    and more useful, as shown here:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在 Windows 10 上使用 Git，你可以让命令行界面看起来更漂亮且更有用，如下所示：
- en: '![](img/B17441_01_02.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B17441_01_02.png)'
- en: 'Figure 1.2: Example of Pretty Print'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.2：Pretty Print 示例
- en: To do this, download and install Power Shell. Then, follow Scott Hanselman's
    excellent directions at [http://jliberty.me/PrettyGit](http://jliberty.me/PrettyGit).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，请下载并安装 Power Shell。然后，按照 Scott Hanselman 在 [http://jliberty.me/PrettyGit](http://jliberty.me/PrettyGit)
    上提供的出色指示操作。
- en: A similar effect can be had on mac and Linux by following the directions at
    [https://github.com/diogocavilha/fancy-git](https://github.com/diogocavilha/fancy-git).
    There are other options available on the GitHub site that do pretty much the same
    thing.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在 mac 和 Linux 上，你可以通过访问 [https://github.com/diogocavilha/fancy-git](https://github.com/diogocavilha/fancy-git)
    按照指示操作，达到类似的效果。GitHub 网站上还有其他类似的选项，也能做到差不多的效果。
- en: Visual Studio 2019
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Visual Studio 2019
- en: 'Visual Studio 2019 has extensive support for Git built in. There is a separate
    menu specifically designed for Git, and Git information is integrated into the
    general UI:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio 2019 内置了对 Git 的广泛支持。专门为 Git 设计了一个独立的菜单，Git 信息也集成到了整体的用户界面中：
- en: '![](img/B17441_01_03.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B17441_01_03.png)'
- en: 'Figure 1.3: Git menu in Visual Studio 2019'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.3：Visual Studio 2019 中的 Git 菜单
- en: The first order of business is to get and set up Visual Studio.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 首要的任务是获取并设置 Visual Studio。
- en: Getting Visual Studio for free
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 免费获取 Visual Studio
- en: 'All three of the products used for illustration purposes in this book (the
    command line, Visual Studio 2019, and GitHub Desktop) have free versions available.
    To obtain your copy of Visual Studio 2019, go to [http://visualstudio.com](http://visualstudio.com)
    and hover over the **Visual Studio** button. Select **Community 2019**. It will
    download and all you have to do is double-click on it and follow the instructions:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中用于示范的三个产品（命令行、Visual Studio 2019 和 GitHub Desktop）都提供免费版本。要获取 Visual Studio
    2019，访问 [http://visualstudio.com](http://visualstudio.com)，然后将鼠标悬停在 **Visual Studio**
    按钮上，选择 **Community 2019**。它将自动下载，你只需双击并按照指示完成安装：
- en: '![](img/B17441_01_04.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B17441_01_04.png)'
- en: 'Figure 1.4: Obtaining Visual Studio'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.4：获取 Visual Studio
- en: If you are using a Mac, there are some significant differences between how Visual
    Studio 2019 for Windows handles Git and how Visual Studio for Mac does. You will
    probably have no trouble following along, but you can always use the Terminal
    or GitHub Desktop.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是 Mac，Visual Studio 2019 for Windows 和 Visual Studio for Mac 在处理 Git 的方式上存在一些显著的差异。你可能不会遇到太多困难，但你也可以随时使用
    Terminal 或 GitHub Desktop。
- en: GitHub Desktop
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GitHub Desktop
- en: 'A very popular GUI, especially for use with GitHub, is GitHub Desktop. This
    cross-platform application makes working with Git extremely easy: anticipating
    what you might want to do and making that simple. The downside is that there are
    limitations, as there are for virtually every GUI.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 一款非常流行的图形界面（GUI），尤其适用于 GitHub，是 GitHub Desktop。这款跨平台应用程序让使用 Git 变得异常简单：预判你可能想做的事情，并将其简化。缺点是，像几乎所有图形界面一样，它也有一些限制。
- en: '![](img/B17441_01_05.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B17441_01_05.png)'
- en: 'Figure 1.5: GitHub Desktop'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.5：GitHub Desktop
- en: 'We will be using all three of these throughout the book: command line, Visual
    Studio 2019, and GitHub Desktop. As we proceed, the selections and Git commands
    shown above will make much more sense; for now, just get a feel for their appearance.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中我们将使用这三种工具：命令行、Visual Studio 2019 和 GitHub Desktop。随着内容的推进，上面展示的选择和 Git 命令会变得更易理解；现在，你只需熟悉它们的外观即可。
- en: Getting Git
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取 Git
- en: The very first thing you need to do is to install Git on your computer. The
    official Git site states that "even if Git is already installed on your computer,
    it is probably a good idea to reinstall to update to the latest version."
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要做的第一件事是安装 Git。Git 的官方网站声明：“即使 Git 已经安装在你的电脑上，重新安装并更新到最新版本也是一个不错的主意。”
- en: Getting Git on Windows
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Windows 上获取 Git
- en: 'There are also a few ways in which to install Git on Windows. I recommend using
    the official build. The most recent one is available from the Git website: [https://git-scm.com/download/win](https://git-scm.com/download/win).'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 上，还有几种方法可以安装 Git。我推荐使用官方版本。最新版本可以在 Git 网站上获取：[https://git-scm.com/download/win](https://git-scm.com/download/win)。
- en: 'Another way to get Git, and to kill two birds with one stone, is to download
    and install GitHub Desktop. The installer will also install a command-line version
    of Git. You can get it at [https://desktop.github.com/](https://desktop.github.com/):'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 获取 Git 的另一种方式，并且一举两得，是下载并安装 GitHub Desktop。安装程序还会安装 Git 的命令行版本。你可以在 [https://desktop.github.com/](https://desktop.github.com/)
    获取：
- en: '![](img/B17441_01_06.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B17441_01_06.png)'
- en: 'Figure 1.6: Obtaining GitHub Desktop'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.6：获取 GitHub Desktop
- en: This book will show its demonstrations on Windows 10, using Git version 2.30.0.windows.2,
    but the examples should work with just about any version of Git.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将在 Windows 10 上展示演示，使用 Git 版本 2.30.0.windows.2，但这些示例应该适用于几乎任何版本的 Git。
- en: Getting Git on a Mac
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Mac 上获取 Git
- en: 'There are several ways to install Git on a Mac. The easiest is probably to
    install the Xcode command-line tools. You can do this by trying to run Git from
    the Terminal the very first time, as follows:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种方式可以在 Mac 上安装 Git。最简单的方法可能是安装 Xcode 命令行工具。你可以通过第一次从终端运行 Git 来实现，如下所示：
- en: '[PRE1]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If you don't have it installed already, it will prompt you to install it.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你尚未安装，它会提示你进行安装。
- en: 'If you want a more up-to-date version, you can also install it via a binary
    installer. A macOS Git installer is maintained and available for download at the
    Git website at [https://git-scm.com/download/mac](https://git-scm.com/download/mac):'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要更最新版的 Git，也可以通过二进制安装程序进行安装。一个 macOS 的 Git 安装程序由 Git 网站维护并提供下载，网址是 [https://git-scm.com/download/mac](https://git-scm.com/download/mac)：
- en: '![Git macOS installer](img/B17441_01_07.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![Git macOS 安装器](img/B17441_01_07.png)'
- en: 'Figure 1.7: Getting Git on a Mac'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.7：在 Mac 上安装 Git
- en: You can also install it as part of the GitHub Desktop for macOS install. Their
    GUI Git tool also has an option to install command-line tools. You can download
    that tool from the GitHub Desktop for macOS website at [https://desktop.github.com](https://desktop.github.com).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以将其作为 GitHub Desktop for macOS 安装的一部分来安装。它们的 GUI Git 工具也有一个选项可以安装命令行工具。你可以从
    GitHub Desktop for macOS 网站下载该工具，网址是 [https://desktop.github.com](https://desktop.github.com)。
- en: Getting Git on Linux
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Linux 上获取 Git
- en: This book does not formally support Linux, but almost all of Git is the same
    on all platforms.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 本书没有正式支持 Linux，但几乎所有平台上的 Git 都是相同的。
- en: 'If you want to install the basic Git tools on Linux, you can generally do so
    through the package management tool that comes with your distribution. If you''re
    on Fedora (or any closely related RPM-based distribution, such as RHEL or CentOS),
    you can use `dnf`:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想在 Linux 上安装基本的 Git 工具，通常可以通过随发行版附带的包管理工具来实现。如果你使用的是 Fedora（或任何相关的 RPM 发行版，如
    RHEL 或 CentOS），可以使用 `dnf`：
- en: '[PRE2]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If you''re on a Debian-based distribution, such as Ubuntu, try `apt`:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是基于 Debian 的发行版，如 Ubuntu，尝试使用`apt`：
- en: '[PRE3]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Checking your version
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查你的版本
- en: 'Once you have Git installed, your first command should be the following:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完 Git 后，你的第一个命令应该是以下内容：
- en: '[PRE4]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: That is, the keyword `git`, and then `version`, preceded by two dashes. This
    is sometimes called "git dash dash version."
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 也就是说，关键字是 `git`，然后是 `version`，前面加上两个破折号。这有时被称为“git 双破折号版本”。
- en: 'The output on my computer is as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我电脑上的输出如下：
- en: '[PRE5]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: (Your mileage may vary.)
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: （你可能会有不同的体验。）
- en: Configuring Git – the command line
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 Git – 命令行
- en: 'We''ll look at configuring Git to personalize throughout this book, but for
    now, let''s add your name and email address so that every entry into Git is stamped
    appropriately. Enter the command-line command:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将会介绍如何配置 Git 来进行个性化设置，但现在，先添加你的名字和电子邮件地址，以便每次使用 Git 时都能正确地记录信息。输入以下命令行命令：
- en: '[PRE6]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This will bring up your editor. Find or create the `[user]` section and add
    the following:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打开你的编辑器。找到或创建 `[user]` 部分，并添加以下内容：
- en: '[PRE7]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: You will probably want to use your own name and email address.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能想使用自己的姓名和电子邮件地址。
- en: There are other entries in the config file. Ignore them for now and save and
    close the file.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件中还有其他条目。暂时忽略它们并保存关闭文件。
- en: Configuring Git – Visual Studio
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 Git – Visual Studio
- en: 'In Visual Studio for Windows, click on the Git menu and a dialog box will open.
    On the first tab, enter your username and email address:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 的 Visual Studio 中，点击 Git 菜单，打开一个对话框。在第一个标签页中，输入你的用户名和电子邮件地址：
- en: '![](img/Image73605.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Image73605.png)'
- en: 'Figure 1.8: Setting Git options in Visual Studio'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.8：在 Visual Studio 中设置 Git 选项
- en: Configuring Git – GitHub Desktop
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 Git – GitHub Desktop
- en: 'To configure GitHub Desktop, you''ll need an account on GitHub. We''ll cover
    that in the next chapter. Once you do have an account, go to **File | Options**,
    select the **Accounts** tab, and then click on **Sign in**:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置 GitHub Desktop，你需要一个 GitHub 账户。我们将在下一章中介绍。一旦你有了账户，进入 **文件 | 选项**，选择 **账户**
    标签，然后点击 **登录**：
- en: '![](img/Image73613.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Image73613.png)'
- en: 'Figure 1.9: Setting up GitHub Desktop'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.9：设置 GitHub Desktop
- en: Summary
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter you saw an introduction to the book, listing what is in each
    chapter. You also saw a quick history of version control and of Git itself.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了本书的概述，列出了每一章的内容。你还看到了版本控制及 Git 本身的简短历史。
- en: 'Next, we took a look at downloading the environments you''ll need to follow
    along: Visual Studio 2019, GitHub Desktop, and PowerShell as your command line.
    All of these can be obtained for free.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们查看了下载你需要的环境：Visual Studio 2019、GitHub Desktop 和 PowerShell 作为你的命令行工具。所有这些都可以免费获得。
- en: Once the software was downloaded, we looked at how to set up Git, and how to
    set up the tools we'll be using.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 软件下载完毕后，我们查看了如何设置 Git，以及如何配置我们将要使用的工具。
