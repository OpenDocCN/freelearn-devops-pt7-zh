["```\n$ git clone https://github.com/JohnDoePacktOrg/nomen-nescio.git\n$ cd nomen-nescio\n$ ls -a\n.          ..         .git       .gitignore LICENSE    README.md\n```", "```\n$ git checkout -b update-readme\nSwitched to a new branch 'update-readme' $ echo \"\\nSoon a better name will be decided.\" >> README.md $ git add README.md $ git commit -m \"Updating README.md\"\n[update-readme 6829c33] Updating README.md 1 file changed, 1 insertion(+) $ git push origin update-readme Counting objects: 3, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (3/3), done.\nWriting objects: 100% (3/3), 330 bytes | 330.00 KiB/s, done.\nTotal 3 (delta 1), reused 0 (delta 0)\nremote: Resolving deltas: 100% (1/1), completed with 1 local object.\nTo https://github.com/JohnDoePacktOrg/nomen-nescio.git\n * [new branch] update-readme -> update-readme\n```", "```\n$ pip install pygithub \n```", "```\nfrom github import Github\nimport datetime\n\ng = Github(\"YOUR_PERSONAL_ACCESS_TOKEN\")\nfor repo in g.get_user().get_repos():\n  print(repo.name)\n  for pr in repo.get_pulls():\n    print(\" \" + pr.created_at.isoformat() + \" : \" + pr.title)\n```", "```\n$ docker run --rm -p 8080:8080 jenkinsci/blueocean\n```", "```\n*************************************************************\n*************************************************************\n*************************************************************\n​\nJenkins initial setup is required. An admin user has been created and a password generated.\nPlease use the following password to proceed to installation:\n​\nYOUR_PASSWORD_HERE\n​\nThis may also be found at: /Users/emanuelez/.jenkins/secrets/initialAdminPassword\n​\n*************************************************************\n*************************************************************\n*************************************************************\n```", "```\npipeline {\n  agent any\n  tools {\n    maven 'Maven 3.3.9'\n    jdk 'jdk8'\n  }\n  stages {\n    stage ('Initialize') {\n      steps {\n        sh '''\n          echo \"PATH = ${PATH}\"\n          echo \"M2_HOME = ${M2_HOME}\"\n        '''\n      }\n    }\n\n    stage ('Build') {\n      steps {\n        sh 'mvn -Dmaven.test.failure.ignore=true install' \n      }\n      post {\n        success {\n          junit 'target/surefire-reports/**/*.xml' \n        }\n      }\n    }\n  }\n}\n```"]