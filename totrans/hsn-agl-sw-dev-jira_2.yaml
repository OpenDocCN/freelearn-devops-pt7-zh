- en: Managing Work Items
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理工作项
- en: In the previous chapter, we learned about what JIRA is, how to get started with
    it, and how to create a project in JIRA. In this chapter, we're going to learn
    about managing all of the work items that we have. Let's go ahead and get started.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们了解了 JIRA 是什么，如何开始使用它，以及如何在 JIRA 中创建项目。在这一章中，我们将学习如何管理我们拥有的所有工作项。让我们开始吧。
- en: In this chapter, we'll be learning about epics, stories, bugs, and tasks, what
    each of these things are, and how we would use and create them in an Agile project.
    Then, we're going to learn about issue type attributes. We're going to talk about
    adding and removing them, and making them really customized to fit the type of
    work that we're doing in JIRA.  Then, we're going to learn about managing the
    items in our backlog, and then we're going to learn about our board (for those
    of us that do Scrum, we are going to feel very comfortable with the board), and
    how to configure it.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将学习史诗、故事、缺陷和任务，它们各自是什么，我们如何在敏捷项目中使用和创建它们。然后，我们将学习问题类型属性，讨论如何添加和移除它们，使它们真正定制化以适应我们在
    JIRA 中进行的工作。接下来，我们将学习如何管理待办事项中的条目，然后了解我们的看板（对于那些使用 Scrum 的人来说，我们会对看板非常熟悉），以及如何配置它。
- en: 'In this chapter, we will learn about the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将学习以下内容：
- en: Introduction to epics, stories, bugs, and tasks
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 史诗、故事、缺陷和任务的介绍
- en: Issue type attributes and adding and removing them
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题类型属性及其添加与移除
- en: Managing items in the backlog
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理待办事项中的条目
- en: Creating and configuring our board
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建和配置我们的看板
- en: Introduction to epics, stories, bugs, and tasks
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 史诗、故事、缺陷和任务的介绍
- en: '**Epics**, as you might imagine, are large stories. It''s important that they
    have a distinct start and end, just like any story. We want them to be able to
    be completed, which means that they are going to need some sort of end. We like
    to think of epics as something that would span multiple sprints, versus a story,
    which would really be completed within a Sprint. Epics are not groupings of work
    items, and we''ll take a look at that because that''s a common thing that people
    do in a JIRA UX. We''ll take a look at how we use components and labels to do
    this instead of epics. Epics will contain stories, bugs, and tasks, and they''re
    really a grouping of those things, which is again a large story.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**史诗**，如你所料，是较大的故事。它们需要有一个明确的开始和结束，就像任何故事一样。我们希望它们能够完成，这意味着它们必须有某种形式的结束。我们倾向于将史诗视为跨越多个
    Sprint 的工作，而故事则通常会在一个 Sprint 内完成。史诗不是工作项的集合，我们会深入探讨这一点，因为这是 JIRA 用户界面中人们常见的做法。我们将看看如何使用组件和标签来实现这一点，而不是使用史诗。史诗将包含故事、缺陷和任务，它们实际上是这些项目的集合，也就是一个大故事。'
- en: Stories are smaller than epics. Stories, bugs, and tasks are all the same level
    hierarchically; they're all things that could be prioritized against one another
    within our backlog. Stories are also known as **user stories**, and they're called
    that because the intent is that they will focus on users, we need to think about
    new functionality for whatever this is, and we need to make sure that we're continuing
    to think about the people that we're building it for. That's why they call them
    stories or user stories.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 故事比史诗要小。故事、缺陷和任务在层次结构上是同一级别的；它们都是可以在待办事项中互相优先排序的内容。故事也叫做**用户故事**，之所以这样叫，是因为它们的目标是专注于用户，我们需要考虑这项功能的新增部分，确保我们一直在思考为谁而构建它。因此，它们被称为故事或用户故事。
- en: Bugs are what we call defects, and they occur when there's a problem. In JIRA,
    something will always prioritize against a new feature, and we know that we should
    take into account either, *do we want to take the time in this Sprint to fix something,
    or do we want to create something new?* We should be prioritizing those two things
    and pitting them against one another.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Bugs 是我们称之为缺陷的东西，当出现问题时，它们就会发生。在 JIRA 中，总是会有一些问题优先于新功能，而我们知道，我们应该考虑*我们是否想花时间在这个
    Sprint 中修复某些问题，还是想创建一些新功能？*我们应该将这两者进行优先排序，并相互对比。
- en: A subtask is something we'll take a look at quickly. If we have multiple people
    working on a story or a bug and we want to assign it a more granular level of
    detail, we can use a subtask.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 子任务是我们将快速查看的内容。如果我们有多人共同处理一个故事或缺陷，且希望将其分配更细致的工作层级，我们可以使用子任务。
- en: Creating epics, stories, bugs, and tasks
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建史诗、故事、缺陷和任务
- en: To learn about epics, let's go to our projects. We created our First Project and
    Second Project in the previous chapter.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解史诗，我们可以去查看我们的项目。在上一章中，我们创建了第一个项目（First Project）和第二个项目（Second Project）。
- en: 'The following are the necessary steps to create an epic in a project:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个史诗的必要步骤如下：
- en: Click on the First Project that we created in our JIRA account.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击我们在JIRA账户中创建的第一个项目（First Project）。
- en: 'Within our project, we can see that we have the Backlog view. In this view,
    we have three stories. We can see on the side of the following panel that we have
    versions and we have epics. Click on EPICS:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们的项目中，我们可以看到有待办视图。在这个视图中，我们有三个故事。我们可以看到在下方面板的侧面，我们有版本和史诗。点击史诗（EPICS）：
- en: '![](img/00033.jpeg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00033.jpeg)'
- en: 'We can see in the previous figure that we don''t have any epics. We''ll create
    an epic and we''ll call this epic `My Test Epic`. In the summary, we can insert
    information regarding what the epic is about. Let''s go ahead and create it. We
    need a summary, which we''ll call `This is a summary`. We now have a test epic:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以看到在前面的图中，我们没有任何史诗。我们将创建一个史诗，命名为`My Test Epic`。在摘要中，我们可以插入关于该史诗的信息。让我们继续创建它。我们需要一个摘要，命名为`This
    is a summary`。现在我们有了一个测试史诗：
- en: '![](img/00034.jpeg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00034.jpeg)'
- en: 'Let''s take a look at this epic. We can see that if we look at it on the left
    here that we can expand and contract the epic. It has a JIRA ID:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下这个史诗。我们可以看到，如果我们在左侧查看它，可以展开或收起史诗。它有一个JIRA ID：
- en: '![](img/00035.jpeg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00035.jpeg)'
- en: 'We can select the color that we want to use for it and we can edit the name,
    the epic details, and mark it as done:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以选择想要使用的颜色，并且可以编辑名称、史诗细节，并将其标记为完成：
- en: '![](img/00036.jpeg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00036.jpeg)'
- en: More importantly, underneath the epic, we can see how many issues or stories,
    bugs, or tasks are contained underneath this epic. We can also see how many are
    completed, unestimated, and how many are estimated. At the bottom, we can see
    a status bar.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 更重要的是，在史诗下面，我们可以看到有多少个问题、故事、错误或任务包含在这个史诗下。我们还可以看到有多少个已完成、未估算和已估算。在底部，我们可以看到一个状态栏。
- en: We will create our backlog items and then *drag* those into our epic, and that's
    how we assign them to the epic. This epic is a story, it's a big story, but it's
    something that can be started and finished. It's important that this is not just
    a grouping, as that's not the intent of an epic.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建我们的待办事项，然后将它们*拖动*到史诗中，这样我们就将它们分配给了史诗。这个史诗是一个故事，是一个大故事，但它是可以开始并完成的。重要的是，这不仅仅是一个分组，因为史诗的目的不是这样。
- en: 'If we want to group items in JIRA, that''s a slightly different thing, and
    for that  what we can do is we can use components to do that:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想在JIRA中对项目进行分组，那是稍有不同的事情，对于这个需求，我们可以使用组件来实现：
- en: Select Components from the options on the left-hand side.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧的选项中选择组件（Components）。
- en: 'We''ll create one component because we don''t have one. Let''s call this `My
    Test Component`, and, so we don''t get an error again, we will use the same value
    that''s in the description. We can select a Component lead, and also a Default
    assignee, who will basically be the same person that is assigned to the project
    by default:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将创建一个组件，因为我们还没有。我们将其命名为`My Test Component`，为了避免再次出错，我们将使用描述中相同的值。我们可以选择一个组件负责人，并且选择一个默认分配人，这个人基本上就是默认分配给该项目的人：
- en: '![](img/00037.jpeg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00037.jpeg)'
- en: We can use the component that we've created in order to group items together.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用我们创建的组件将项目进行分组。
- en: Let's have a look at how to create a story.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下如何创建一个故事。
- en: We can see that we have three stories. We'll go ahead and create a new one.
    We'll call this `The newest story`.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到我们有三个故事。我们将继续创建一个新的，命名为`The newest story`。
- en: 'We can see that when we''re actually creating the stories that we have the
    option to create a story, a task, or a bug, and that they''re all ranked the same
    hierarchically within JIRA:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，在实际创建故事时，我们有创建故事、任务或错误的选项，并且它们在JIRA中具有相同的层级排名：
- en: A story generally represents a piece of new functionality, a task is just something
    that needs to be done, and a bug is something that's broken that needs to be fixed.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 一个故事通常代表一项新功能，任务只是需要完成的事情，而错误是需要修复的损坏问题。
- en: '![](img/00038.jpeg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00038.jpeg)'
- en: 'We''ll create a new story, create the newest task, and then we''ll create the
    newest bug, and that way we have all three. We can take a look at them in the
    following screenshot:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个新的故事，创建最新的任务，然后创建最新的错误，这样我们就有了所有三者。我们可以在下面的截图中查看它们：
- en: '![](img/00039.jpeg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00039.jpeg)'
- en: Backlog view
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 待办事项视图
- en: When we select one of these items, a preview pane on the right-side will show
    us details about it.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们选择这些工作项时，右侧的预览窗格将显示其详细信息。
- en: The other thing that we will look into is that when we select an item in this
    Backlog view, we can actually hit the *E* key on our keyboard, and it will prompt
    an edit. This is just a nice little shortcut. Another thing to note is that if
    we select an item and it's unassigned, we can actually hit the *A* button on our
    keyboard and it will prompt us to assign an item.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要查看的另一件事是，当我们在待办事项视图中选择一个项目时，实际上可以按键盘上的*E*键，它将提示我们进行编辑。这是一个很好的快捷方式。另一个需要注意的点是，如果我们选择了一个未分配的项目，我们实际上可以按键盘上的*A*键，它会提示我们将该项目分配给某人。
- en: 'The last thing we''ll look at in this particular section is how we create a
    subtask. If we''ve got our newest story on the preview pane, we can see that we''ve
    got the ability to add an attachment, an ability to link an item, to link to multiple
    items together and create dependencies, and then we have this creative subtask
    option:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论的最后一件事是如何创建子任务。如果我们在预览窗格中查看到我们最新的故事，我们可以看到我们有能力添加附件、链接工作项、将多个工作项链接在一起并创建依赖关系，然后我们有这个创建子任务的选项：
- en: '![](img/00040.jpeg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00040.jpeg)'
- en: 'Again, we might use the subtask if this story is going to need to be worked
    on by multiple people and if we really want to have more granularity around what
    each person''s going to do. We can click Create subtask, and as we can see in
    the following screenshot, in the bottom right corner there''s a prompt. We can
    say `This is my subtask`, and we can create it:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，我们可能会使用子任务，如果这个故事需要由多个人来处理，并且我们真的希望更具体地了解每个人将要做什么。我们可以点击“创建子任务”，正如我们在下面的截图中看到的，在右下角会有一个提示。我们可以说`这是我的子任务`，然后创建它：
- en: '![](img/00041.jpeg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00041.jpeg)'
- en: Create Subtask
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 创建子任务
- en: Subtasks allow us to use multiple different items of work that exist underneath
    a story.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 子任务允许我们使用多个不同的工作项，这些工作项存在于一个故事之下。
- en: In this section, we learned about epics, stories, bugs, and tasks. In the next
    section, we're going to talk about issue type attributes. We're going to look
    at each of the different attributes that are available underneath the different
    issue types in more detail, and then we're going to talk about adding and removing
    them so that they fit our work better.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们学习了史诗、故事、缺陷和任务。在下一节中，我们将讨论问题类型的属性。我们将详细查看每个问题类型下可用的不同属性，然后讨论如何添加和删除这些属性，以便更好地适应我们的工作。
- en: Issue type attributes and adding and removing them
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题类型属性及其添加和删除
- en: In this section, we're going to cover issue type attributes, how to add them,
    and how to remove them.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论问题类型的属性、如何添加它们以及如何删除它们。
- en: First, we're going to learn what the different kinds of attributes are that
    can be assigned to stories, tasks, and bugs. Then, we're going to talk more about
    how we can customize them  and adjust the screen so that we can only see the ones
    that we want to see.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将学习可以分配给故事、任务和缺陷的不同属性类型。然后，我们将讨论如何自定义这些属性，并调整屏幕显示，以便只显示我们想看到的内容。
- en: The different type of work item attributes (stories, bugs, and tasks) are all
    JIRA work items.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 不同类型的工作项属性（故事、缺陷和任务）都是JIRA工作项。
- en: 'The following are the attributes that are available to us:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们可以使用的属性：
- en: 'Assignee: This is the person that is assigned to use that item.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 受指派人：这是被分配来使用该工作项的人。
- en: 'Attachments: These are anything that need to be attached to that item to provide
    more clarity or show that it''s been done.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 附件：这些是需要附加到该工作项上以提供更多说明或展示已完成的内容。
- en: 'Comments: To add our views.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 评论：添加我们的观点。
- en: 'Component/s: These are groupings, and are used to group items together.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组件/组：这些是分组，用于将项目聚集在一起。
- en: 'Description: This is an epic link.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述：这是一个史诗链接。
- en: 'Epic link: We talked about how epics are effectively a large story in the last
    section. We would use this if we were looking at the story that the epic is associated
    with.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 史诗链接：我们在上一节中讨论了史诗实际上是一个大型故事。如果我们查看与史诗相关联的故事时，我们会使用这个。
- en: 'Fixed version/s: This is a large group of functionality that is released at
    once. If the story, bug, or task is part of a version, it would be there.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 固定版本/版本：这是一次性发布的一大组功能。如果故事、缺陷或任务属于某个版本，那么它会出现在这里。
- en: 'Issue type: This is a story, bug, or task.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题类型：这是一个故事、缺陷或任务。
- en: 'Labels: These are like components but are a way to group items across projects.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标签（Labels）：这些类似于组件，但它们是跨项目分组的方式。
- en: 'Linked issues: This is a way in which we can create a dependency between different
    issues if something depends on something else, or if it''s blocked by something
    else.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 链接问题（Linked issues）：这是我们可以在不同问题之间创建依赖关系的方式，如果某个问题依赖于其他问题，或者被其他问题阻塞。
- en: 'Priority: This is slightly obvious. We can choose from high, medium, or low
    priority, and we''ll use different priority statuses in JIRA.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优先级（Priority）：这有点显而易见。我们可以选择高、中、低优先级，并且我们将在 JIRA 中使用不同的优先级状态。
- en: 'Sprint: Is the work item contained within a Sprint, and if so, which Sprint?'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sprint：该工作项是否包含在一个 Sprint 中，如果是，属于哪个 Sprint？
- en: 'Let''s take a look at JIRA and some of these work item attributes:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下 JIRA 和一些工作项属性：
- en: 'We''ve got the newest story that we created earlier. We''ll press the *E* key
    on our keyboard, or we can use the three ellipses in the top-right-hand corner
    to go into edit mode:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们有之前创建的最新故事。我们按下键盘上的 *E* 键，或者可以使用右上角的三个省略号进入编辑模式：
- en: '![](img/00042.jpeg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00042.jpeg)'
- en: 'We''re looking at issue FP1-29\. This is our newest story. We can see in the
    following screenshot that as we move down the screen, we''ve got the ability to
    change the issue type from Story to Task, Bug, or Epic:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们正在查看问题 FP1-29。 这是我们最新的故事。我们可以看到以下截图，在我们向下滚动屏幕时，我们有能力将问题类型从故事（Story）更改为任务（Task）、缺陷（Bug）或史诗（Epic）：
- en: '![](img/00043.jpeg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00043.jpeg)'
- en: Issue type attributes and adding and removing them
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 问题类型属性及其添加和移除
- en: 'In the last section, we created a component that we might remember. We can
    actually look for that component here. If we want to use this, we''ve got `My
    test component`, which allows us to group these items together:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个部分中，我们创建了一个我们可能会记得的组件。我们实际上可以在这里查找该组件。如果我们想使用这个，我们有了 `My test component`，它允许我们将这些项分组在一起：
- en: '![](img/00044.jpeg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00044.jpeg)'
- en: Grouping of items
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 项目的分组
- en: 'The description has a rich text editor, which is nice. We''ve got Fix Version/s,
    which basically allows us to determine which release this is going to be in. A
    version is something that we eventually release. We also have a Priority here,
    and we have already talked about the priority being High, Medium, Low, and more.
    Labels, which are groupings across projects, are something we can actually look
    for just by selecting them, and we can also create new ones. If we use `cross-project-label`,
    we can see that we have one, we can go ahead and assign that label. We can use Attachments by
    dragging and dropping them, or we can browse. In Linked Issues, we can link the
    issue to another issue. There''s a variety of ways we can link to things, either
    by using blocks, is blocked by, clones, is cloned by, duplicates, and more. Then,
    we can type in the issue here, and we can actually perform a search in real time.
    We can assign this issue to someone else or to ourself. We can assign the epic,
    and we can assign what sprint it should appear in, and we can also actually assign
    epics and sprints by dragging and dropping them:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 描述区域有一个富文本编辑器，这很不错。我们有 Fix Version/s，它基本上让我们决定这个版本将会在哪个版本中发布。版本是我们最终会发布的东西。这里我们还有一个优先级（Priority），我们之前已经讨论过优先级分为高（High）、中（Medium）、低（Low）等。标签（Labels）是跨项目的分组，我们实际上可以通过选择它们来查找，也可以创建新的标签。如果我们使用 `cross-project-label`，我们可以看到我们已经有一个标签，并且可以继续为其分配标签。我们可以通过拖拽或浏览的方式使用附件（Attachments）。在链接的问题（Linked
    Issues）中，我们可以将一个问题与另一个问题链接。我们有多种方式可以链接问题，比如使用 blocks（阻塞）、is blocked by（被阻塞）、clones（克隆）、is
    cloned by（被克隆）、duplicates（重复）等。然后，我们可以在这里输入问题，并且可以实时搜索。我们可以将问题分配给其他人或自己。我们还可以分配史诗（epic），并且可以分配它应该出现的
    Sprint，我们还可以通过拖拽的方式分配史诗和 Sprint：
- en: '![](img/00045.jpeg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00045.jpeg)'
- en: Then, we've got our rich text editor (again for comments) so that we can see
    the different fields that we have available to us. The other thing that we should
    note here is the Configure fields option in the upper right corner. Sometimes,
    we're not going to use a lot of these fields and we might use them all, but there's
    a chance we're not going to be using some of them.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们有了我们的富文本编辑器（再次用于评论），这样我们就可以看到可用的不同字段。这里还需要注意的是右上角的 Configure fields 选项。有时候，我们不会使用很多这些字段，可能会用到全部，但也有可能我们不会使用其中的一些。
- en: 'If we select the Configure fields option, we can see that we have the ability
    to turn them all on and off, and we can even select the Custom field and uncheck
    the Comment field. When we save these changes, we''ll see that this is the case
    for the items that we make go forward when we view them:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们选择“配置字段”选项，我们可以看到我们有能力开启或关闭所有字段，甚至可以选择自定义字段并取消勾选评论字段。当我们保存这些更改时，我们会看到这个设置会影响我们在查看这些项目时所做的更改：
- en: '![](img/00046.jpeg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00046.jpeg)'
- en: Configure fields
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 配置字段
- en: 'Let''s take a look at this preview pane in a little more detail; let''s take
    a look at each of the items. We''ve got the ability to watch or unwatch an item:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们更详细地看看这个预览窗格；让我们看看每个项目。我们可以选择观察或取消观察一个项目：
- en: '![](img/00047.jpeg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00047.jpeg)'
- en: Preview pane
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 预览窗格
- en: This is helpful if we have multiple people on our project and we want someone
    to be notified if the status of this item changes. We can see that we're a watcher
    on this item, and this is really because it's assigned to us and we've reported
    it as well. We can see that it's actually unassigned, but it's been reported by
    us. That automatically makes us a watcher. If we remember our notifications workflow
    from the previous section that we went through, we've got our label that we created,
    we've got a status on this to-do in progress, and more, such as the ability to
    link an item, attachment, and subtasks. We can also perform a story point assignment,
    where we can look at the components, priorities, and reporters. We can also show
    more or less items. We can see that this actually contains time-tracking and things
    like subtask comments.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这在我们项目中有多人参与时非常有用，如果我们希望有人在该项目的状态发生变化时接到通知。我们可以看到我们是该项目的观察者，这实际上是因为它被分配给了我们，并且我们也报告了它。我们可以看到它实际上没有被分配，但已由我们报告。这自动使我们成为观察者。如果我们记得在上一节中讨论的通知工作流，我们已经创建了标签，已经为这个待办事项设置了进行中的状态，还有更多功能，例如能够链接项目、附件和子任务。我们还可以进行故事点分配，在这里我们可以查看组件、优先级和报告者。我们还可以显示更多或更少的项目。我们可以看到它实际上包含时间跟踪以及诸如子任务评论之类的内容。
- en: We get a lot of this through the preview pane, which is really convenient as
    we don't actually have to end up leaving the screen to do a lot of modifications.
    Some of these fields will not be editable once we pull them into a Sprint; once
    this story enters a Sprint, we're not going to be able to change some of these
    values. We'll take a look at this when we create a Sprint later.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过预览窗格可以轻松完成很多操作，这非常方便，因为我们实际上不需要离开屏幕来进行很多修改。一旦我们将这些项目拉入一个冲刺，这些字段中的一些将无法编辑；一旦这个故事进入冲刺，我们就无法更改其中的一些值。我们稍后会在创建冲刺时看看这个。
- en: In the next section, we're going to talk about managing those items in the backlog.
    We've got these items and we've assigned all of these attributes, so we're going
    to need to be able to manage them, prioritize them, and more.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将讨论如何管理待办事项中的这些项目。我们已经有了这些项目并分配了所有这些属性，因此我们需要能够管理它们、优先排序它们等等。
- en: Managing items in the backlog
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理待办事项中的项目
- en: In this section, we're going to learn about managing the items in our backlog.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一节中，我们将学习如何管理待办事项中的项目。
- en: 'Here, we will learn about the following:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将学习以下内容：
- en: How to create items
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何创建项目
- en: How to prioritize items
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何优先排序项目
- en: How to assign items into epics and versions
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何将项目分配到史诗和版本中
- en: How to create and use quick filters in our board view
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在看板视图中创建和使用快速筛选器
- en: Separating work that's fully refined and ready for a Sprint
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将完全细化并准备好进入冲刺的工作分开
- en: Let's go back to our backlog. We can see that we've got our items. It's really
    easy to prioritize these items in JIRA. All we have to do is basically drag and
    drop them. This means that we can move these items around in any way we want to,
    and that makes it really easy for our product owners to just move all this stuff
    around exactly how they want.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到我们的待办事项列表。我们可以看到我们已经有了这些项目。在 JIRA 中对这些项目进行优先级排序非常简单。我们所要做的基本上就是拖放它们。这意味着我们可以以任何方式移动这些项目，这让我们的产品负责人可以轻松地将所有这些东西按他们想要的方式进行调整。
- en: 'We made an epic previously, and as we can see in the following screenshot,
    we''ve got My Test Epic. We want to assign some items to this, maybe all of the
    newest items, which is fine. Let''s take the first story (that is, The newest
    story), drag it over to our epic, and once we do that we''ll get a message. We
    can also see that we have an issue assigning this on our epic:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前创建了一个史诗，正如我们在下面的截图中看到的那样，我们有“我的测试史诗”。我们希望将一些项目分配给它，可能是所有最新的项目，这样也可以。让我们取第一个故事（即最新的故事），将它拖到我们的史诗中，一旦我们这样做，就会收到一个提示信息。我们还可以看到，在我们的史诗中，分配该项存在问题：
- en: '![](img/00048.jpeg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00048.jpeg)'
- en: 'Let''s go ahead and take the bug and the task. We can move these items over
    as well so that we have three items in our epic. We selected multiple items by
    just holding down the *Shift* key:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续进行任务和 bug 的处理。我们还可以将这些项移动过来，以便在我们的史诗中有三个项目。我们只需按住*Shift*键，就能选择多个项目：
- en: '![](img/00049.jpeg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00049.jpeg)'
- en: Adding items to Epic
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 向史诗添加项目
- en: 'Next, we''ve got what''s called versions, and we can see here that this would
    be an increment of value that we would release to either our customers, to our
    market, or to something similar. In most cases, we''ll use versions as a way to
    track the amount of work that''s been completed in a month, in a week, or in a
    Sprint. So, here, we can go back and report on that:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们来看一下所谓的版本，我们可以看到，这将是我们发布给客户、市场或类似目标的增值部分。在大多数情况下，我们使用版本来跟踪一个月、一周或一个 Sprint
    中已完成的工作量。所以，在这里，我们可以回顾并报告这一点：
- en: '![](img/00050.jpeg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00050.jpeg)'
- en: Managing items in the backlog
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 管理待办事项中的项目
- en: 'A version is a little bit different from an epic. We may have multiple epics
    inside a version, or we may just have one epic inside a version. We can see that
    in the preceding screenshot we have links to issues without versions, and issues
    without epics. These two may be related, but they''re also not necessarily hierarchically
    connected. A version is a way for us to group work together and, as we can see,
    if we take a look at Releases, ultimately a version is something that we''re going
    to release. As we can see in the following screenshot, we have version 2 and 3,
    which have been unreleased:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 版本与史诗稍有不同。一个版本中可能包含多个史诗，或者也可能只有一个史诗。我们可以看到，在前面的截图中，有一些问题没有版本关联，也有一些问题没有史诗关联。这两者可能是相关的，但也不一定是层级连接的。版本是我们将工作进行分组的一种方式，正如我们看到的那样，如果我们查看发布内容，最终版本就是我们要发布的内容。我们可以看到，在接下来的截图中，版本
    2 和版本 3 都是未发布的：
- en: '![](img/00051.jpeg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00051.jpeg)'
- en: Releases
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 发布
- en: 'We can select these items and we can take a look at the items that appear underneath
    them. All default items that were in JIRA when we created this project are as
    follows:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以选择这些项，然后查看它们下方显示的项目。以下是我们在创建项目时，JIRA 中默认的所有项目项：
- en: '![](img/00052.jpeg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00052.jpeg)'
- en: Releases version
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 发布版本
- en: We can see that this gives we a nice view of things that are in the version,
    how much has been done, and how much is in progress. Once this is complete, we
    can hit the Release button, and we can actually release this version. That's what
    makes this version so powerful.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，这为我们提供了一个清晰的视图，展示了版本中包含的内容，已经完成的工作量以及进行中的工作量。一旦完成，我们可以点击“发布”按钮，实际上就能发布该版本。这就是这个版本强大的地方。
- en: 'Going back to our backlog again, we can see that it''s fairly easy to take
    the items and assign them to a version as well, and we can see that we''ve got
    some visual confirmation that these are in an epic. If we drag them over and put
    them inside a version, we''re going to get that, too. We can see that this is
    contained inside version 2, and we can take the other two versions and do the
    same thing. The stories are in version 2, and they''re also part of this epic:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 回到我们的待办事项中，我们可以看到，将项目分配到版本中是相当容易的，我们还可以看到这些项目在史诗中有一些可视化的确认。如果我们将它们拖动并放入版本中，我们也能看到这一点。我们可以看到，这些项目被包含在版本
    2 中，我们可以对另外两个版本执行相同操作。这些故事在版本 2 中，它们也是这个史诗的一部分：
- en: '![](img/00053.jpeg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00053.jpeg)'
- en: Backlog view
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 待办事项视图
- en: 'Next, we want to take a look at Quick filters. These can be really powerful,
    especially if we''re working together as a group with our team, and we''ve got
    to be looking at this backlog and moving quickly through. JIRA gives us some default
    quick filters. They only give us issues and items that have recently been updated.
    They also give us Assignee, which is also helpful, but let''s say we want to take
    a look at anything that would be part of the component that we assigned earlier:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们要查看的是“快速筛选”。这些筛选器非常强大，尤其是当我们与团队一起合作时，需要快速查看并浏览待办事项清单。JIRA提供了一些默认的快速筛选器。它们只会显示最近更新的问题和条目。它们还提供了“分配人”，这也很有帮助，但假设我们想查看任何已经分配到先前提到的组件中的条目：
- en: '![](img/00054.jpeg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00054.jpeg)'
- en: We had this component that was a grouping of items that we put together, which
    was called My Test Component. Why don't we go back to our Backlog? We're going
    to go to the top corner of the screen and select Board settings. We'll take a
    look at a lot of these board settings later in the next section.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一个组件，它是由一些项目组合而成，叫做“我的测试组件”。为什么我们不回到待办事项清单呢？我们将转到屏幕的右上角，选择看板设置。我们将在下一节中详细查看许多看板设置。
- en: 'We''re going to go under Quick Filters and call this `Test Component`. In our
    query for this, our JQL is going to be `component= "My Test Component"`. We can
    also put a description if we want to. Next, we''ll hit the Add button, and we''ll
    have created a quick filter called `Test Component`:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将进入“快速筛选”并命名为`Test Component`。在我们的查询中，JQL将是`component= "My Test Component"`。如果需要，我们还可以添加描述。接下来，我们点击“添加”按钮，这样就创建了一个名为`Test
    Component`的快速筛选：
- en: '![](img/00055.jpeg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00055.jpeg)'
- en: 'If we come back to the Backlog again, we can see that we have a Test Component
    query. If we select this, only the items that have components assigned to them
    should appear. We assigned that component as My Test Component earlier to the
    newest story when we were in the Edit window for that story:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们再次回到待办事项清单，我们可以看到我们有一个“测试组件”查询。如果我们选择它，只有那些已经分配了组件的条目会出现。我们之前已经将“我的测试组件”分配给了最新的故事，当时我们在编辑该故事的窗口中：
- en: '![](img/00056.jpeg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00056.jpeg)'
- en: 'The next thing we want to take a look at is the creation of a ready Sprint.
    Click on Clear all filters so that we can see all of our items. We can see the
    Create sprint button, where we can create a Sprint. We''re not going to run it,
    but we can create a Sprint, and we can basically use that as a container to help
    us when we have work in our backlog that''s ready to go. We call that refined.
    We''ve got work here that''s refined, which means that it meets our definition
    of ready for the team that''s coming into a Sprint. This means that will have
    acceptance criteria, it will be sized with some sort of a value, and it will have
    all the information required for us to to fix or build something:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们要查看的是创建一个准备好的迭代周期。点击“清除所有筛选器”，这样我们就可以看到所有条目。我们可以看到“创建迭代周期”按钮，在这里我们可以创建一个迭代周期。我们不会马上运行它，但可以创建一个迭代周期，基本上将其作为一个容器，帮助我们在待办事项清单中的工作准备好时使用。我们将其称为精炼的工作。我们这里的工作已经被精炼过，这意味着它符合即将进入迭代周期的团队的准备定义。这意味着它将有验收标准，大小已经被估算，并且会有所有修复或构建所需的信息：
- en: '![](img/00057.jpeg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00057.jpeg)'
- en: 'We can take the three newest items, as shown in the following screenshot, and
    we can drag them straight up and place them into a Sprint. We can call this Sprint
    `Ready`:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以取出下面截图中显示的三个最新条目，然后直接将它们拖到迭代周期中。我们可以将这个迭代周期命名为`Ready`：
- en: '![](img/00058.jpeg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00058.jpeg)'
- en: Then, what we can do is we can use that fully refined work, not only in our
    next Sprint, but as the team increases in velocity, to actually pull stories from
    this section into our Sprint so that the team has work as they accelerate. We'll
    look more at that as we get into running a Sprint.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以做的是，利用这些完全精炼的工作，不仅在下一个迭代周期中使用，而且随着团队速度的提高，实际从这一部分拉取故事到我们的迭代周期中，这样团队在加速时就有了工作。我们将在运行迭代周期时更详细地讨论这一点。
- en: In the next section, we're going to talk about treating and configuring the
    board. We've got our backlog ready to go, we've got issues that have been created,
    and they've been assigned to epics and versions. We know what all the attributes
    are underneath those things.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将讨论如何处理和配置看板。我们的待办事项清单已经准备好了，已经创建了问题，并且这些问题已经分配到了史诗和版本中。我们知道这些内容下的所有属性是什么。
- en: Next, we're going to take a look at the board, which is what we're going to
    use when we're running a Sprint, which means that we're preparing to run our first
    Sprint.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将查看看板，它是我们在运行冲刺时将使用的工具，也就是说，我们正在准备运行我们的第一次冲刺。
- en: Creating and configuring our board
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建和配置我们的看板
- en: In this section we're going to talk about creating and configuring our board.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论如何创建和配置我们的看板。
- en: 'In this section we''re going to talk about the following:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论以下内容：
- en: Differences between a virtual scrum board and an actual scrum board
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟 Scrum 看板和实际 Scrum 看板的区别
- en: The columns that represent workflow states and how to modify a workflow
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代表工作流状态的列以及如何修改工作流
- en: Swimlanes
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 游泳池线
- en: Estimation options–time versus story points
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 估算选项——时间与故事点
- en: 'Let''s go ahead and go over to JIRA. We can see what we''ve done here is we''ve
    actually taken our items that were not in our Ready Sprint. They have not been
    refined, and we have taken them and pulled them into a Sprint 0, which is a test
    Sprint. This will eventually be the Sprint that we''ll put on our Sprint board,
    but in the meantime, we have to get our board ready. We can see that what we''ve
    done here is we''ve actually assigned story point values to each of these stories.
    We will be able to see them in the screenshot in gray, and we can also see them
    in the preview pane as well:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们去看看 JIRA。我们可以看到，我们实际上已经把那些不在我们 Ready Sprint 中的事项拿出来了。它们尚未经过完善，我们把它们拉入了 Sprint
    0，这是一个测试冲刺。最终，这将成为我们放置在冲刺看板上的 Sprint，但在此期间，我们需要准备好我们的看板。我们可以看到，我们已经为每个故事分配了故事点值。我们将在截图中看到这些值，它们是灰色的，我们也可以在预览窗格中看到它们：
- en: '![](img/00059.jpeg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00059.jpeg)'
- en: Backlog view
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 待办事项视图
- en: The following screenshot represents our Active sprints, and this is eventually
    going to be our board. If we hit Start sprint, these items will appear on this
    active Sprint board, but let's just take a look at this board before we start
    a Sprint.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图代表我们的活跃冲刺，最终这将成为我们的看板。如果我们点击开始冲刺，这些事项将出现在活跃冲刺看板上，但让我们在开始冲刺前先看看这个看板。
- en: 'A physical Scrum board would be a white board with columns on it. Each one
    of those columns would represent the different steps in our workflow:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 物理 Scrum 看板通常是一个白板，上面有多个列。每一列代表我们工作流程中的不同步骤：
- en: '![](img/00060.jpeg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00060.jpeg)'
- en: And we can see, in its simplest form, we've got things that need to be done,
    we've got things that are in progress, and we've got things that have been completed.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，在最简单的形式下，我们有需要完成的任务、正在进行的任务以及已完成的任务。
- en: Our Quick filters are also available for us. We can see that we have the ability
    to take a look at this, and a lot of times what we want to do is actually set
    up all of the different team members that are going to be working on stories in
    this Sprint and put them across the top. Then, as we're going through a daily
    Scrum, we can actually click on each name and look at just the items for that
    person and try and figure out if there are any impediments. This is the role of
    the Scrum master as we move through a Scrum Sprint.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的快速筛选器也可以供我们使用。我们可以看到我们有能力查看这些信息，很多时候我们想要做的其实是设置所有将要参与本次冲刺故事的团队成员，并把他们放在顶部。然后，在我们进行每日
    Scrum 时，我们实际上可以点击每个名字，只查看该人员的事项，并尝试找出是否存在任何障碍。这就是 Scrum Master 在 Scrum 冲刺中扮演的角色。
- en: 'Therefore, we need to add a testing step in the workflow so that things should
    be in TO DO, and then they''ll be DONE, IN PROGRESS. Once they''ve been worked
    on, they need to be tested before they''re considered done, and that way we can
    maintain a high level of quality. We have lots of testers in our Scrum team, and
    this is going to work out just fine because we can actually move a card into that
    testing column and we can have one of the testers help us with testing that. If
    we move into the upper right corner here, we will see three ellipses (…). Let''s
    go into Board settings and take a look at this. We were in here previously, setting
    up a quick filter for our Test Component. Look under General settings for our
    board, as shown in the following screenshot:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们需要在工作流中添加一个测试步骤，这样任务应该先进入TO DO，然后是DONE，IN PROGRESS。一旦它们被处理过，就需要进行测试，然后才能算完成，这样我们就能保持高质量。我们在Scrum团队中有很多测试人员，这样做完全没问题，因为我们实际上可以将一个卡片移到测试列中，让我们的测试人员帮助我们进行测试。如果我们移动到右上角，我们会看到三个省略号（…）。让我们进入看板设置，查看一下这个。在这里我们之前设置了一个用于Test
    Component的快速筛选。查看如下截图中看板的常规设置：
- en: '![](img/00061.jpeg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00061.jpeg)'
- en: We can see that we have things like our Board name, which we can change regarding
    whether it appears here, the Administrators, and the location. We can actually
    create queries and generate boards from our queries, but we're just using the
    JIRA default for this project. We can see that in the preceding screenshot, we
    have the project, we have the query, and we can see that we've actually got multiple
    projects that we can put into a board as well, but we're going to leave these
    settings as they are.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到像看板名称这样的内容，我们可以根据是否在此显示来进行更改，管理员，以及位置。我们实际上可以创建查询并从查询生成看板，但我们在此项目中只是使用JIRA的默认设置。我们可以看到在前面的截图中，我们有项目，有查询，并且我们可以看到我们实际上可以将多个项目放入一个看板中，但我们将保持这些设置不变。
- en: 'Next, we''ll take a look at Columns:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们来看看列：
- en: '![](img/00062.jpeg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00062.jpeg)'
- en: Settings for FP board
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: FP看板设置
- en: 'This is the thing that we wanted to modify. We want to add a testing step in
    my workflow. In order to add a new column, we''ll need another status, all right?
    We''ve created this TESTING status in my workflow, as we can see in the preceding
    screenshot, and the way we add another status to this is by going to the Workflow.
    Remember the workflow from a previous section that we did? We can take a look
    at these workflows by selecting the edit icon:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们想要修改的内容。我们希望在我的工作流中添加一个测试步骤。为了添加一个新列，我们需要一个新的状态，好吗？我们在我的工作流中创建了这个TESTING状态，如前面的截图所示，添加另一个状态的方法是进入工作流。记得之前我们做的工作流吗？我们可以通过选择编辑图标来查看这些工作流：
- en: '![](img/00063.jpeg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00063.jpeg)'
- en: Issues
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: Issues
- en: 'We can see here that what we''ve done is we''ve actually created a TESTING
    step. Any step can transition into this step. Basically, we''ve got this TESTING
    step, and we are allowing all statuses to transition to this one; we have this
    in my workflow. Let''s go ahead and go back to our project. We''re going to go
    back into Issues, go to Settings, go to Projects, and we''re going go back to
    our First Project. We should be at the board for our First Project. We''ve created
    that step in the workflow. If we go back into our Board settings, in the columns,
    we can add a column and we can say that we want to call this column `Testing`.
    We can see that this column won''t show on the board without a status, but that''s
    okay because we created that status in the workflow. We can move that status into
    the column we just created:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，在这里我们实际上创建了一个TESTING步骤。任何步骤都可以过渡到这个步骤。基本上，我们有这个TESTING步骤，并且我们允许所有状态过渡到这个步骤；我们在我的工作流中设置了这个。现在让我们回到项目中。我们将返回到Issues，进入设置，进入项目，然后返回到我们的第一个项目。我们应该回到第一个项目的看板。我们已经在工作流中创建了这个步骤。如果我们返回到看板设置中的列，我们可以添加一个列，并且我们可以说我们要将这个列命名为`Testing`。我们可以看到这个列在没有状态的情况下不会显示在看板上，但没关系，因为我们在工作流中创建了这个状态。我们可以将这个状态移到我们刚刚创建的列中：
- en: '![](img/00064.jpeg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00064.jpeg)'
- en: Column management
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 列管理
- en: We have the To Do, In Progress, Testing, and Done columns. If we go back to
    the board, we'll see that we have a TESTING column.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有To Do、In Progress、Testing和Done列。如果我们返回到看板上，我们会看到有一个TESTING列。
- en: Next, we can take a look at Swimlanes.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们可以看看Swimlanes。
- en: 'Swimlanes actually cut across a board, and we can use them in a variety of
    different ways. JIRA gives us some options to do that:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: Swimlanes实际上是横跨整个看板的，我们可以以多种方式使用它们。JIRA提供了几种选项：
- en: '![](img/00065.jpeg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00065.jpeg)'
- en: Swimlanes
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: Swimlanes
- en: In most cases, what we might do is for Assignees, Epics, or Stories, if we've
    got stories with subtasks underneath them then our subtask will be what is shown
    on the board, and we can expand and collapse the stories in Swimlanes. We'll leave
    it at Stories for now.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，我们可能会做的是针对指派人、史诗或故事，如果我们有带子任务的故事，那么我们的子任务将显示在看板上，并且我们可以在Swimlanes中展开和折叠这些故事。我们现在暂时将其保留为故事。
- en: 'We''ve already talked about Quick filters. We''ve got some capabilities to
    modify Card colors based on the options shown in the following screenshot:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经讨论过快速过滤器。我们有一些功能，可以根据以下截图中显示的选项来修改卡片颜色：
- en: '![](img/00066.jpeg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00066.jpeg)'
- en: Card colors
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 卡片颜色
- en: 'In other words, if we''ve got a high-priority card, because the priority is
    set to high/critical, we can have it change color. We can also change the items
    that appear on our card, and we can show three additional fields. This allows
    us to pick what those three additional fields might be, but for now we''ll leave
    them as their default settings:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，如果我们有一个高优先级的卡片，因为优先级设置为高/关键，我们可以让它改变颜色。我们还可以更改卡片上显示的项目，并且可以显示三个额外的字段。这让我们可以选择这三个额外字段是什么，但现在我们将它们保留为默认设置：
- en: '![](img/00067.jpeg)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00067.jpeg)'
- en: Card layout
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 卡片布局
- en: 'Then, we''ve got Estimation. What we do with Scrum is we measure my velocity
    in story points. We don''t really use time, as we found that relative estimation
    is much more effective than time estimation. However, lots of teams still use
    time to perform estimations:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们有了估算。使用Scrum时，我们通过故事点来衡量我的速度。我们并不真正使用时间，因为我们发现相对估算比时间估算更有效。然而，很多团队仍然使用时间来进行估算：
- en: '![](img/00068.jpeg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00068.jpeg)'
- en: Estimation
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 估算
- en: 'If we do use time and we''re burning down hours, this would be where we would
    want to make that change. We would want a Remaining Estimate and Time Spent, we''d
    select the item, and then we can perform our estimation on the original time estimate.
    Finally, Working Days, as we might imagine, is really about setting the working
    days for the group that''s going to be using this board:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们使用时间并且正在消耗小时数，那么这里就是我们想要进行更改的地方。我们需要选择剩余估算时间和已用时间，然后进行原始时间估算的调整。最后，工作日，如我们所想，实际上是为使用此看板的小组设置工作日：
- en: '![](img/00069.jpeg)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00069.jpeg)'
- en: Time Zone
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 时区
- en: We've configured all of this, we've got our board ready to go, and we've got
    our Sprints with items in them. We think we're probably about ready to start a
    Sprint, and that's what's going to happen in the next chapter.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经配置好了所有这些，准备好了我们的看板，并且我们的Sprint中有项目。我们认为我们可能已经准备好开始一个Sprint了，接下来的一章就是关于这个的。
- en: Summary
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Let's talk about what we learned. We talked about what epics, stories, bugs,
    and tasks are, and how to use each of them, and why we use one versus the other.
    We learned about the different work item attributes that are available to us,
    free issue types, and then learned what they are and how to add or remove them
    so that we can configure JIRA to meet the needs of our team. Then, we learned
    how to manage the items that are in our backlog, prioritization, assigning the
    edit, assigning to epics and versions, and more. Finally, talked about what a
    board is, how to configure that board so that the workflow matches our workflow,
    and how to effectively manage those items as they go through a Sprint.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来谈谈我们学到的内容。我们讨论了什么是史诗、故事、缺陷和任务，如何使用它们，以及为什么选择一个而不是另一个。我们了解了可用的不同工作项属性、自由问题类型，然后学习了它们是什么以及如何添加或删除它们，以便我们能够配置JIRA以满足团队的需求。接着，我们学习了如何管理积压中的项目，优先级排序、编辑任务分配、将任务分配给史诗和版本等等。最后，我们讨论了什么是看板，如何配置看板，使工作流与我们的工作流匹配，以及如何有效地管理这些项目在Sprint中的进展。
- en: In the next chapter, we're going to go ahead and start our project.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将开始我们的项目。
