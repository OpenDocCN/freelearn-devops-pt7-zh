- en: GitHub Pages and Web Analytics
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GitHub Pages 和网络分析
- en: In this chapter, you will learn how to build web pages around your project,
    hosted for free and exclusively on GitHub, by using Jekyll, which is a static
    site generator, or by providing your own HTML pages.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习如何围绕你的项目构建网页，这些网页将免费托管在 GitHub 上，并使用 Jekyll（一个静态站点生成器）或你提供的 HTML 页面。
- en: Continuing our exploration of GitHub features, next comes the ability to visualize
    a repository's data. GitHub has implemented some nice features, such as graphs
    that can depict, among other things, the commit activity of the contributors and
    the traffic a repository gains, as well as the commit history in a network graph.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续探索 GitHub 功能时，接下来是可视化仓库数据的功能。GitHub 实现了一些很棒的功能，例如可以描绘提交活动、仓库的流量情况以及在网络图中的提交历史等图表。
- en: 'We will cover the following:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将讨论以下内容：
- en: GitHub Pages
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GitHub Pages
- en: Web analytics
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络分析
- en: Tips and tricks
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提示与技巧
- en: Let's dive in!
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: GitHub Pages
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GitHub Pages
- en: At the end of 2008, GitHub announced GitHub Pages ([https://github.com/blog/272-github-pages](https://github.com/blog/272-github-pages)),
    a static-site hosting service. Static sites have seen a significant increase over
    recent years, and GitHub played a big part in that. A static site is a site that
    contains pages written in HTML, CSS, and JavaScript. No server code, such as PHP,
    Ruby, or Python, is included, nor is a database required.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 2008 年底，GitHub 宣布了 GitHub Pages ([https://github.com/blog/272-github-pages](https://github.com/blog/272-github-pages))，一个静态网站托管服务。近年来，静态网站数量大幅增加，而
    GitHub 在其中起到了重要作用。静态网站是由 HTML、CSS 和 JavaScript 编写的网页构成的，不包含 PHP、Ruby 或 Python
    等服务器端代码，也不需要数据库。
- en: In order to create a functional website hosted on GitHub Pages, you must follow
    some conventions. Let's look in detail at how to create any of these pages.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在 GitHub Pages 上创建一个功能性的网站，你必须遵循一些约定。让我们详细看看如何创建这些页面。
- en: Creating a user or an organization page
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建用户或组织页面
- en: For users and organizations, a repository named `username.github.io` must be
    created, where `username` is your username or organization name, and files must
    be pushed to the `master` branch.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对于用户和组织，必须创建一个名为`username.github.io`的仓库，其中 `username` 是你的用户名或组织名称，文件必须推送到 `master`
    分支。
- en: 'Create a new empty repository named after your username. After creating it,
    clone it locally and add a test `index.html` page (replace `username` with yours):'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个以你的用户名命名的新空仓库。创建后，在本地克隆它并添加一个测试的 `index.html` 页面（将 `username` 替换为你的用户名）：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Right after the upload finishes, visit `https://username.github.io` (where `username` is
    your own username) and look at the results.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 上传完成后，访问 `https://username.github.io`（其中 `username` 是你的用户名），查看结果。
- en: That's it! You can start writing your own HTML pages and push to GitHub. The
    changes are almost instant.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！你可以开始编写自己的 HTML 页面并推送到 GitHub。更改几乎是即时生效的。
- en: Creating a project page
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建项目页面
- en: 'Project pages are somewhat different to user/org pages; the source files of
    your website can reside in one of the three following locations: the `gh-pages`
    branch, the  `master` branch, or a `docs` directory of the `master` branch. You
    can choose which one you want to use by selecting it under your repository''s
    Settings under GitHub Pages.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 项目页面与用户/组织页面有所不同；你的网站源文件可以存放在以下三种位置之一：`gh-pages` 分支、`master` 分支，或 `master` 分支中的
    `docs` 目录。你可以在仓库的设置中的 GitHub Pages 选项下选择你想使用的一个。
- en: For project pages, if there is a branch named `gh-pages` in the repository,
    then its HTML content is automatically served by GitHub. The project page will
    ultimately be accessible via `https://<username>.github.io/<repositoryname>`.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 对于项目页面，如果仓库中有一个名为 `gh-pages` 的分支，那么它的 HTML 内容会被 GitHub 自动提供。最终，项目页面将通过 `https://<username>.github.io/<repositoryname>`
    进行访问。
- en: 'Here, I will create a `gh-pages` branch in the `github-essentials` repository,
    make a new `index.html` file, and commit and push to the `gh-pages` branch:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我将在 `github-essentials` 仓库中创建一个 `gh-pages` 分支，创建一个新的 `index.html` 文件，并提交并推送到
    `gh-pages` 分支：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Once `index.html` is uploaded, it will immediately be rendered under your page's
    URL. Since I uploaded it under my username (`axilleas`) in a repository named
    `github-essentials`, I know that the URL will be [http://axilleas.github.io/github-essentials](http://axilleas.github.io/github-essentials).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 `index.html` 被上传，它会立即在你页面的 URL 下渲染。由于我上传的是在我的用户名（`axilleas`）下的 `github-essentials`
    仓库，我知道 URL 会是 [http://axilleas.github.io/github-essentials](http://axilleas.github.io/github-essentials)。
- en: While you could manually modify the content of the project's website, GitHub
    provides a better automatic method to update the content of your web page in one
    go. Read the following sections to learn how to achieve this.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然你可以手动修改项目网站的内容，但 GitHub 提供了一个更好的自动化方法，可以一次性更新你的网页内容。请阅读以下章节，了解如何实现这一点。
- en: Choosing a theme to style your page
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择一个主题来样式化你的页面
- en: About four years after the launch of GitHub Pages, GitHub announced the addition
    of another feature, the GitHub page generator.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Pages 发布约四年后，GitHub 宣布新增了另一个功能——GitHub 页面生成器。
- en: 'This is an easy way to bootstrap a website for your project with just a few
    clicks. Under each repository''s settings, there is a section for GitHub Pages
    with the option Choose a theme:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这是为你的项目快速搭建网站的一种简单方法，只需要几次点击。在每个仓库的设置中，有一个 GitHub Pages 部分，并有一个选择主题的选项：
- en: '![](img/00145.jpeg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00145.jpeg)'
- en: When you select Choose a theme, GitHub helps you to create a single HTML page
    based on your `README.md` file with a variety of beautiful layouts to choose from,
    in an interactive step-by-step guide. This will work only on a `README.md` file
    that is present in one of the `gh-pages` or `master` branches. If the `README.md`
    file doesn't exist, GitHub will create one for you when you choose a theme for
    the first time.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当你选择选择一个主题时，GitHub 会帮助你根据 `README.md` 文件创建一个单一的 HTML 页面，提供多种漂亮的布局供你选择，并有互动式的逐步指导。此操作仅适用于
    `gh-pages` 或 `master` 分支中存在的 `README.md` 文件。如果 `README.md` 文件不存在，GitHub 会在你第一次选择主题时为你创建一个。
- en: The formatting of the website's content is written in Markdown, which we have
    explored in [Chapter 2](part0044.html#19UOO0-184576c1044a4350bd24f18b869c0732),
    *Using the Wiki and Managing Code Versioning*. You can use its markup language
    to define headings and lists, add links, and so on.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 网站内容的格式是用 Markdown 编写的，我们在[第 2 章](part0044.html#19UOO0-184576c1044a4350bd24f18b869c0732)《*使用
    Wiki 和管理代码版本控制*》中探讨过。你可以使用它的标记语言定义标题和列表，添加链接等。
- en: 'When you are inside the theme chooser, you will be able to choose from the
    existing layouts. Each layout follows a pattern, and there are links and buttons
    that point to your repository''s URL and the ZIP or TAR file downloads. When ready,
    hit Select theme, and the website will change its layout in a few seconds:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当你进入主题选择器时，你将能够从现有的布局中进行选择。每种布局都有一个固定的模式，布局中有指向你的仓库 URL 和 ZIP 或 TAR 文件下载的链接和按钮。准备好后，点击选择主题，几秒钟内网站布局就会改变：
- en: '![](img/00146.jpeg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00146.jpeg)'
- en: From now on, each time you change the `README.md` file, the changes will be
    automatically published in your website.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 从现在开始，每次你更改 `README.md` 文件时，网站内容会自动更新发布。
- en: Each time you choose a theme, a `_config.yml` file is committed to your repository
    with information about what theme is currently in use.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 每次选择主题时，一个 `_config.yml` 文件会被提交到你的仓库中，里面包含当前使用的主题信息。
- en: 'If you head over to the commits page, you can see that GitHub has some useful
    information about the build of your website. Clicking on the green check-mark
    icon will take you to the website:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你访问提交页面，你可以看到 GitHub 提供了一些关于你网站构建的有用信息。点击绿色勾选图标会带你进入网站：
- en: '![](img/00147.jpeg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00147.jpeg)'
- en: Now that your website is up and running, let's look at how you can use your
    own custom domain.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，既然你的网站已经上线，接下来我们来看看如何使用你自己的自定义域名。
- en: Using a custom domain
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用自定义域名
- en: Instead of using the classic GitHub Pages URL, you can use a custom domain name
    linked to your `user/org` GitHub page. This means you can tell GitHub that when
    someone asks for `www.mydomain.rocks`, it will serve the content that's published
    under `username.github.io`.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用与 `user/org` GitHub 页面关联的自定义域名，而不是使用经典的 GitHub Pages URL。这意味着你可以告诉 GitHub，当有人访问
    `www.mydomain.rocks` 时，它将显示在 `username.github.io` 下发布的内容。
- en: 'First, create a CNAME record in your DNS provider that will point `www.mydomain.rocks`
    to `username.github.io`. Then, head over to your repository''s `username.github.io`
    Settings > GitHub Pages, add your domain name under Custom domain, and hit Save.
    From now on, every time you visit `username.github.io`, you will be redirected
    to `www.mydomain.rocks`. Similarly, a project page under `username.github.io/repository-name`
    will be redirected to `www.mydomain.rocks/repository-name`. Note that your custom
    domain will be served automatically by HTTPS. If the Enforce HTTPS option is not
    set, make sure you set it:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在您的DNS提供商处创建一个CNAME记录，将`www.mydomain.rocks`指向`username.github.io`。然后，进入您的仓库的`username.github.io`设置
    > GitHub Pages，在Custom domain下添加您的域名，并点击保存。从现在起，每次访问`username.github.io`时，您将被重定向到`www.mydomain.rocks`。同样，`username.github.io/repository-name`下的项目页面也会被重定向到`www.mydomain.rocks/repository-name`。请注意，您的自定义域名将自动通过HTTPS提供服务。如果没有设置强制HTTPS选项，请确保您已设置：
- en: '![](img/00148.jpeg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00148.jpeg)'
- en: Using the `www` subdomain as your custom domain has some benefits over using
    just `mydomain.com` or another subdomain, such as `blog.mydomain.com`. Notably,
    that way, you automatically use GitHub's CDN and you are protected from DoS attacks.
    For more information about the kinds of domains you can use, visit GitHub's documentation
    at [https://help.github.com/articles/about-supported-custom-domains/](https://help.github.com/articles/about-supported-custom-domains/).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`www`子域名作为您的自定义域名，相比仅使用`mydomain.com`或其他子域名（如`blog.mydomain.com`），有一些优势。特别是，这样您会自动使用GitHub的CDN，并且免受DoS攻击的威胁。有关可以使用的域名类型的更多信息，请访问GitHub的文档：[https://help.github.com/articles/about-supported-custom-domains/](https://help.github.com/articles/about-supported-custom-domains/)。
- en: Let's now explore how you can leverage the power of a static-site generator
    to create more content for your website.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们探索如何利用静态站点生成器的强大功能，为您的网站创建更多内容。
- en: Introducing Jekyll
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍Jekyll
- en: So far, we have learned how to create web pages manually by pushing HTML files
    or using the GitHub theme generator for project pages. However, there is another,
    more sophisticated way to build your website.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经学习了如何通过推送HTML文件或使用GitHub主题生成器为项目页面手动创建网页。然而，还有一种更复杂的方式可以构建您的网站。
- en: Every day, more and more people turn to using static websites for their personal
    projects, and even companies use it for their main sites or blog platforms. A
    static site is faster and more secure than one built with a server-side language,
    such as PHP. On the other hand, maintaining a static site and updating its content
    completely manually is a tedious task.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 每天，越来越多的人开始使用静态网站来处理他们的个人项目，甚至一些公司也用它来作为他们的主站点或博客平台。与使用服务器端语言（如PHP）构建的站点相比，静态站点更快、更安全。另一方面，手动维护一个静态站点并完全手动更新其内容是一个繁琐的任务。
- en: 'For these reasons, so-called static-site generators exist: applications that
    use templates, markup languages, and configuration files, and convert these to
    pure HTML pages.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这些原因，出现了所谓的静态站点生成器：它们是使用模板、标记语言和配置文件的应用程序，并将这些转换为纯HTML页面。
- en: GitHub Pages uses Jekyll, which is a static-site generator written in Ruby,
    and is among the top open source static-site generators ([https://www.staticgen.com/](https://www.staticgen.com/)).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Pages使用Jekyll，它是用Ruby编写的静态站点生成器，是最顶尖的开源静态站点生成器之一([https://www.staticgen.com/](https://www.staticgen.com/))。
- en: In order to use Jekyll, you will need access to a terminal.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Jekyll，您需要访问终端。
- en: Installing Jekyll
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Jekyll
- en: In order to install Jekyll, refer to its documentation at [https://jekyllrb.com/docs/installation/](https://jekyllrb.com/docs/installation/).
    If you encounter any problems, be sure to visit their troubleshooting guide at [https://jekyllrb.com/docs/troubleshooting/#installation-problems](https://jekyllrb.com/docs/troubleshooting/#installation-problems).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装Jekyll，请参考其文档：[https://jekyllrb.com/docs/installation/](https://jekyllrb.com/docs/installation/)。如果遇到任何问题，请务必访问他们的故障排除指南：[https://jekyllrb.com/docs/troubleshooting/#installation-problems](https://jekyllrb.com/docs/troubleshooting/#installation-problems)。
- en: 'Following installation, you can check whether it was installed correctly by
    running `jekyll` in your terminal. You should see an output similar to the following:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，您可以通过在终端中运行`jekyll`来检查是否安装成功。您应该看到类似如下的输出：
- en: '[PRE2]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Customizing your page using Jekyll
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Jekyll定制您的页面
- en: 'Now we will create a new boilerplate site that `Jekyll` provides in order to
    start building on it. This is achieved with the `jekyll new path/to/site` command:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将创建一个新的基础站点，这是由`Jekyll`提供的，以便开始在其上进行构建。可以使用`jekyll new path/to/site`命令来实现：
- en: '[PRE3]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Navigate to the new directory that was created and list the files:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 进入新创建的目录并列出文件：
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You should see the following directories and files:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该能看到以下目录和文件：
- en: '[PRE5]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now, let''s build the site locally and see how that looks:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们在本地构建站点，看看效果如何：
- en: '[PRE6]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Open your browser to `http://127.0.0.1:4000` and you should see the default
    Jekyll boilerplate site:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 打开浏览器，访问 `http://127.0.0.1:4000`，你应该能看到默认的 Jekyll 模板网站：
- en: '![](img/00149.jpeg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00149.jpeg)'
- en: The `–watch` switch enables the autogeneration of files so that you don't have
    to stop and start the server all the time. However, if you edit `_config.yml`,
    you must restart the server by stopping and running the `jekyll serve` command
    again.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '`–watch` 选项启用了文件的自动生成，这样你就不需要每次都停止和启动服务器。然而，如果你编辑了 `_config.yml`，你必须通过停止并重新运行
    `jekyll serve` 命令来重启服务器。'
- en: From there on, you can start hacking on the new website. For starters, try to
    edit `_config.yml` and change some options. After changing the title, description,
    and email, stop and start Jekyll again to see the changes in effect.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 从此以后，你可以开始在新网站上进行修改。首先，试着编辑 `_config.yml` 文件并更改一些选项。更改标题、描述和电子邮件后，停止并重新启动 Jekyll，以查看更改效果。
- en: When you're happy with the changes, it's time to push to your GitHub repository's
    `master` branch for user/org pages, or to `gh-pages` if it's a project page. For
    a brand new project, you'd need to initiate a new Git repository inside the `website`
    directory; or, for an existing project, you'd need to move all those files Jekyll
    generated under the existing repository.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 当你对更改满意时，便可以将文件推送到 GitHub 仓库的 `master` 分支（用于用户/组织页面），或者 `gh-pages` 分支（用于项目页面）。对于一个全新的项目，你需要在
    `website` 目录中初始化一个新的 Git 仓库；或者，对于一个现有项目，你需要将 Jekyll 生成的所有文件移动到现有仓库中。
- en: 'In the following example, I will assume a new user page is created from scratch.
    First, you''d need to create a new empty `username.github.io` repository on GitHub.
    Next, in the `website` directory, issue the following commands:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的示例中，我将假设是从零开始创建一个新的用户页面。首先，你需要在 GitHub 上创建一个新的空的 `username.github.io` 仓库。接下来，在
    `website` 目录中，输入以下命令：
- en: '[PRE7]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: After a few seconds, GitHub should build the site, and you can visit your user
    page at `username.github.io` to confirm that all went well.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 几秒钟后，GitHub 应该会构建该站点，你可以访问你的用户页面 `username.github.io` 来确认一切正常。
- en: For project pages, make sure that `baseurl` in `_config.yml` reads `/repository-name/`,
    otherwise the CSS files won't be picked up correctly.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 对于项目页面，确保 `_config.yml` 文件中的 `baseurl` 设置为 `/repository-name/`，否则 CSS 文件将无法正确加载。
- en: Read more about Jekyll
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 阅读更多关于 Jekyll 的信息
- en: As you may have noticed, we have only set up the base for developing with Jekyll.
    For extensive documentation, refer to the Jekyll website at [https://jekyllrb.com/docs/home/](https://jekyllrb.com/docs/home/).
    You can find a list of sites that run Jekyll at [https://github.com/jekyll/jekyll/wiki/sites](https://github.com/jekyll/jekyll/wiki/sites).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，我们只设置了 Jekyll 开发的基础。欲了解详细文档，请参考 Jekyll 官方网站 [https://jekyllrb.com/docs/home/](https://jekyllrb.com/docs/home/)。你可以在
    [https://github.com/jekyll/jekyll/wiki/sites](https://github.com/jekyll/jekyll/wiki/sites)
    找到一些使用 Jekyll 的站点。
- en: 'Other helpful articles are, of course, the GitHub help pages about Jekyll:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 其他有用的文章当然包括 GitHub 关于 Jekyll 的帮助页面：
- en: '[https://help.github.com/articles/using-jekyll-with-pages/](https://help.github.com/articles/using-jekyll-as-a-static-site-generator-with-github-pages/)'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://help.github.com/articles/using-jekyll-with-pages/](https://help.github.com/articles/using-jekyll-as-a-static-site-generator-with-github-pages/)'
- en: '[https://help.github.com/articles/using-jekyll-plugins-with-github-pages/](https://help.github.com/articles/adding-jekyll-plugins-to-a-github-pages-site/)'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://help.github.com/articles/using-jekyll-plugins-with-github-pages/](https://help.github.com/articles/adding-jekyll-plugins-to-a-github-pages-site/)'
- en: Web analytics
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网站分析
- en: Due to GitHub's nature, a repository contains a great deal of metadata, such
    as commits over time, who contributed what, the number of contributors, the number
    of forks, and even site referrals to various files.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 GitHub 的特性，一个仓库包含大量的元数据，比如提交记录、贡献者、贡献的内容、贡献者的数量、分支的数量，甚至是不同文件的站点引用。
- en: GitHub provides some useful graphs and data, from which you can deduct the information
    you require under the Insights tab of a repository. Let's explore what's underneath.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub 提供了一些有用的图表和数据，你可以从中推导出你需要的信息，所有这些都在一个仓库的 Insights 标签页下。让我们来看看其中的内容。
- en: Pulse
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Pulse
- en: Pulse is an overview of a repository's activity. The default is to show the
    last week, but you can change the period from the drop-down menu on the right,
    by choosing 24 hours, 3 days, 1 week, or 1 month.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: Pulse是一个仓库活动的概览。默认显示的是过去一周的数据，但你可以通过右侧的下拉菜单选择更改时间范围，选择24小时、3天、1周或1个月。
- en: 'From here, you have a high-level overview of the merged and open pull requests,
    and open and closed issues, as well as the top committers for that period:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以获得合并和开放的拉取请求（pull request），以及开放和关闭的问题的高层次概览，此外还有该期间的主要提交者：
- en: '![](img/00150.jpeg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00150.jpeg)'
- en: Contributors – additions/deletions
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 贡献者 – 添加/删除
- en: 'An overview of the top 100 contributors of a project can be seen at the Contributors
    tab. The graph is created by the data of the default branch of a repository and
    it depicts the commits from the beginning of the project until the current day:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在贡献者标签下，你可以查看项目的前100名贡献者的概览。该图表是通过仓库的默认分支的数据创建的，展示了从项目开始到当前的所有提交：
- en: '![](img/00151.jpeg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00151.jpeg)'
- en: 'The default filter is the commit count. If you want to change to see who made
    the most additions or deletions, you can toggle the filter with the Filter contributions
    drop-down menu on the right:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 默认筛选条件是提交次数。如果你想查看谁做出了最多的添加或删除，可以通过右侧的“筛选贡献”下拉菜单切换筛选条件：
- en: '![](img/00152.jpeg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00152.jpeg)'
- en: 'The data can be fine-tuned further by choosing a specific period from the graph
    by selecting an area. For example, to see the contributions data between 2015
    and 2016, you would do the following:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 数据可以通过选择图表中的特定时间段来进一步微调。例如，要查看2015到2016年之间的贡献数据，你可以执行以下操作：
- en: '![](img/00153.jpeg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00153.jpeg)'
- en: Community profile
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 社区资料
- en: In the **Community** tab, there's a checklist for the most important things
    you should have present in your repository so that it is friendly to outside contributors.
    You can see from the following screenshot that a `README` file, a contributing
    guide ([https://help.github.com/articles/setting-guidelines-for-repository-contributors/](https://help.github.com/articles/setting-guidelines-for-repository-contributors/)),
    and a license ([https://help.github.com/articles/adding-a-license-to-a-repository/](https://help.github.com/articles/adding-a-license-to-a-repository/))
    are already present, whereas a code of conduct file ([https://help.github.com/articles/adding-a-code-of-conduct-to-your-project/](https://help.github.com/articles/adding-a-code-of-conduct-to-your-project/))
    is missing.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在**社区**标签下，有一个清单，列出了你应该在你的仓库中拥有的最重要的内容，以便让外部贡献者更友好地参与。你可以从下面的截图中看到，已经有了`README`文件、贡献指南([https://help.github.com/articles/setting-guidelines-for-repository-contributors/](https://help.github.com/articles/setting-guidelines-for-repository-contributors/))和许可证文件([https://help.github.com/articles/adding-a-license-to-a-repository/](https://help.github.com/articles/adding-a-license-to-a-repository/))，但是缺少行为规范文件([https://help.github.com/articles/adding-a-code-of-conduct-to-your-project/](https://help.github.com/articles/adding-a-code-of-conduct-to-your-project/))。
- en: 'In that case, GitHub will help you add one:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，GitHub会帮助你添加一个：
- en: '![](img/00154.jpeg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00154.jpeg)'
- en: Commits over time
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提交随时间变化
- en: 'The Commits tab shows the commit activity during the previous year. In the
    upper bar graph, you can visualize the number of commits per week; if you click
    on one bar, the graph that appears below will show the number of commits per day
    of that particular week:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 提交标签显示的是过去一年中的提交活动。在上方的条形图中，你可以查看每周的提交次数；如果点击其中一条柱状图，下面显示的图表会展示该周每天的提交次数：
- en: '![](img/00155.jpeg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00155.jpeg)'
- en: Code frequency
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码频率
- en: 'The Code frequency tab shows the weekly code additions and deletions:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: “代码频率”标签显示的是每周的代码添加和删除：
- en: '![](img/00156.jpeg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00156.jpeg)'
- en: Dependency graph
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 依赖关系图
- en: 'Under the Dependency graph tab, you can see the dependencies and the dependent
    libraries of your project. At the time of writing, GitHub only supports Ruby and
    JavaScript, and checks whether your repository contains a `Gemfile` and `package.json`
    file, respectively. Once it finds one, it scans and lists all the dependencies,
    as well the dependencies of their dependencies:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在“依赖关系图”标签下，你可以看到项目的依赖关系以及依赖的库。在写本文时，GitHub只支持Ruby和JavaScript，并检查你的仓库中是否包含`Gemfile`和`package.json`文件。如果找到了，它会扫描并列出所有依赖项，以及它们的依赖项：
- en: '![](img/00157.jpeg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00157.jpeg)'
- en: Apart from the dependency listing, GitHub also notifies you when a vulnerability
    is found in one of the libraries you use. For more information about the security
    alerts, read [https://help.github.com/articles/about-security-alerts-for-vulnerable-dependencies/](https://help.github.com/articles/about-security-alerts-for-vulnerable-dependencies/).
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 除了依赖关系列表，GitHub 还会在你使用的某个库发现漏洞时通知你。有关安全警告的更多信息，请阅读 [https://help.github.com/articles/about-security-alerts-for-vulnerable-dependencies/](https://help.github.com/articles/about-security-alerts-for-vulnerable-dependencies/)。
- en: Network
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络
- en: The Network graph shows the branch history of the main repository as well as
    its forks. You can click and drag the graph or use your keyboard arrows to see
    the older history. To view how another fork deviates from its parent, click on
    the owner name and you will be transferred to that repository network graph.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 网络图表展示了主仓库及其分叉的分支历史。你可以点击并拖动图表，或者使用键盘箭头查看更早的历史。要查看另一个分叉如何偏离其父仓库，点击所有者名称，你将被转到那个仓库的网络图表。
- en: 'Finally, you can click on the little bullets, and you will be transferred to
    that particular commit:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你可以点击小圆点，你将被转到该特定的提交：
- en: '![](img/00158.jpeg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00158.jpeg)'
- en: If a project has many forks, GitHub will not be able to render the Network graph.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个项目有很多分叉，GitHub 将无法渲染网络图表。
- en: Forks
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Forks
- en: 'The Forks tab, as the name suggests, shows a list of forks of your repository:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: Forks 标签，顾名思义，展示了你的仓库的分叉列表：
- en: '![](img/00159.jpeg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00159.jpeg)'
- en: Traffic
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 流量
- en: The Traffic tab is the only tab that can only be seen by project owners or team
    members. The higher the traffic a repository has, the more data is to explore.
    Generally, there information is available for a period of about two weeks.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 流量标签是唯一只能由项目所有者或团队成员查看的标签。仓库的流量越大，可探索的数据也越多。通常，关于流量的信息会保留大约两周。
- en: 'In the first graph, you can see how many times a repository has been cloned
    in that period. By hovering the mouse on the bullets, you can clearly see the
    clones and unique cloners as GitHub names them, per day:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一个图表中，你可以看到一个仓库在该期间被克隆了多少次。将鼠标悬停在圆点上，你可以清晰地看到 GitHub 所称的克隆和独立克隆者的数量，每天都有：
- en: '![](img/00160.jpeg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00160.jpeg)'
- en: 'Likewise, you can see the total views for the last two weeks, as well as how
    many unique visitors your repository has had:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，你可以查看过去两周的总浏览量，以及你的仓库有多少独立访客：
- en: '![](img/00161.jpeg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00161.jpeg)'
- en: 'Right below these graphs are the referring sites and the popular content. Clicking
    on a site will take you to another page where the actual link appears. Search
    engines and GitHub''s own search are excluded:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些图表的正下方是引用站点和流行内容。点击一个站点将带你到另一个页面，其中实际链接会显示。搜索引擎和 GitHub 自身的搜索被排除在外：
- en: '![](img/00162.jpeg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00162.jpeg)'
- en: Tips and tricks
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 小贴士和技巧
- en: The next tip is to use some advanced techniques that use the GitHub API.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个技巧是使用一些高级技术，这些技术利用了 GitHub API。
- en: Making use of Github Pages' metadata with Jekyll
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Github Pages 的元数据与 Jekyll
- en: GitHub provides some metadata when using Jekyll for GitHub Pages. This means
    that you can add certain keywords in the Jekyll templates and these will be rendered
    automatically.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub 在使用 Jekyll 创建 GitHub Pages 时提供了一些元数据。这意味着你可以在 Jekyll 模板中添加某些关键词，这些关键词将自动渲染。
- en: For example, you could add the `{{ site.github.project_title }}` variable, and
    the project title would be filled by GitHub automatically.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可以添加 `{{ site.github.project_title }}` 变量，GitHub 会自动填充项目标题。
- en: Following the example in the *Introduction to Jekyll* section of this chapter,
    we will add a new post to the Jekyll site.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 按照本章的 *Jekyll 介绍* 部分中的示例，我们将向 Jekyll 网站添加一个新帖子。
- en: 'Firstly, head over to the repository directory and make sure you are in the
    `master` branch and up to date:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，进入仓库目录，确保你在 `master` 分支并且是最新的：
- en: '[PRE8]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Next, copy the default post to have it as a reference (the dates in your site
    will differ):'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，复制默认帖子以便作为参考（你网站中的日期将有所不同）：
- en: '[PRE9]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Then, open the new file and remove all content except for the following:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，打开新文件并移除所有内容，保留以下内容：
- en: '[PRE10]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Edit it to look as follows:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑它使其如下所示：
- en: '[PRE11]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Commit your changes and push them:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 提交你的更改并推送：
- en: '[PRE12]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'After a few seconds, the post will appear on the front page and its content
    will have the variables rendered:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 几秒钟后，帖子将出现在首页，并且其内容将被渲染变量填充：
- en: '![](img/00163.jpeg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00163.jpeg)'
- en: You can read more at [https://help.github.com/articles/repository-metadata-on-github-pages/](https://help.github.com/articles/repository-metadata-on-github-pages/).
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[https://help.github.com/articles/repository-metadata-on-github-pages/](https://help.github.com/articles/repository-metadata-on-github-pages/)了解更多内容。
- en: Summary
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned the purpose of GitHub Pages and the various ways
    to upload your content. A quick introduction to Jekyll will hopefully provide
    a basis for further reading and use of this cool static-site generator.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了GitHub Pages的目的以及上传内容的各种方式。对Jekyll的简要介绍希望能为进一步阅读和使用这个酷炫的静态网站生成器提供基础。
- en: We also ran through the various visualizations that GitHub provides, with the
    graphs and other tools that are part of every repository.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还介绍了GitHub提供的各种可视化图表和工具，这些都是每个仓库的一部分。
- en: In [Chapter 6](part0149.html#4E33Q0-184576c1044a4350bd24f18b869c0732), *Exploring
    the User and Repository Settings*, we will explore the user and repository settings.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第6章](part0149.html#4E33Q0-184576c1044a4350bd24f18b869c0732)，《*探索用户和仓库设置*》中，我们将深入探讨用户和仓库设置。
