["```\ngit add  ProGitForProgrammers/ProGitForProgrammers/Program.cs \n```", "```\ngit commit ProGitForProgrammers/ProGitForProgrammers/Program.cs -a -m \"My message\" \n```", "```\ngit checkout -b Calculator \n```", "```\nnamespace ProGitForProgrammers\n{\n    public class Calculator\n    {\n    }\n} \n```", "```\ngit add . \n```", "```\ngit commit -m \"Add calculator class\" \n```", "```\ngit log ––oneline \n```", "```\n˃ git log --oneline\ne5c4db9 (HEAD -> Calculator) Add calculator class\nb00ca09 (origin/main, origin/HEAD, main, featureOne) Demonstrating the staging area\n4ac9d40 Add a line to program to indicate why it was added\nef16f81 Add writeline indicating we are in command line\nd418600 Add informative WriteLine\na3f085e First commit -- from command line\na5798e1 Initial commit \n```", "```\ne5c4db9 (HEAD -> Calculator) Add calculator class \n```", "```\n> git push\nfatal: The current branch Calculator has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n    git push --set-upstream origin Calculator \n```", "```\n public int Add (int left, int right)\n        {\n            return left + right;\n        } \n```", "```\ngit commit -a -m \"Add the add method\" \n```", "```\n public int Add (int left, int right)\n        {\n            return left + right;\n        }\n        public int Subtract (int left, int right)\n        {\n            return left - right;\n        } \n```", "```\ngit add . \n```", "```\ngit commit -m \"Add subtract method\" \n```", "```\npublic int Add(int left, int right)\n {\n     return left + right;\n }\n public int Subtract(int left, int right)\n {\n     return left - right;\n }\n public int Multiply(int left, int right)\n {\n     return left * right;\n }\n public int Divide(int left, int right)\n {\n     return left / right;\n } \n```", "```\ngit log –oneline \n```", "```\ngit clone \n```", "```\ngit clone git@github.com:JesseLiberty/Contacts.git \n```"]