["```\n     echo %JAVA_HOME%\n\n    ```", "```\n     c:\\java\n\n    ```", "```\n    javac -version\n\n    ```", "```\n    javac 1.8.0_92\n\n    ```", "```\n    atlas-version\n\n    ```", "```\n    cd c:\\atlastutorial\n\n    ```", "```\n    atlas-run-standalone --product jira\n\n    ```", "```\n    [INFO] Starting jira on the tomcat7x container on ports 2990 (http),\n         54668  \n         (rmi) and 8009 (ajp)\n    [INFO] using codehaus cargo v1.4.7\n    [INFO] [2.ContainerStartMojo] Resolved container artifact \n         org.codehaus.cargo:cargo-core-container-tomcat:jar:1.4.7 for container \n         tomcat7x\n    [INFO] [talledLocalContainer] Tomcat 7.x starting...\n    [INFO] [stalledLocalDeployer] Deploying [c:\\atlastutorial\\amps-\n         standalone\\target\\jira\\jira.war] to [c:\\atlastutorial\\amps-\n         standalone/target\\container\\tomcat7x\\cargo-jira-home/webapps]...\n    [INFO] [talledLocalContainer] Tomcat 7.x started on port [2990]\n    [INFO] jira started successfully in 703s at http://localhost:2990/jira\n    [INFO] Type Ctrl-D to shutdown gracefully\n    [INFO] Type Ctrl-C to exit \n\n    ```", "```\n    atlas-create-jira-plugin\n\n    ```", "```\n<organization> \n  <name>Sparxsys Solutions Pvt. Ltd.</name> \n  <url>http://www.sparxsys.com/</url> \n</organization> \n\n```", "```\n    atlas-run\n\n    ```", "```\n            -startup \n            plugins/org.eclipse.equinox.launcher_1.3.0.v20140415-2008.jar \n            --launcher.library \n            plugins/org.eclipse.equinox.launcher.win32.win32.x86_64_1.1.200.\n            v20140603-1326 \n            -product \n            org.eclipse.epp.package.jee.product \n            --launcher.defaultAction \n            openFile \n            --launcher.XXMaxPermSize \n            256M \n            -showsplash \n            org.eclipse.platform \n            --launcher.XXMaxPermSize \n            256m \n            --launcher.defaultAction \n            openFile \n            --launcher.appendVmargs \n            -vm \n            c:\\java \n            -vmargs \n            -Dosgi.requiredJavaVersion=1.8 \n            -Xms40m \n            -Xmx512m \n\n    ```", "```\n    atlas-mvn eclipse:eclipse\n\n    ```", "```\n    [INFO] -------------------------------------------------------[INFO] \n          BUILD SUCCESS\n    [INFO] -------------------------------------------------------[INFO] \n          Total time: 56.519 s\n    [INFO] Finished at: 2014-11-28T11:15:35+05:30\n    [INFO] Final Memory: 21M/102M\n    [INFO] ---------------------------------------------------\n\n    ```", "```\n    atlas-create-jira-plugin-module\n\n    ```", "```\n<?php \n\ndefine('JIRA_URL', 'http://localhost:2990/jira'); \ndefine('USERNAME', 'admin'); \ndefine('PASSWORD', 'admin'); \n\n//The function that is making the REST call using Curl Protocol \n\nfunction post_to($resource, $data) { \n  $curlname=CURLOPT_POST; \n  $curlvalue=1; \n  $jdata = json_encode($data); \n  $ch = curl_init(); \n  curl_setopt_array($ch, array( \n  $curlname => $curlvalue, \n  CURLOPT_URL => JIRA_URL . '/rest/api/latest/' . $resource, \n  CURLOPT_USERPWD => USERNAME . ':' . PASSWORD, \n  CURLOPT_POSTFIELDS => $jdata, \n  CURLOPT_HTTPHEADER => array('Content-type: application/json'), \n  CURLOPT_RETURNTRANSFER => true \n  )); \n  $result = curl_exec($ch); \n  curl_close($ch); \n  return json_decode($result); \n} \n\nfunction create_issue($issue) { \n  return post_to('issue', $issue); \n} \n\n//The issue details \n$new_issue = array( \n'fields' => array( \n'project' => array('key' => 'GEN'), \n'summary' => 'Test via REST', \n'description' => 'Description of issue goes here.', \n'issuetype' => array('name' => 'Task') \n) \n); \n\n//Call the function to create the issue \n$result = create_issue($new_issue); \n\n//Print the output \nif (property_exists($result, 'errors')) { \n  echo \"Error(s) creating issue:\\n\"; \n  var_dump($result); \n} else {print_r($result); \n  echo \"New issue created at \" . JIRA_URL .\"/browse/{$result->key}\\n\"; \n} \n\n?> \n\n```", "```\ndefine('JIRA_URL', 'http://localhost:2990/jira'); \ndefine('USERNAME', 'admin'); \ndefine('PASSWORD', 'admin'); \n\n```", "```\nfunction post_to($resource, $data) { \n  $curlname=CURLOPT_POST; \n  $curlvalue=1; \n  $jdata = json_encode($data); \n  $ch = curl_init(); \n  curl_setopt_array($ch, array( \n  $curlname => $curlvalue, \n  CURLOPT_URL => JIRA_URL . '/rest/api/latest/' . $resource, \n  CURLOPT_USERPWD => USERNAME . ':' . PASSWORD, \n  CURLOPT_POSTFIELDS => $jdata, \n  CURLOPT_HTTPHEADER => array('Content-type: application/json'), \n  CURLOPT_RETURNTRANSFER => true \n  )); \n  $result = curl_exec($ch); \n  curl_close($ch); \n  return json_decode($result); \n} \n\nfunction create_issue($issue) { \n  return post_to('issue', $issue); \n} \n\n```", "```\n$new_issue = array( \n'fields' => array( \n'project' => array('key' => 'GEN'), \n'summary' => 'Test via REST', \n'description' => 'Description of issue goes here.', \n'issuetype' => array('name' => 'Task') \n) \n); \n\n//Call the function to create the issue \n$result = create_issue($new_issue); \n\n//Print the output \nif (property_exists($result, 'errors')) { \n  echo \"Error(s) creating issue:\\n\"; \n  var_dump($result); \n} else {print_r($result); \n  echo \"New issue created at \" . JIRA_URL .\"/browse/{$result->key}\\n\"; \n} \n\n```", "```\nNew issue created at http://hp:2990/jira/browse/GEN-2 \n\n```", "```\n<?php \n\n$username = 'admin'; \n$password = 'admin'; \n\n$url = 'http://localhost:2990/jira/rest/api/latest/issue/GEN-2'; \n\n$curl = curl_init(); \ncurl_setopt($curl, CURLOPT_USERPWD, \"$username:$password\"); \ncurl_setopt($curl, CURLOPT_URL, $url); \ncurl_setopt($curl, CURLOPT_RETURNTRANSFER, 1); \ncurl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1); \ncurl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0); \ncurl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 0); \n\n$issue_list = (curl_exec($curl)); \necho '<pre>'; \nprint_r(json_decode($issue_list)); \necho '</pre>'; \n?> \n\n```"]