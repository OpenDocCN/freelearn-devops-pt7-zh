["```\n- name: deregister web server from lb\n  shell: < script to run on lb host >\n  delegate_to: lbIf there areis more than one load balancers, anan inventory group can be iterated over as, follows: \n- name: deregister web server from lb\n  shell: < script to run on lb host >\n  delegate_to: \"{{ item }}\"\n  with_items: groups.lb\n```", "```\n- hosts: www\n  remote_user: vagrant\n  sudo: yes\n  serial: 20 \n```", "```\n- name: wait for mysql to be up\n  wait_for: host=db.example.org port=3106 state=started\n- name: check if a uri returns content\n  uri: url=http://{{ inventory_hostname }}/api\n  register: apicheck\n```", "```\n$ Ansible-playbook -i customhosts site.yml â€“-tags install\n\n```", "```\n{ role: nginx, when: Ansible_os_family == 'Debian', tags: 'www' }\n```", "```\n$ Ansible-playbook -i customhosts site.yml --limit db\n\n```", "```\n$ Ansible-playbook -i customhosts site.yml --limit db,lb\n\n```", "```\n$ Ansible-playbook -i customhosts site.yml --limit 'all:!www:!db'\n\n```", "```\n---\n# filename: roles/haproxy/tasks/install.yml\n  - name: install haproxy\n    apt:\n      name: \"{{ haproxy['pkg'] }}\"\n    tags:\n     - install\n\n---\n# filename: roles/haproxy/tasks/configure.yml\n - name: create haproxy config\n    template: src=\"img/haproxy.cfg.j2\" dest=\"{{ haproxy['config']['cnfpath'] }}\" mode=0644\n   notify:\n    - restart haproxy service\n   tags:\n    - configure\n\n - name: enable haproxy\n    template: src=\"img/haproxy.default.j2\" dest=/and more/default/haproxy mode=0644\n    notify:\n    - restart haproxy service\n    tags:\n    - configure\n\n---\n# filename: roles/haproxy/tasks/service.yml\n - name: start haproxy server\n    service:\n      name: \"{{ haproxy['service'] }}\" \n      state: started\n    tags:\n    - start\n```", "```\n# filename: db.yml\n  roles:\n- { role: mysql, tags: 'mysql' }\n\n#filename: www.yml\n  roles:\n     - { role: nginx, when: Ansible_os_family == 'Debian', tags: [ 'www', 'nginx' ] }\n     - { role: php5-fpm, tags: [ 'www', 'php5-fpm' ] }\n     - { role: wordpress, tags: [ 'www', 'wordpress' ] }\n\n#filename: lb.yml\n  roles:\n- { role: haproxy, when: Ansible_os_family == 'Debian', tags: 'haproxy' }\n```", "```\n$ Ansible-playbook -i customhosts site.yml --list-tags\n\n#Output:\nplaybook: site.yml\n\n play #1 (db): TAGS: []\n TASK TAGS: [configure, install, mysql, start]\n\n play #2 (www): TAGS: []\n TASK TAGS: [configure, install, nginx, php5-fpm, ssl, start, wordpress, www]\n\n play #3 (lb): TAGS: []\n TASK TAGS: [configure, haproxy, install, start]\n\n```", "```\n# Run install tasks for haproxy, \n$ Ansible-playbook -i customhosts site.yml --tags=install --limit lb\n\n# Install and configure all but web servers\n$ Ansible-playbook -i customhosts site.yml --tags=install,configure --limit 'all:!www'\n\n# Run all tasks with tag nginx\n$ Ansible-playbook -i customhosts site.yml --tags=nginx\n\n```", "```\n ---\n# Playbook for updating web server in batches\n# filename: update_www.yml\n- hosts: www\n  remote_user: vagrant\n  sudo: yes\n  serial: 1\n  pre_tasks:\n    - name: deregister web server from  load balancer\n    shell: echo \"disable server fifanews/{{ Ansible_hostname }}\" | socat stdio /var/lib/haproxystats\n    delegate_to: \"{{ item }}\"\n    with_items: groups.lb\n  roles:\n    - { role: nginx, when: Ansible_os_family == 'Debian' }\n    - php5-fpm\n    - wordpress\n  post_tasks:\n    - name: wait for web server to come up \n    wait_for: host={{ inventory_hostname }} port=80 state=started\n    - name: register webserver from  load balancer\n    shell: echo \"enable server fifanews/{{ Ansible_hostname }}\" | socat stdio /var/lib/haproxystats\n    delegate_to: \"{{ item }}\"\n    with_items: groups.lb\n```"]