["```\n---\n# Requires a user variable to specify user to setup\n- name: Create user account\n  user:\n    name: \"{{ user }}\"\n    state: present\n\n- name: Make user SSH config dir\n  file:\n    path: \"/home/{{ user }}/.ssh\"\n    owner: \"{{ user }}\"\n    group: \"{{ user }}\"\n    mode: 0600\n    state: directory\n\n- name: Copy in public key\n  copy:\n    src: \"keys/{{ user }}.pub\"\n    dest: \"/home/{{ user }}/.ssh/authorized_keys\"\n    mode: 0600\n    owner: \"{{ user }}\"\n    group: \"{{ user }}\"\n```", "```\n---\n- hosts: ansibletest\n  user: root\n  tasks:\n    - include: usersetup.yml user={{ item }}\n      with_items:\n        - mal\n        - dan\n        - kate\n```", "```\n---\n- name: config sendmail\n  command: make -C /etc/mail\n  notify: reload sendmail\n\n- name: config aliases\n  command: newaliases\n  notify: reload sendmail\n\n- name: reload sendmail\n  service:\n    name: sendmail\n    state: reloaded\n\n- name: restart sendmail\n  service:\n    name: sendmail\n    state: restarted\n```", "```\n---\n  hosts: mailers\n  tasks:\n    - name: update sendmail\n      yum:\n        name: sendmail\n        state: latest\n      notify: restart sendmail\n\n    - name: configure sendmail\n      template:\n        src: templates/sendmail.mc.j2 dest: /etc/mail/sendmail.mc\n      notify: config sendmail\n\n  handlers:\n    - include: sendmailhandlers.yml\n```", "```\n---\n- include \"drfailover.yml\"\n- include \"upgradeapp.yml\"\n- include \"drfailback.yml\"\n\n- name: Notify management\n  hosts: local\n  tasks:\n    - mail\n        to: \"mgmt-team@example.com\"\n        msg: 'The application has been upgraded and is now live'\n\n- include \"drupgrade.yml\"\n```", "```\n---\n- name: Setup servers for website1.example.com\n  hosts: website1\n  roles:\n    - common\n    - apache\n    - { role: website1, port: 80 }\n```", "```\n---\nallow_duplicates: no\ndependencies:\n  - apache\n```", "```\n---\nport: 80\n```", "```\n---\n- name: Setup MySQL Infrastructure\n  hosts: localhost\n  connection: local\n  tasks:\n    - name: Start GCE Nodes\n      gce:\n        image: centos-6\n        name: \"mysql-{{ item }}\"\n        tags: mysql\n        zone: us-central1-a\n      with_sequence: count=2\n      register: nodes\n      when: '\"mysql-{{ item }}\" not in groups.all'\n\n    - name: Wait for the nodes to start\n      wait_for:\n          host: \"{{ item.instance_data[0].public_ip }}\"\n          port: 22\n      with_items: nodes.results\n      when: not item|skipped\n\n    - name: Register the hosts in a group\n      add_host:\n          name: \"{{ item.instance_data[0].name }}\"\n          ansible_ssh_host: \"{{ item.instance_data[0].public_ip }}\"\n          groups: \"tag_mysql\"\n      with_items: nodes.results\n      when: not item|skipped\n\n- name: Setup MySQL\n  hosts: tag_mysql\n  tasks:\n    - name: Install MySQL\n      yum:\n        name: mysql\n        state: present\n\n    - name: Start MySQL\n      service:\n        name: mysqld\n        state: started\n        enabled: yes\n```", "```\n---\n- name: Install and setup our webservers\n  hosts: webservers\n  tasks:\n  - name: install latest software\n    yum\n      name: \"{{ item }}\"\n      state: latest\n    notify: restart apache\n    tags:\n      - patch\n    with_items:\n    - httpd\n    - webalizer\n\n  - name: Create subdirectories\n    file\n      dest: \"/var/www/html/{{ item }}\"\n      state: directory\n      mode: 755 owner: apache\n      group: apache\n    tags:\n      - deploy\n    with_items:\n      - pub\n\n  - name: Copy in web files\n    copy\n      src: \"website/{{ item }}\"\n      dest: \"/var/www/html/{{ item }}\"\n      mode: 0755\n      owner: apache\n      group: apache\n    tags:\n      - deploy\n    with_items:\n      - index.html\n      - logo.png\n      - style.css\n      - app.js\n      - pub/index.html\n\n  - name: Copy webserver config\n    tags:\n      - deploy\n      - config\n    copy\n      src: website/httpd.conf\n      dest: /etc/httpd/conf/httpd.conf\n      mode: 0644\n      owner: root\n      group: root\n    notify: reload apache\n\n  - name: set apache to start on startup\n    service\n      name: httpd\n      state: started\n      enabled: yes\n\n  handlers:\n  - name: reload apache\n    service: name=httpd state=reloaded\n\n  - name: restart apache\n    service: name=httpd state=restarted\n```", "```\n$ ansible-playbook webservers.yml --tags deploy\n\n```", "```\n---\n- hosts: website1\n  roles:\n    - common\n    - { role: apache, tags: [\"patch\"] }\n    - { role: website2, tags: [\"deploy\", \"patch\"] }\n```", "```\n---\n- name: Ansible Pull Mode\n  hosts: pullhosts\n  tasks:\n    - name: Setup EPEL\n      command: \"rpm -ivh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm\"\n      args: creates=/etc/yum.repos.d/epel.repo\n\n    - name: Install Ansible + Dependencies\n      yum:\n        name: \"{{ item }}\"\n        state: latest\n        enablerepo: epel\n      with_items:\n      - ansible\n      - git-core\n\n    - name: Make directory to put downloaded playbooks in\n      file:\n        state: directory\n        path: /opt/ansiblepull\n\n    - name: Setup cron\n      cron:\n        name: \"ansible-pull\"\n        user: root\n        minute: \"*/5\"\n        state: present\n        job: \"ansible-pull -U https://git.int.example.com.com/gitrepos/ansiblepull.git -D /opt/ansiblepull {{ inventory_hostname_short }}.yml\"\n```", "```\n$ ansible-vault create vars/staging.yml\n\n```", "```\n$ ansible-playbook --ask-vault-pass encrypted.yml\n\n```"]