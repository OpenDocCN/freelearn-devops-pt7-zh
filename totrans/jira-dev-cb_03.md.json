["```\n    <customfield-type key=\"readonly-user\" name=\"Read Only User CF\" class=\"com.jtricks.ReadOnlyUserCF\">       \n      <description>Read Only User CF Description</description>       \n      <resource type=\"velocity\" name=\"view\" location=\"templates/com/jtricks/view-readonly-user.vm\" />       \n      <resource type=\"velocity\" name=\"column-view\" location=\"templates/com/jtricks/view-readonly-user.vm\" />      \n      <resource type=\"velocity\" name=\"xml\" location=\"templates/com/jtricks/view-readonly-user.vm\" />      \n      <resource type=\"velocity\" name=\"edit\" location=\"templates/com/jtricks/edit-readonly-user.vm\" /> \n    </customfield-type>\n    ```", "```\n    public class ReadOnlyUserCF extends TextCFType{\n        private final JiraAuthenticationContext authContext;\n        public ReadOnlyUserCF(CustomFieldValuePersister \n          customFieldValuePersister,\n          StringConverter stringConverter,  GenericConfigManager \n          genericConfigManager,\n          JiraAuthenticationContext authContext) {\n          super(customFieldValuePersister, stringConverter, \n          genericConfigManager);\n          this.authContext = authContext;\n        }\n        // Overridden methods here\n      }\n    ```", "```\n    @Override\n    public Map getVelocityParameters(Issue issue, CustomField \n        field, FieldLayoutItem fieldLayoutItem){\n        Map params = super.getVelocityParameters(issue, field, \n        fieldLayoutItem);\n        params.put(\"currentUser\", authContext.getUser().getName());\n        return params;\n    }\n    ```", "```\n    #if ($value)  $value  #end\n    ```", "```\n    <input type=\"text\" name=\"$customField.id\" value=\"$currentUser\" id=\"$customField.id\"   class=\"textfield\" readonly=\"readonly\" />\n    ```", "```\n<customfield-searcher key=\"textsearcher\" name=\"Free Text Searcher\"\n        i18n-name-key=\"admin.customfield.searcher.textsearcher.name\"\n        class=\"com.atlassian.jira.issue.customfields.searchers.TextSearcher\">\n        <description key=\"admin.customfield.searcher.textsearcher.desc\">Search for values using a free text search.</description>\n        <resource type=\"velocity\" name=\"search\" location=\"templates/plugins/fields/edit-searcher/search-basictext.vm\"/>\n        <resource type=\"velocity\" name=\"view\" location=\"templates/plugins/fields/view-searcher/view-searcher-basictext.vm\"/>\n        <valid-customfield-type package=\"com.atlassian.jira.plugin.system.customfieldtypes\" key=\"textfield\"/>\n        <valid-customfield-type package=\"com.atlassian.jira.plugin.system.customfieldtypes\" key=\"textarea\"/>\n        <valid-customfield-type package=\"com.atlassian.jira.plugin.system.customfieldtypes\" key=\"readonlyfield\"/>\n</customfield-searcher>\n```", "```\n    <customfield-searcher key=\"readonly-user-searcher\" name=\"Read Only User Searcher\"  class=\"com.atlassian.jira.issue.customfields.searchers.TextSearcher\">\n    ```", "```\n      <description key=\"admin.customfield.searcher.textsearcher.desc\">Search for Read Only User using a free text search.</description>\n      <resource type=\"velocity\" name=\"search\" location=\"templates/plugins/fields/edit-searcher/search-basictext.vm\"/>\n      <resource type=\"velocity\" name=\"view\" location=\"templates/plugins/fields/view-searcher/view-searcher-basictext.vm\"/>\n      <valid-customfield-type package=\"com.jtricks\" key=\"readonly-user\"/>  \n    </customfield-searcher>\n    ```", "```\n    <atlassian-plugin key=\"com.jtricks\" name=\"J-Tricks Customfields Plugin\"  plugins-version=\"2\">\n    ```", "```\npublic class MySearcher extends SomeJiraSearcher {\n   public MySearcher(PluginComponent ioc) {\n      super(ioc, ComponentManager.getInstanceOfType(anotherType));\n  } \n}\n```", "```\n        CustomFieldManager customFieldManager = ComponentManager.getInstance().getCustomFieldManager();\n        ```", "```\n    CustomField customField = customFieldManager.getCustomFieldObject(new Long(10000)); \n    ```", "```\n    CustomField customField = customFieldManager.getCustomFieldObjectByName(demoFieldName);\n    ```", "```\n    Object value = customField.getValue(Issue) \n    ```", "```\n    Object value = issue.getCustomFieldValue(customField);\n    ```", "```\n    ModifiedValue modifiedValue = new ModifiedValue(value, newValueObject);\n    ```", "```\n    FieldLayoutManager fieldLayoutManager = ComponentManager.getInstance().getFieldLayoutManager();\n    FieldLayoutItem fieldLayoutItem = fieldLayoutManager.getFieldLayout(issue).getFieldLayoutItem(customField);\n    ```", "```\n    customField.updateValue(fieldLayoutItem, issue, modifiedValue, new DefaultIssueChangeHolder());\n    ```", "```\n    issue.setCustomFieldValue(customField, value);\n    ```", "```\n    Map actionParams = EasyMap.build(\"issue\", getIssue(), \"issueObject\", getIssueObject(), \"remoteUser\", ComponentManager.getInstance().getJiraAuthenticationContext().getUser());\n    ```", "```\n    ActionResult aResult = CoreFactory.getActionDispatcher().execute(ActionNames.ISSUE_UPDATE, actionParams);\n    ```", "```\ncustomField.getCustomFieldType().updateValue(customField, issue, newValue);\n```", "```\n        optionsManager = ComponentManager.getOSGiComponentInstanceOfType(OptionsManager.class);\n        ```", "```\n    List<FieldConfigScheme> schemes = fieldConfigSchemeManager.getConfigSchemesForField(customField);\n    ```", "```\n    FieldConfig config = fieldConfigScheme.getOneAndOnlyConfig();\n    ```", "```\n    Options options = this.optionsManager.getOptions(config);\n    List<Option> existingOptions = options.getRootOptions();\n    ```", "```\n    Option option = this.optionsManager.createOption(fieldConfig, null, sequence, value);\n    ```", "```\n    this.optionsManager.updateOptions(modifiedOptions);\n    ```", "```\n@Overridepublic void validateFromParams(CustomFieldParams arg0, ErrorCollection arg1, FieldConfig arg2) {\n  // Suppress any validation here\n}\n```", "```\nchange log string [change log id]\n```", "```\npublic String getChangelogValue(CustomField field, Object value);\npublic String getChangelogString(CustomField field, Object value);\n```", "```\n@Override\npublic String getChangelogValue(CustomField field, Object value) {\n  return \"\";\n}\n\n@Override\npublic String getChangelogString(CustomField field, Object value) {\n  String val = (String) value;\n  if (val != null && val.length() > 100){\n    val = val.substring(0, 100) + \"....\";\n  }\n  return val;\n}\n```", "```\n<!-- entity to represent a single change to an issue. Always part of a change group -->\n    <entity entity-name=\"ChangeItem\" table-name=\"changeitem\" package-name=\"\">\n        <field name=\"id\" type=\"numeric\"/>\n        <field name=\"group\" col-name=\"groupid\" type=\"numeric\"/>\n\n        <!-- whether this is a built in field ('jira') or a custom field ('custom') - basically used to avoid naming scope problems -->\n        <!-- also used for keeping record of the bug_id of a bug from Bugzilla Import-->\n        <!-- and for keeping record of ids in issue move-->\n        <field name=\"fieldtype\" type=\"long-varchar\"/>\n        <field name=\"field\" type=\"long-varchar\"/>\n\n <field name=\"oldvalue\" type=\"extremely-long\"/>\n <!-- a string representation of the new value (i.e. \"Documentation\" instead of \"4\" for a component which might be deleted) -->\n <field name=\"oldstring\" type=\"extremely-long\"/>\n\n <field name=\"newvalue\" type=\"extremely-long\"/>\n <!-- a string representation of the new value -->\n <field name=\"newstring\" type=\"extremely-long\"/>\n        <prim-key field=\"id\"/>\n        <!—relations and indexes -->\n    </entity>\n```", "```\n    Update customfieldvalue set customfield = (select id from customfield where cfname='Field B')  where customfield = (select id from customfield where cfname='Field A')\n    ```", "```\nprotected PersistenceFieldType getDatabaseType()\n{\n  return PersistenceFieldType.TYPE_LIMITED_TEXT;\n}\n```", "```\n    public class DemoCFType extends AbstractCustomFieldType implements SortableCustomField\n    ```", "```\n    public int compare(Object customFieldObjectValue1, Object customFieldObjectValue2, FieldConfig fieldConfig)\n    {\n      return new DemoComparator().compare(customFieldObjectValue1, customFieldObjectValue2);\n    }\n    ```", "```\n    jira.table.cols.subtasks = issuetype, status, assignee, customfield_10140, progress\n    ```", "```\ncom.atlassian.jira.issue.fields.UserField\n```", "```\ncom.atlassian.jira.issue.fields.DateField\n```", "```\n    $customFieldManager.getCustomFieldObject(\"customfield_10010\").getName()\n    ```", "```\n    $issue.getCustomFieldValue($customFieldManager.getCustomFieldObject(\"customfield_10010\")))\n    ```", "```\n        My Demo Field <a class=\"localHelp\" href=\"http://www.j-tricks.com\" title=\"Get My Help\" target=\"_blank\"><img src=\"img/help_blue.gif\"</a>\n        ```", "```\n        My Demo Field <a class=\"localHelp\" href=\"http://www.j-tricks.com\" onclick=\"var child = window.open('http://www.google.com', 'myHelp', 'width=600, height=500, resizable, scrollbars=yes'); child.focus(); return false;\"><img src=\"img/help_blue.gif\" title=\"Get My Help \"></a>\n        ```", "```\n    My Demo Field<a class=\"localHelp\" href=\"#\"  onclick=\" AJS.$('#mdfFieldHelp').toggle();\"><img src=\"img/help_blue.gif\"</a>\n    <div id=\"mdfFieldHelp\" style=\"display:none\">\n    Inline help for my demo field!\n    </div>\n    ```", "```\n<customfield-type key=\"select\" name=\"Select List\"\n        i18n-name-key=\"admin.customfield.type.select.name\"\n        class=\"com.atlassian.jira.issue.customfields.impl.SelectCFType\">\n        <description key=\"admin.customfield.type.select.desc\">A single select list with a configurable list of options.</description>\n        <resource type=\"velocity\" name=\"view\" location=\"templates/plugins/fields/view/view-rawtext.vm\"/>\n        <resource type=\"velocity\" name=\"edit\" location=\"templates/plugins/fields/edit/edit-select.vm\"/>\n        <resource type=\"velocity\" name=\"xml\" location=\"templates/plugins/fields/xml/xml-basictext.vm\"/>\n    </customfield-type>\n```", "```\n#if (!$fieldLayoutItem || $fieldLayoutItem.required == false)\n   <option value=\"-1\">$i18n.getText(\"common.words.none\")</option>\n   #else\n   <option value=\"\">$i18n.getText(\"common.words.none\")</option>\n   #end\n```", "```\nProjectCustomFieldImporter getProjectImporter();\n```", "```\n<customfield-type key=\"textarea\" name=\"Free Text Field (unlimited text)\"\n    ............................................\n    <resource type=\"velocity\" name=\"edit\" location=\"templates/plugins/\n    fields/edit/edit-textarea.vm\"/>\n    ...................................\n</customfield-type>\n```", "```\n#controlHeader ($action $customField.id $customField.name $fieldLayoutItem.required $displayParameters.noHeader)\n\n#if ($!customField.isRenderable() && $rendererDescriptor)\n\n  ## setup some additional parameters\n  $!rendererParams.put(\"rows\", \"8\")\n  $!rendererParams.put(\"cols\", \"50\")\n  $!rendererParams.put(\"wrap\", \"virtual\")\n\n  ## let the renderer display the edit component\n  $rendererDescriptor.getEditVM($!value, $!issue.key, $!fieldLayoutItem.rendererType, $!customField.id, $!customField.name, $rendererParams, false)\n#else\n  <textarea name=\"$customField.id\"\n            id=\"$customField.id\"\n            class=\"textfield\"\n            rows=\"8\" cols=\"50\" wrap=\"virtual\"\n  >$textutils.htmlEncode($!value)</textarea>\n#end\n\n#controlFooter ($action $fieldLayoutItem.fieldDescription $displayParameters.noHeader)\n```", "```\n#controlHeader ($action $customField.id $customField.name $fieldLayoutItem.required $displayParameters.noHeader)\n\n#if ($!customField.id==\"customfield_10010\")\n  ## Modify rows and cols only for this custom field\n  $!rendererParams.put(\"rows\", \"8\")\n  $!rendererParams.put(\"cols\", \"50\")\n  $!rendererParams.put(\"wrap\", \"virtual\")\n\n  ## let the renderer display the edit component\n  $rendererDescriptor.getEditVM($!value, $!issue.key, $!fieldLayoutItem.rendererType, $!customField.id, $!customField.name, $rendererParams, false)\n\n#elseif ($!customField.isRenderable() && $rendererDescriptor)\n // reminder of the above snippet here\n.................................................................\n\n#controlFooter ($action $fieldLayoutItem.fieldDescription $displayParameters.noHeader)\n```"]