["```\n# A Simple Jinja Python Template example from jinja2 import Template\n\nexampleJinjaTemplate = Template('Hello {{ place }}!')\nexampleJinjaTemplate.render(place=‘World')\n\n>>>Output: 'Hello World!'\n\n```", "```\n# Example Ansible Jinja2 Template\n- hosts:  all\n  vars:\n    my_var: ‘Hello'\n    my_var2: ‘World'\n  tasks:\n    - name: Simple Ansible MOTD Template Example\n      template:\n        src: motdexample.j2\n        dest: /etc/motd\n        mode: 0777\n\n```", "```\nWelcome to your System:\n{{ my_var }}\n{{ my_var2 }}\n\n```", "```\nWelcome to your System:\nHello\nWorld\n\n```", "```\n{{ .. }} for expressions (including variables)\n{% ... %} for control structures\n{# ... #}} Comments\n\n```", "```\n# Basic Syntax of a Jinja Filter or Variable\n{{ var | operation expression }}\n\n```", "```\n# Example playbook using simple JINJA2 variable substitution\n--\n- hosts: 127.0.0.1\n  user: root\n  vars:\n    motd: ‘Welcome to your Linux Box'\n  tasks:\n    - name: Update the /etc/motd\n      copy: content=‘{{motd}}' dest='/etc/motd' force='yes'\n\n```", "```\nWelcome to your Linux Box\n\n```", "```\n# Example playbook using simple JINJA2 variable substitution\n- hosts: 127.0.0.1\n  user: root\n  vars:\n    motd: \"Welcome to your Linux Box! You are connected to {{ inventory_hostname_short }}\"\n  tasks:\n    - name: Update the /etc/motd\n      copy: content=‘{{motd}}' dest='/etc/motd' force='yes'\n\n```", "```\n# convert \"ansible\" to \"able\"\n{{ 'ansible' | regex_replace('^a.*i(.*)$', 'a\\\\1') }}\n\n# convert \"foobar\" to \"bar\"\n{{ 'foobar' | regex_replace('^f.*o(.*)$', '\\\\1') }}\n\n# convert \"localhost:80\" to \"localhost, 80\" using named groups\n{{ 'localhost:80' | regex_replace('^(?P<host>.+):(?P<port>\\\\d+)$', '\\\\g<host>, \\\\g<port>') }}\n\n# convert '^f.*o(.*)$' to '\\^f\\.\\*o\\(\\.\\*\\)\\$'\n{{ '^f.*o(.*)$' | regex_escape() }}\n\n```", "```\nUppercase a Variable:\n\n{{ var|upper }}\n\nLowecase a Variable:\n\n{{ var|lower }}\n\n```", "```\nvar: 1\nincremented_var: \"{{ var + 1 }}\"\n\n```", "```\n# Computational operations using Jinja2\n\nAddition Operator: +\nExample: {{ var + 1 }}\n\nSubtraction Operator: -\nExample: {{ var - 1 }}\n\nMultiplication Operator: *\nExample: {{ var * 2 }}\n\nDivision Operator: /\nExample {{ var / 2 }}\n\n```", "```\nExample Math Equation:\n2 * (1 + 1)\n\nOrder of Operations:\n1 + 1 = 2\n2 * 2 = 4\n\nExample Math Equation #2:\n(( 1 + 2 ) * 3 ) / 2\n\nOrder of Operations:\n1 + 2 = 3\n3 * 3 = 9\n9 / 2 = 4.5\n\n```", "```\nmy_var = \"{{ (( 1 + 2 ) * 3) /2 }}\"\n\n```", "```\n{{ some_variable &#124; to_json }}\n\n```", "```\n{{ some_variable &#124; to_yaml }}\n\n```", "```\n{{ variable &#124; mandatory }}\n\n```", "```\n{{ some_variable &#124; default(5) }}\n\n```", "```\n{{ [3, 4, 2] &#124; max }}\n\n{{ [3, 4, 2] &#124; min }}\n\n```", "```\n\"{{ ['a','b','c']&#124;random }}\"\n\n\"{{ 59 &#124;random}} * * * * root /script/from/cron\"\n\n```", "```\n\"{{ 59 &#124;random(seed=inventory_hostname) }} * * * * root /script/from/cron\"\n\n```", "```\n{{ ['a','b','c']&#124;shuffle }}\n# => ['c','a','b']\n{{ ['a','b','c']&#124;shuffle }}\n# => ['b','c','a']\n\n```", "```\n{{ myvar &#124; log }}\n{{ myvar &#124; log(10) }}\n\n```", "```\n{{ myvar &#124; root }}\n{{ myvar &#124; root(5) }}\n\n```", "```\n{{ myvar &#124; ipv4 }}\n{{ myvar &#124; ipv6 }}\n\n```", "```\n- shell: echo {{ string_value &#124; quote }}\n\n```", "```\n{{ list &#124; join(\" \") }}\n\n```", "```\n{{ path &#124; basename }}\n\n```", "```\n{{ path &#124; win_basename }}\n\n```", "```\n# Python Conditional Logic Example\nx = 0\nif x == 0:\n    print “Hello X is 0”\nelse:\n    print “Hello X is NOT 0”\n\n```", "```\n{% if condition %}\n    execute_this\n{% elif condition2 %}\n    execute_this\n{% else %}\n    execute_this\n{% endif %} \n\n```", "```\n# Conditional Logic Playbook Example\n---\n- name: Hello World Conditional Logic\n  user: root\n  hosts: all\n  vars:\n    hello: true\n    say_something: \"{% if hello == true %} Hello Jinja {% else %} Goodbye Ansible {% endif %}\n  tasks:\n    - debug:\n        msg: \"{{ say_something }}\"\n\n```", "```\n hello: true\n say_something: \"{% if hello == true %} Hello Jinja {% else %} Goodbye Ansible {% endif %}\n\n```", "```\n# Example Ansible playbook & Jinja Template\n---\n- name: Hello World Conditional Logic within a Jinja template\n  user: root\n  hosts: all\n  vars:\n    vhost:\n       servername: my.server\n       documentroot: /var/www\n       serveradmin: bob\n  tasks:\n\n    # Jinja template file example\n    - template:\n        src: /jinjatemplates/httpdconf.j2\n        dest: /etc/httpd/httpd.conf\n        owner: root\n        group: wheel\n        mode: \"u=rw,g=r,o=r\"\n\n```", "```\nNameVirtualHost *:80\n\n<VirtualHost *:80>\n  ServerName {{ vhost.servername }}\n  DocumentRoot {{ vhost.documentroot }}\n{% if vhost.serveradmin is defined %}\n  ServerAdmin {{ vhost.serveradmin }}\n{% endif %}\n  <Directory \"{{ vhost.documentroot }}\">\n    AllowOverride All\n    Options -Indexes FollowSymLinks\n    Order allow,deny\n    Allow from all\n  </Directory>\n</VirtualHost>\n\n```", "```\n# Simple Python Counter Loop \n\nx = 0\nwhile x < 10:\n    x+=1\nprint \"The value of X is now\" + str(x)\n\n```", "```\n# Example Ansible playbook using an iterating loop\n---\n- name: Hello World Iterator within Ansible\n  user: root\n  hosts: all\n  tasks:\n    - debug:\n        msg: \"{% for x in range (0,10) %} {{x}} {% endfor %}\"\n\n```", "```\n{% for id in range(201,221) %}  \n192.168.0.{{ id }} client{{ \"%02d\"|format(id-200) }}.vpn  \n{% endfor %}\n\n```", "```\n# Simple example of a Python iterative loop\n\nfruits = ['apples', 'oranges', 'pears', 'apricots']\n# Iterate through a list of fruits\nfor fruit in fruits:\n    print \"A fruit of type: %s\" % fruit\n\n```", "```\n{# Example Jinja For iterator loop #}\n\n{% for <item_name> in <list_name> %}\n  code block\n{% endfor %}\n\n```", "```\n[webservers]\nwebhost1.local\nwebhost2.local\n\n[databaseservers]\ndbserver1.local\ndbserver2.local\n\n```", "```\n# Example of loops using Jinja\n--\n- name: Simple Ansible Playbook that loops over hosts within Jinja\n  vars:\n    servers_to_configure: \"{{ groups['databaseservers'] }}\"\n  tasks:\n    - template:\n      src: configfile.j2\n      dest: configfile.conf\n\n```", "```\n# Simple Configuration file based on Jinja templating\n\nall_hosts += [\n{% for host in servers_to_configure %}\n  \"{{ hostvars[host].ansible_default_ipv6.address }}\n{% endfor %}\n]\n\n```", "```\n# Nested For Loop with Python\n\nfor iterating_var in sequence:\n   for iterating_var in sequence:\n      statements(s)\n   statements(s)\n\n```", "```\n# Example YAML variable file\nvar_name:\n- group:\n    - variable1\n    - variable2\n- group:\n    - variable1\n    - variable2\n\n```", "```\n{% for var in var_name %}\n<group>\n{% for host in var.group %}\n    <variable><host>{{ host }}</host></variable>\n{% endfor %}\n</group>\n{% endfor %}\n\n```", "```\n# Save this as vars.yml\n---\n places:\n - name: USA\n capital: Blue\n - name: Great Britan\n capital: Yellow\n - name: Itally\n capital: Blue\n - name: Mexico\n capital: Yellow\n - name: Ireland\n capital: Yellow\n - name: Amsterdam\n capital: Orange\n\n# Save this as playbook.yml\n---\n - name: How to use variables in Jinja2 Loops\n   hosts: localhost\n   connection: local\n   vars_files:\n     - vars.yml\n   gather_facts: no\n   tasks:\n     - name: This task uses a j2 template which has a series of loops\n       template: src=./ourloop.j2 dest=./output.txt\n\n# Save this as ourloop.j2\n{% for country in places %}\n Currently people are visiting {{ country }}.\n{% endfor %}\n\n```", "```\n---\n- name: Simple Ansible Playbook that loops over hosts within Jinja\n  vars:\n    say_hello\n    say_something: \"{{ say_hello }}\"\n\n  tasks:\n    - debug:\n        msg: \"{{ say_something }}\"\n\n```", "```\n# Simple Configuration file based on Jinja templating\n\n{% for host in servers_to_configure %}\n  {{ host }}\n{% endfor %}\n\n```"]