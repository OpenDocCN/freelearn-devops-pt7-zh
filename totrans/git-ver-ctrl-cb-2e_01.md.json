["```\n$ git clone https://github.com/PacktPublishing/Git-Version-Control-Cookbook-Second-Edition.git\n$ cd Git-Version-Control-Cookbook-Second-Edition\n```", "```\n$ git cat-file -p HEAD\ntree 34fa038544bcd9aed660c08320214bafff94150b\nparent 5c662c018efced42ca5e9cce709787c40a849f34\nauthor John Doe <john.doe@example.com> 1386933960 +0100\ncommitter John Doe <john.doe@example.com> 1386941455 +0100\n```", "```\n$ git cat-file -p 34fa038544bcd9aed660c08320214bafff94150b \n100644 blob f21dc2804e888fee6014d7e5b1ceee533b222c15    README.md\n040000 tree abc267d04fb803760b75be7e665d3d69eeed32f8    a_sub_directory\n100644 blob b50f80ac4d0a36780f9c0636f43472962154a11a    another-file.txt\n100644 blob 92f046f17079aa82c924a9acf28d623fcb6ca727    cat-me.txt\n100644 blob bb2fe940924c65b4a1cefcbdbe88c74d39eb23cd    hello_world.c\n```", "```\n$ git cat-file -p 92f046f17079aa82c924a9acf28d623fcb6ca727\n```", "```\nNot really that exciting, huh?\n```", "```\n$ git cat-file master\nusage: git cat-file (-t|-s|-e|-p|<type>|--textconv) <object>\nor: git cat-file (--batch|--batch-check) < <list_of_objects>\n\n<type> can be one of: blob, tree, commit, tag.\n...\n$ git cat-file -p master\ntree 34fa038544bcd9aed660c08320214bafff94150b\nparent a90d1906337a6d75f1dc32da647931f932500d83\n...\n```", "```\n$ cat .git/refs/heads/master\n13dcada077e446d3a05ea9cdbc8ecc261a94e42d\n```", "```\n$ git log -1\ncommit 34acc370b4d6ae53f051255680feaefaf7f7850d (HEAD -> master, origin/master, origin/HEAD)\nAuthor: John Doe <john.doe@example.com>\nDate:   Fri Dec 13 12:26:00 2013 +0100\n\nThis is the subject line of the commit message\n...\n```", "```\n$ cat .git/HEAD\nref: refs/heads/master\n```", "```\n$ git tag\nv0.1\nv1.0\n```", "```\n$ git cat-file -p v1.0\nobject f55f7383b57ad7c11cf56a7c55a8d738af4741ce\ntype commit\ntag v1.0\ntagger John Doe <john.doe@example.com> 1526017989 +0200\n\nWe got the hello world C program merged, let's call that a release 1.0  \n```", "```\n$ git cat-file -p HEAD | git hash-object -t commit --stdin 13dcada077e446d3a05ea9cdbc8ecc261a94e42d \n```", "```\n$ git clone https://github.com/PacktPublishing/Git-Version-Control-Cookbook-Second-Edition.git\n$ cd Git-Version-Control-Cookbook-Second-Edition\n```", "```\n$ echo \"Another line\" >> another-file.txt\n$ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\n\nChanges not staged for commit:\n(use \"git add <file>...\" to update what will be committed)\n(use \"git checkout -- <file>...\" to discard changes in working directory)\n\nmodified:   another-file.txt\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n```", "```\n$ git add another-file.txt\n$ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\n\nChanges to be committed:\n(use \"git reset HEAD <file>...\" to unstage)\n\nmodified:   another-file.txt\n```", "```\n$ echo 'Whoops almost forgot this' >> another-file.txt\n$ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\n\nChanges to be committed:\n(use \"git reset HEAD <file>...\" to unstage)\n\nmodified:   another-file.txt\n\nChanges not staged for commit:\n(use \"git add <file>...\" to update what will be committed)\n(use \"git checkout -- <file>...\" to discard changes in working directory)\n\nmodified:   another-file.txt\n```", "```\n$ git add another-file.txt\n$ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\n\nChanges to be committed:\n(use \"git reset HEAD <file>...\" to unstage)\n\nmodified:   another-file.txt  \n```", "```\n$ git commit -m 'Another change to another file'\n[master 99fac83] Another change to another file\n1 file changed, 2 insertions(+)\n```", "```\n$ git cat-file -p HEAD\ntree 162201200b5223d48ea8267940c8090b23cbfb60\nparent 13dcada077e446d3a05ea9cdbc8ecc261a94e42d\nauthor John Doe <john.doe@example.com> 1524163792 +0200\ncommitter John Doe <john.doe@example.com> 1524163792 +0200\n```", "```\n$ git cat-file -p HEAD^{tree}\n100644 blob f21dc2804e888fee6014d7e5b1ceee533b222c15  README.md\n040000 tree abc267d04fb803760b75be7e665d3d69eeed32f8  a_sub_directory\n100644 blob 35d31106c5d6fdb38c6b1a6fb43a90b183011a4b  another-file.txt\n100644 blob 92f046f17079aa82c924a9acf28d623fcb6ca727  cat-me.txt\n100644 blob bb2fe940924c65b4a1cefcbdbe88c74d39eb23cd  hello_world.c\n```", "```\n$ git fsck --dangling\nChecking object directories: 100% (256/256), done.\ndangling blob ad46f2da274ed6c79a16577571a604d3281cd6d9  \n```", "```\n$ git cat-file -p ad46f2da274ed6c79a16577571a604d3281cd6d9\nThis is just another file\nAnother line\n```", "```\n$ git checkout master && git reset --hard 34acc37\n```", "```\n$ git log -3\n```", "```\ncommit 34acc370b4d6ae53f051255680feaefaf7f7850d\nAuthor: John Doe <john.doe@example.com>\nDate:   Fri Dec 13 12:26:00 2013 +0100\n\nThis is the subject line of the commit message.\n\nIt should be followed by a blank line then the body, which is this text. Here \nyou can have multiple paragraphs etc. and explain your commit. It's like an \nemail with subject and body, so try to get people's attention in the subject\n\ncommit a90d1906337a6d75f1dc32da647931f932500d83\nAuthor: John Doe <john.doe@example.com>\nDate:   Fri Dec 13 12:17:42 2013 +0100\n\nInstructions for compiling hello_world.c\n\ncommit 485884efd6ac68cc7b58c643036acd3cd208d5c8\nMerge: 44f1e05 0806a8b\nAuthor: John Doe <john.doe@example.com>\nDate:   Fri Dec 13 12:14:49 2013 +0100\n\nMerge branch 'feature/1'\n\nAdds a hello world C program.\n\n```", "```\n$ git log --decorate --graph --oneline --all\n```", "```\n$ git log --decorate --graph --oneline --all\n* 34acc37 (HEAD, tag: v1.0, origin/master, origin/HEAD, master) This is the sub...\n* a90d190 Instructions for compiling hello_world.c\n*   485884e Merge branch 'feature/1'\n...\n```", "```\n $ git log --all --graph \\\n   --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ci) %C(bold blue)<%an>%Creset'\n```", "```\ngit config --global alias.graph \"log --all --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ci) %C(bold blue)<%an>%Creset'\"\n```", "```\n$ git clone https://git.eclipse.org/r/jgit/jgit\n$ cd jgit \n```", "```\n$ git checkout master && git reset --hard b14a939\n```", "```\n$ git describe \nv3.1.0.201310021548-r-96-gb14a939\n```", "```\nCommit-id: Commit subject \nFixes-bug: xxx \n```", "```\n$ git log --grep \"Bug: \" v3.1.0.201310021548-r..HEAD\n```", "```\n--pretty=\"%h|%s%n%b\" \n```", "```\ngrep -E \"\\||Bug: \"\n```", "```\nsed -e 's/|/: /' -e 's/Bug:/Fixes-bug:/'\n```", "```\n$ git log --grep \"Bug: \" v3.1.0.201310021548-r..HEAD --pretty=\"%h|%s%n%b\" | grep -E \"\\||Bug: \" | sed -e 's/|/: /' -e 's/Bug:/Fixes-bug:/'\n```", "```\nf86a488: Implement rebase.autostash \nFixes-bug: 422951 \n7026658: CLI status should support --porcelain \nFixes-bug: 419968 \ne0502eb: More helpful InvalidPathException messages (include reason) \nFixes-bug: 413915 \nf4dae20: Fix IgnoreRule#isMatch returning wrong result due to missing reset \nFixes-bug: 423039 \n7dc8a4f: Fix exception on conflicts with recursive merge \nFixes-bug: 419641 \n99608f0: Fix broken symbolic links on Cygwin. \nFixes-bug: 419494 \n...  \n```", "```\n$ git log  v3.1.0.201310021548-r..HEAD | grep \"Bug: \"\n```", "```\n$ git log --grep \"Bug: \" --oneline  v3.1.0.201310021548-r..HEAD\n```", "```\n$ git diff --name-only v3.1.0.201310021548-r..HEAD\norg.eclipse.jgit.packaging/org.eclipse.jgit.target/jgit-4.3.target\norg.eclipse.jgit.packaging/org.eclipse.jgit.target/jgit-4.4.target \norg.eclipse.jgit.pgm.test/tst/org/eclipse/jgit/pgm/DescribeTest.java \norg.eclipse.jgit.pgm.test/tst/org/eclipse/jgit/pgm/FetchTest.java \norg.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/Describe.java \n...  \n```", "```\n$ git diff --name-only --diff-filter=D  v3.1.0.201310021548-r..HEAD \norg.eclipse.jgit.junit/src/org/eclipse/jgit/junit/SampleDataRepositoryTestCase.java \norg.eclipse.jgit.packaging/org.eclipse.jgit.target/org.eclipse.jgit.target.target \norg.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/file/GCTest.java  \n```", "```\n$ which gitk\n/usr/local/bin/gitk\n```", "```\n$ git checkout master && git reset --hard 13dcad\n```", "```\n$ gitk --all &\n```", "```\n$ git log --grep \"Performance\" --oneline --all \ne3f19a529 Performance improvement on writing a large index\n83ad74b6b SHA-1: collision detection support\n48e245fc6 RefTreeDatabase: Ref database using refs/txn/committed\n087b5051f Skip redundant 'OR-reuse' step in tip commit bitmap setup\n9613b04d8 Merge \"Performance fixes in DateRevQueue\"\n84afea917 Performance fixes in DateRevQueue\n7cad0adc7 DHT: Remove per-process ChunkCache\nd9b224aeb Delete DiffPerformanceTest\ne7a3e590e Reuse DiffPerformanceTest support code to validate algorithms\nfb1c7b136 Wait for JIT optimization before measuring diff performance   \n```", "```\n$ git log --grep \"performance\" --oneline --all\nd7deda98d Skip ignored directories in FileTreeIterator\n5a87d5040 Teach UploadPack \"include-tag\" in \"fetch\"\n7d9246f16 RawParseUtils#lineMap: Simplify by using null sentinel internally\n4bfc6c2ae Significantly speed up FileTreeIterator on Windows\n4644d15bc GC: Replace Files methods with File alternatives\nd3021788d Use bitmaps for non-commit reachability checks\n6b1e3c58b Run auto GC in the background\ndb7761025 Pack refs/tags/ with refs/heads/\n30eb6423a Add GC_REST PackSource to better order DFS packs\n... more output \n```", "```\n$ git checkout master && git reset --hard b14a939  \n```", "```\n$ git log -G\"isOutdated\" --oneline \nf32b861 JGit 3.0: move internal classes into an internal subpackage \nc9e4a78 Add isOutdated method to DirCache \n797ebba Add support for getting the system wide configuration \nad5238d Move FileRepository to storage.file.FileRepository \n4c14b76 Make lib.Repository abstract and lib.FileRepository its implementation \nc9c57d3 Rename Repository 'config' as 'repoConfig' \n5c780b3 Fix unit tests using MockSystemReader with user configuation \ncc905e7 Make Repository.getConfig aware of changed config  \n```", "```\n$ git log -S\"isOutdated\" --oneline \nf32b861 JGit 3.0: move internal classes into an internal subpackage\nc9e4a78 Add isOutdated method to DirCache\n797ebba Add support for getting the system wide configuration\nad5238d Move FileRepository to storage.file.FileRepository\n4c14b76 Make lib.Repository abstract and lib.FileRepository its implementation\n5c780b3 Fix unit tests using MockSystemReader with user configuation\ncc905e7 Make Repository.getConfig aware of changed config  \n```", "```\n$ git show c9c57d3 | grep -C4 \"isOutdated\"\n    @@ -417,14 +417,14 @@ public FileBasedConfig getConfig() {\n               throw new RuntimeException(e);\n             }\n           }\n    -    if (config.isOutdated()) {\n    +    if (repoConfig.isOutdated()) {\n             try {\n    -              loadConfig();\n    +              loadRepoConfig();\n             } catch (IOException e) {\n```"]