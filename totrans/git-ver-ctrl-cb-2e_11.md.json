["```\n$ git clone https://github.com/PacktPublishing/Git-Version-Control-Cookbook-Second-Edition_tips_and_tricks.git\n$ cd Git-Version-Control-Cookbook-Second-Edition_tips_and_tricks $ git checkout master\n```", "```\n$ echo \"Just another unfinished line\" >> foo\n$ git add foo\n```", "```\n$ echo \"Another line\" >> bar\n$ echo \"Some content\" > new_file\n$ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\n\n  Changes to be committed:\n    (use \"git reset HEAD <file>...\" to unstage)\n\n      modified:   foo\n\n  Changes not staged for commit:\n    (use \"git add <file>...\" to update what will be committed)\n    (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n      modified:   bar\n\n  Untracked files:\n    (use \"git add <file>...\" to include in what will be committed)\n\n     new_file\n\n```", "```\n$ git stash\nSaved working directory and index state WIP on master: d611f06 Update foo and bar\n$ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\n\n  Untracked files:\n    (use \"git add <file>...\" to include in what will be committed)\n\n      new_file\n\nnothing added to commit but untracked files present (use \"git add\" to track)  \n```", "```\n# MacOS (BSD sed):\n$ sed -i '' 's/First line/This is the very first line of the foo file/' foo\n# Linux (GNU sed):\n$ sed 's/First line/This is the very first line of the foo file/' foo $ git add foo $ git commit -m \"Update foo\" [master fa4b595] Update foo 1 file changed, 1 insertion(+), 1 deletion(-)\n```", "```\n$ git stash list\nstash@{0}: WIP on master: b6dabd7 Update foo and bar\n```", "```\n$ git status\nOn branch master\nYour branch is ahead of 'origin/master' by 1 commit.\n  (use \"git push\" to publish your local commits)\n\n  Untracked files:\n    (use \"git add <file>...\" to include in what will be committed)\n\n     new_file\n  nothing added to commit but untracked files present (use \"git add\" to track)\n$ git stash pop\nAuto-merging foo\nOn branch master\nYour branch is ahead of 'origin/master' by 1 commit.\n  (use \"git push\" to publish your local commits)\n\n  Changes not staged for commit:\n    (use \"git add <file>...\" to update what will be committed)\n    (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n      modified:   bar\n      modified:   foo\n\n  Untracked files:\n    (use \"git add <file>...\" to include in what will be committed)\n\n    new_file\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nDropped refs/stash@{0} (733703568b7dcf2a0d5e4db5957d351417bcd793)\n```", "```\n$ git add foo\n$ git stash --include-untracked\nSaved working directory and index state WIP on master: 691808e Update foo\n$ git status\nOn branch master\nYour branch is ahead of 'origin/master' by 1 commit.\n  (use \"git push\" to publish your local commits)\n\nnothing to commit, working directory clean\n```", "```\n$ gitk master stash \n```", "```\n$ git stash pop --index\nOn branch master\nYour branch is ahead of 'origin/master' by 1 commit.\n  (use \"git push\" to publish your local commits)\n\n  Changes to be committed:\n    (use \"git reset HEAD <file>...\" to unstage)\n\n    modified:   foo\n\n  Changes not staged for commit:\n    (use \"git add <file>...\" to update what will be committed)\n    (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n      modified:   bar\n\n  Untracked files:\n    (use \"git add <file>...\" to include in what will be committed)\n\n     new_file\n\nDropped refs/stash@{0} (ff331af57406948619b0671dab8b4f39da1e8fa2)\n```", "```\n$ git stash --keep-index --include-untracked\nSaved working directory and index state WIP on master: 00dd8f8 Update foo\nHEAD is now at 00dd8f8 Update foo\n$ git status\nOn branch master\nYour branch is ahead of 'origin/master' by 1 commit.\n (use \"git push\" to publish your local commits)\n\n  Changes to be committed:\n    (use \"git reset HEAD <file>...\" to unstage)\n\n      modified:   foo\n```", "```\n$ cd Git-Version-Control-Cookbook-Second-Edition_tips_and_tricks\n$ git status\nOn branch master\nYour branch is ahead of 'origin/master' by 1 commit.\n (use \"git push\" to publish your local commits)\n\n  Changes to be committed:\n    (use \"git reset HEAD <file>...\" to unstage)\n\n      modified:   foo\n\n$ git stash list\nstash@{0}: WIP on master: 4447f69 Update foo\n```", "```\n$ git stash save 'Updates to foo'\nSaved working directory and index state On master: Updates to foo\n```", "```\n$ git stash list\nstash@{0}: On master: Updates to foo\nstash@{1}: WIP on master: 2302181 Update foo\n```", "```\n$ echo \"Another change\" >> bar\n$ git stash save 'Made another change to bar'\nSaved working directory and index state On master: Made another change to bar\n$ git stash list\nstash@{0}: On master: Made another change to bar\nstash@{1}: On master: Updates to foo\nstash@{2}: WIP on master: 2302181 Update foo\n```", "```\n$ git stash apply 'stash@{1}'\n  On branch master\n  Your branch is ahead of 'origin/master' by 1 commit.\n    (use \"git push\" to publish your local commits)\n\n  Changes not staged for commit:\n    (use \"git add <file>...\" to update what will be committed)\n    (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n      modified:   foo\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n$ git stash apply --quiet 'stash@{0}'\n$ git stash list\nstash@{0}: On master: Made another change to bar\nstash@{1}: On master: Updates to foo\nstash@{2}: WIP on master: 2302181 Update foo\n```", "```\n$ git stash drop 'stash@{1}'\nDropped stash@{1} (e634b347d04c13fc0a0d155a3c5893a1d3841fcd)\n$ git stash list\nstash@{0}: On master: Made another change to bar\nstash@{1}: WIP on master: 1676cdb Update foo\n```", "```\n$ git clone https://github.com/PacktPublishing/Git-Version-Control-Cookbook-Second-Edition_tips_and_tricks.git\n$ cd Git-Version-Control-Cookbook-Second-Edition_tips_and_tricks\n$ git checkout bug_hunting\n```", "```\ncommit 83c22a39955ec10ac1a2a5e7e69fe7ca354129af\nAuthor: HAL 9000 <John.Doe@example.com>\nDate:   Tue May 13 09:53:45 2014 +0200\n\nBugs...\n```", "```\n$ echo \"! grep -q oo map.txt\" > ../test.sh\n$ chmod +x ../test.sh\n```", "```\n$ git bisect start\n```", "```\n$ git bisect bad\n```", "```\n$ git bisect good master\nBisecting: 11 revisions left to test after this (roughly 4 steps)\n[9d2cd13d4574429dd0dcfeeb90c47a2d43a9b6ef] Build map part 11\n```", "```\n$ ../test.sh; test $? -eq 0 && git bisect good || git bisect bad\n# git bisect good\nBisecting: 5 revisions left to test after this (roughly 3 steps)\n[c45cb51752a4fe41f52d40e0b2873350b95a9d7c] Build map part 16 \n```", "```\n$ ../test.sh; test $? -eq 0 && git bisect good || git bisect bad \n# git bisect bad\nBisecting: 2 revisions left to test after this (roughly 2 steps)\n[83c22a39955ec10ac1a2a5e7e69fe7ca354129af] Bugs...\n$ ../test.sh; test $? -eq 0 && git bisect good || git bisect bad \n# git bisect bad\nBisecting: 0 revisions left to test after this (roughly 1 step)\n[670ab8c42a6cb1c730c7c4aa0cc26e5cc31c9254] Build map part 13\n$ ../test.sh; test $? -eq 0 && git bisect good || git bisect bad\n# git bisect good\n83c22a39955ec10ac1a2a5e7e69fe7ca354129afis the first bad commit\ncommit 83c22a39955ec10ac1a2a5e7e69fe7ca354129af\nAuthor: HAL 9000 <aske.olsson@switch-gears.dk>\nDate:   Tue May 13 09:53:45 2014 +0200\n\n Bugs...\n\n:100644 100644 8a13f6bd858aefb70ea0a7d8f601701339c28bb0 1afeaaa370a2e4656551a6d44053ee0ce5c3a237 M map.txt\n```", "```\n$ git bisect reset\nPrevious HEAD position was 670ab8c... Build map part 13\nSwitched to branch 'bug_hunting'\nYour branch is up-to-date with 'origin/bug_hunting'.\n$ git show 83c22a39955ec10ac1a2a5e7e69fe7ca354129af\ncommit 83c22a39955ec10ac1a2a5e7e69fe7ca354129af\nAuthor: HAL 9000 <john.doe@example.com>\nDate:   Tue May 13 09:53:45 2014 +0200\n\n Bugs...\n\ndiff --git a/map.txt b/map.txt\nindex 8a13f6b..1afeaaa 100644\n--- a/map.txt\n+++ b/map.txt\n@@ -34,6 +34,6 @@ Australia:\n                    .-./     |.     :  :,\n                   /           '-._/     _\n    /                ' \n    -           .'                         *: Brisbane\n    -        .-'                             ;\n    -        |                               |\n    +           .'        __/             *: Brisbane\n    +        .-'          (oo)               ;\n    +        |           //||\\              |\n\n```", "```\n$ git bisect start HEAD master\nBisecting: 11 revisions left to test after this (roughly 4 steps)\n[9d2cd13d4574429dd0dcfeeb90c47a2d43a9b6ef] Build map part 11\n```", "```\n$ git bisect run ../test.sh running ../test.sh Bisecting: 5 revisions left to test after this (roughly 3 steps) [c45cb51752a4fe41f52d40e0b2873350b95a9d7c] Build map part 16 running ../test.sh Bisecting: 2 revisions left to test after this (roughly 2 steps) [83c22a39955ec10ac1a2a5e7e69fe7ca354129af] Bugs... running ../test.sh Bisecting: 0 revisions left to test after this (roughly 1 step) [670ab8c42a6cb1c730c7c4aa0cc26e5cc31c9254] Build map part 13 running ../test.sh 83c22a39955ec10ac1a2a5e7e69fe7ca354129afis the first bad commit commit 83c22a39955ec10ac1a2a5e7e69fe7ca354129af Author: HAL 9000 <john.doe@example.com> Date: Tue May 13 09:53:45 2014 +0200  Bugs... :100644 100644 8a13f6bd858aefb70ea0a7d8f601701339c28bb0 1afeaaa370a2e4656551a6d44053ee0ce5c3a237 M map.txt bisect run success\n```", "```\n$ git bisect reset\nPrevious HEAD position was 670ab8c... Build map part 13\nSwitched to branch 'bug_hunting'\n```", "```\n$ git clone https://github.com/PacktPublishing/Git-Version-Control-Cookbook-Second-Edition_tips_and_tricks.git\n$ cd Git-Version-Control-Cookbook-Second-Edition_tips_and_tricks $ git checkout bug_hunting\n```", "```\n$ git clone https://github.com/PacktPublishing/Git-Version-Control-Cookbook-Second-Edition_tips_and_tricks.git\n$ cd Git-Version-Control-Cookbook-Second-Edition_tips_and_tricks\n```", "```\n$ echo \"And another line\" >> foo\n$ git add foo\n```", "```\n$ echo \"Last line ...so far\" >> foo\n```", "```\n$ touch test\n```", "```\n$ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\n\n  Changes to be committed:\n    (use \"git reset HEAD <file>...\" to unstage)\n\n      modified:   foo\n\n  Changes not staged for commit:\n    (use \"git add <file>...\" to update what will be committed)\n    (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n      modified:   foo\n\n  Untracked files:\n    (use \"git add <file>...\" to include in what will be committed)\n\n      test\n```", "```\n$ git config --global color.ui true\n$ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\n\nChanges to be committed:\n  (use \"git reset HEAD <file>...\" to unstage)\n\n    modified:   foo\n\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n   (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n     modified:   foo\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\n  test\n```", "```\n$ git log --oneline --decorate --graph\n* c111003 (HEAD -> master, origin/master, origin/HEAD) Update foo and bar\n* 270e97b Add bar\n* 43fd490 Initial commit, adds foo\n```", "```\nif [ -f /etc/bash_completion.d/git-completion.bash ]; then\n source /etc/bash_completion.d/git-completion.bash\nfi  \n```", "```\n$ git che<tab><tab>\ncheckout      cherry        cherry-pick\n```", "```\ngit branch --<tab><tab>\n--abbrev=            --merged             --set-upstream-to=\n--color              --no-abbrev          --track\n--contains           --no-color           --unset-upstream\n--edit-description   --no-merged          --verbose\n--list               --no-track\n```", "```\nif [ -f /etc/bash_completion.d/git-prompt.sh ]; then\n source /etc/bash_completion.d/git-prompt.sh\nfi\n```", "```\nPS1='u@h:w$ '\n```", "```\njohn.doe@yggdrasil:~/cookbook-tips-tricks$\n```", "```\nPS1='u@h:w$(__git_ps1 \" (%s)\") $ ' \n```", "```\njohn.doe@yggdrasil:~/cookbook-tips-tricks (master) $\n```", "```\nexport GIT_PS1_SHOWUPSTREAM=auto\nexport GIT_PS1_SHOWDIRTYSTATE=enabled\nPS1='u@h:w$(__git_ps1 \" (%s)\") $ ' \n```", "```\njohn.doe@yggdrasil:~ $ cd tips_and_tricks/\njohn.doe@yggdrasil:~/tips_and_tricks (master=) $ touch test\njohn.doe@yggdrasil:~/tips_and_tricks (master=) $ git add test\njohn.doe@yggdrasil:~/tips_and_tricks (master +=) $ echo \"Testing\" > test\njohn.doe@yggdrasil:~/tips_and_tricks (master *+=) $ git commit -m \"test\"\n[master 5c66d65] test\n  1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 test\n john.doe@yggdrasil:~/tips_and_tricks (master *>) $\n```", "```\nexport GIT_PS1_SHOWUPSTREAM=auto\nexport GIT_PS1_SHOWDIRTYSTATE=enabled\nexport GIT_PS1_SHOWCOLORHINTS=enabled\nPROMPT_COMMAND='__git_ps1 \"\\u@\\h:\\w\" \"\\$ \"'\n```", "```\n$ git clone https://github.com/PacktPublishing/Git-Version-Control-Cookbook-Second-Edition_tips_and_tricks.git\n$ cd Git-Version-Control-Cookbook-Second-Edition_tips_and_tricks\n$ git checkout aliases\n```", "```\n$ git config alias.b \"rev-parse --abbrev-ref HEAD\"\n$ git b\naliases\n```", "```\n$ git config alias.graph \"log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative\"\n$ git graph origin/conflict aliases\n```", "```\n$ git config alias.unmerged '!git ls-files --unmerged | cut -f2 | sort -u'\n```", "```\n$ git merge origin/conflict\nAuto-merging spaceship.txt\nCONFLICT (content): Merge conflict in spaceship.txt\nAutomatic merge failed; fix conflicts and then commit the result.\n\n```", "```\n$ git status\nOn branch aliases\nYour branch is up-to-date with 'origin/aliases'.\n\nYou have unmerged paths.\n  (fix conflicts and run \"git commit\")\n\n  Unmerged paths:\n    (use \"git add <file>...\" to mark resolution)\n\n      both modified:      spaceship.txt\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n```", "```\n$ git unmerged\nspaceship.txt\n```", "```\n$ git merge --abort\n```", "```\n$ git config alias.st \"status\"\n$ git st\nOn branch aliases\nYour branch is up-to-date with 'origin/aliases'.\n\nnothing to commit, working directory clean\n```", "```\n$ git config alias.s 'status -sb'\n```", "```\n$ touch test\n$ echo testing >> foo\n```", "```\n$ git s\n## aliases...origin/aliases\nM foo\n?? test \n```", "```\n$ git config alias.l1 \"log -1 --shortstat\"\n$ git l1\n commit a43eaa9b461e811eeb0f18cce67e4465888da333\n  Author: John Doe <john.doe@example.com>\n  Date:   Wed May 14 22:46:32 2014 +0200\n\n    Better spaceship design\n\n 1 file changed, 9 insertions(+), 9 deletions(-)\n```", "```\n$ git config alias.l5 \"log -5 --decorate --shortstat\"\n```", "```\n$ git config alias.ll 'log --pretty=format:\"%C(yellow)%h%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %Cred%d%Creset\" --numstat'\n$ git ll -5\n```", "```\n$ git config alias.upstream \"rev-parse --symbolic-full-name --abbrev-ref=strict HEAD@{u}\"\n$ git upstream\norigin/aliases \n```", "```\n$ git config alias.details \"cat-file -p\"\n$ git details HEAD\ntree bdfdaacbb29934b239db814e599342159c4390dd\nparent 8fc1819f157f2c3c25eb973c2a2a412ef3d5517a\nauthor John Doe <john.doe@example.com> 1400100392 +0200\ncommitter John Doe <john.doe@example.com> 1400100392 +0200\n\nBetter spaceship design\n```", "```\n$ git config alias.root \"rev-parse --show-cdup\"\n$ cd sub/directory/example\n$ pwd\n/path/to/cookbook-tips-tricks/sub/directory/example\n$ git root\n../../../\n$ cd $(git root)\n$ pwd\n/path/to/cookbook-tips-tricks\n```", "```\n$ git config alias.path \"rev-parse --show-toplevel\"\n$ git path\n/path/to/cookbook-tips-tricks\n```", "```\n$ git config alias.abandon \"reset --hard\"\n$ echo \"new stuff\" >> foo\n$ git add foo\n$ echo \"other stuff\" >> bar\n$ git s\n## aliases...origin/aliases\nM bar\nM  foo\n?? test\n$ git abandon HEAD\n$ git s\n## aliases...origin/aliases\n?? test\n```", "```\n$ git clone https://github.com/PacktPublishing/Git-Version-Control-Cookbook-Second-Edition_tips_and_tricks.git\n$ cd Git-Version-Control-Cookbook-Second-Edition_tips_and_tricks\n$ git checkout interactive\n```", "```\n$ git reset 'HEAD^'\nUnstaged changes after reset:\nM    liberty.txt\n```", "```\n$ git add -p liberty.txt\ndiff --git a/liberty.txt b/liberty.txt\nindex 8350a2c..9638930 100644\n--- a/liberty.txt\n+++ b/liberty.txt\n@@ -8,6 +8,13 @@\n      WW) ,WWW)\n      7W),WWWW'\n      'WWWWWW'\n+          9---W)\n+      ,,--WPL=YXW===\n+     (P),CY:,I/X'F9P\n+     WUT===---/===9)\n+     -HP+----Y(C=9W)\n+      '9Y3'-'-OWPT-\n+       'WWLUIECW\n      (:7L7C7'\n       ,P--=YWFL\n       Y-=:9)UW:L\nStage this hunk [y,n,q,a,d,/,j,J,g,e,?]?\n```", "```\nStage this hunk [y,n,q,a,d,/,j,J,g,e,?]? \ny - stage this hunk\nn - do not stage this hunk\nq - quit; do not stage this hunk nor any of the remaining ones\na - stage this hunk and all later hunks in the file\nd - do not stage this hunk nor any of the later hunks in the file\ng - select a hunk to go to\n/ - search for a hunk matching the given regex\nj - leave this hunk undecided, see next undecided hunk\nJ - leave this hunk undecided, see next hunk\nk - leave this hunk undecided, see previous undecided hunk\nK - leave this hunk undecided, see previous hunk\ns - split the current hunk into smaller hunks\ne - manually edit the current hunk\n? - print help\n```", "```\nStage this hunk [y,n,q,a,d,/,j,J,g,e,?]? y\n@@ -17,16 +24,17 @@\n       7WYW))PW W\n       7WH)),WC)\n       7L--/XY)\n+DEBUG: Don't include this line...\n          9+-,KY7)\n          W9-Y3+7)\n          W'=9WI7)\n          ,W  '-YY)\n-         W    ::W\n-        ,T     :X)\n-        ()     '9W  'L.                    ,-\n-        (C     =:9   '9L                  ,T\n-        ()    ,,-7)    7WL              ,F'\n-        ()    , T9)     '9WL          ,YF\n+         W    ::W                ,\n+        ,T     :X)              ()\n+        ()     '9W  'L.         ()         ,-\n+        (C     =:9   '9L        ()        ,T\n+        ()    ,,-7)    7WL      WW      ,F'\n+        ()    , T9)     '9WL    --    ,YF\n         ()    '-/(W       -==+PE9P7===O)          -,\n         'W, ,  T+/WX=L-. ,WP+()+3L3,),=WL  --==-T-\n          7)    -,YW '-=9WPL+PT-- ':--L/=9WP=-'\nStage this hunk [y,n,q,a,d,/,K,j,J,g,s,e,?]?\n```", "```\nStage this hunk [y,n,q,a,d,/,K,j,J,g,s,e,?]? s\nSplit into 2 hunks.\n@@ -17,7 +24,8 @@\n        7WYW))PW W\n        7WH)),WC)\n        7L--/XY)\n+DEBUG: Don't include this line...\n         9+-,KY7)\n         W9-Y3+7)\n         W'=9WI7)\n         ,W  '-YY)\nStage this hunk [y,n,q,a,d,/,K,j,J,g,e,?]?  \n```", "```\nStage this hunk [y,n,q,a,d,/,K,j,J,g,e,?]? n\n@@ -20,13 +28,13 @@\n         9+-,KY7)\n         W9-Y3+7)\n         W'=9WI7)\n         ,W  '-YY)\n-         W    ::W\n-        ,T     :X)\n-        ()     '9W  'L.                    ,-\n-        (C     =:9   '9L                  ,T\n-        ()    ,,-7)    7WL              ,F'\n-        ()    , T9)     '9WL          ,YF\n+         W    ::W                ,\n+        ,T     :X)              ()\n+        ()     '9W  'L.         ()         ,-\n+        (C     =:9   '9L        ()        ,T\n+        ()    ,,-7)    7WL      WW      ,F'\n+        ()    , T9)     '9WL    --    ,YF\n         ()    '-/(W       -==+PE9P7===O)          -,\n         'W, ,  T+/WX=L-. ,WP+()+3L3,),=WL  --==-T-\n         7)    -,YW '-=9WPL+PT-- ':--L/=9WP=-'\nStage this hunk [y,n,q,a,d,/,K,j,J,g,e,?]? a\n```", "```\n$ git status\nOn branch interactive\nYour branch is behind 'origin/interactive' by 1 commit, and can be fast-forwarded.\n  (use \"git pull\" to update your local branch)\n\nChanges to be committed:\n  (use \"git reset HEAD <file>...\" to unstage)\n\n     modified:   liberty.txt\n\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n     modified:   liberty.txt\n$ git diff\ndiff --git a/liberty.txt b/liberty.txt\nindex 035083e..9638930 100644\n--- a/liberty.txt\n+++ b/liberty.txt\n@@ -24,6 +24,7 @@\n       7WYW))PW W\n       7WH)),WC)\n       7L--/XY)\n+DEBUG: Don't include this line...\n          9+-,KY7)\n          W9-Y3+7)\n          W'=9WI7)\n```", "```\n$ git commit -m 'Statue of liberty completed'\n[interactive 1ccb885] Statue of liberty completed\n1 file changed, 36 insertions(+), 29 deletions(-)\n```", "```\n$ git add -i\n     staged     unstaged path\n1:    unchanged      +37/-29 liberty.txt\n\n*** Commands ***\n1: status    2: update    3: revert    4: add untracked\n5: patch     6: diff      7: quit      8: help\nWhat now>\n```", "```\nWhat now> p\n          staged     unstaged path\n1:    unchanged      +37/-29 liberty.txt\nPatch update>> 1\n         staged     unstaged path\n* 1:    unchanged      +37/-29 liberty.txt\nPatch update>>\ndiff --git a/liberty.txt b/liberty.txt\nindex 8350a2c..9638930 100644\n--- a/liberty.txt\n+++ b/liberty.txt\n...\n```", "```\n$ git clone https://github.com/PacktPublishing/Git-Version-Control-Cookbook-Second-Edition_tips_and_tricks.git\n$ cd Git-Version-Control-Cookbook-Second-Edition_tips_and_tricks\n$ git checkout interactive\n$ git reset HEAD^\n```", "```\n$ git clone https://github.com/PacktPublishing/Git-Version-Control-Cookbook-Second-Edition_tips_and_tricks.git\n$ cd Git-Version-Control-Cookbook-Second-Edition_tips_and_tricks\n$ git checkout ignore\n```", "```\n$ echo \"Testing\" > test.txt\n$ echo \"Testing\" > test.txt.bak\n$ mkdir bin\n$ touch bin/foobar\n$ touch bin/frotz\n```", "```\n$ git status\nOn branch ignore\nYour branch is up-to-date with 'origin/ignore'.\n\n Untracked files:\n   (use \"git add <file>...\" to include in what will be committed)\n\n     test.txt\n\nnothing added to commit but untracked files present (use \"git add\" to track)\n```", "```\n$ cat .gitignore\n*.config\n*.bak\n\n# Java files\n*.class\n\nbin/\n```", "```\n$ git add bin/frotz\nThe following paths are ignored by one of your .gitignore files:\nbin/frotz\nUse -f if you really want to add them.\n```", "```\n$ git add -f bin/frotz\n$ git status\nOn branch ignore\n  Your branch is up-to-date with 'origin/ignore'.\n\n    Changes to be committed:\n      (use \"git reset HEAD <file>...\" to unstage)\n\n        new file:   bin/frotz\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\ntest.txt\n```", "```\n$ echo \"foo\" >> .gitignore\n$ echo \"more testing\" >> foo\n$ git status\nOn branch ignore\nYour branch is up-to-date with 'origin/ignore'.\n\n  Changes to be committed:\n    (use \"git reset HEAD <file>...\" to unstage)\n\n      new file:   bin/frotz\n\n  Changes not staged for commit:\n    (use \"git add <file>...\" to update what will be committed)\n    (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n      modified:   .gitignore\n      modified:   foo\n\n  Untracked files:\n    (use \"git add <file>...\" to include in what will be committed)\n\n test.txt\n```", "```\n$ git add foo .gitignore\n$ git commit -m 'Add bin/frotz with force, foo & .gitignore'\n[ignore fc60b44] Add bin/frotz with force, foo & .gitignore\n3 files changed, 2 insertions(+)\ncreate mode 100644 bin/frotz\n```", "```\n$ git config --global core.excludesfile ~/.gitignore_global\n```", "```\n$ echo \"*.test\" > .git/info/exclude\n$ touch test.test\n$ git status\nOn branch ignore\n  Your branch is ahead of 'origin/ignore' by 1 commit.\n    (use \"git push\" to publish your local commits)\n\n  Untracked files:\n    (use \"git add <file>...\" to include in what will be committed)\n\n      test.txt\n\nnothing added to commit but untracked files present (use \"git add\" to track)\n$ ls\nbar        bin       foo\ntest.test  test.txt  test.txt.bak\n```", "```\n$ git clean -Xnd\nWould remove bin/foobar\nWould remove test.test\nWould remove test.txt.bak\n```", "```\n$ git ls-files -o -i --exclude-standard\nbin/foobar\ntest.test\ntest.txt.bak\n```", "```\n$ git clean -Xfd\nRemoving bin/foobar\nRemoving test.test\nRemoving test.txt.bak\n```"]