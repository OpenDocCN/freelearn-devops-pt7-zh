- en: '*Chapter 3*: Enhancing Rules with Smart Values'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第3章*：使用智能值增强规则'
- en: The visual rule editor, which we explored in [*Chapter 1*](B16551_01_Final_ASB_ePub.xhtml#_idTextAnchor017),
    *Key Concepts of Automation*, makes the creation of complex automation rules really
    easy and requires no knowledge of the Jira API or any specialist scripting knowledge
    in order to get started.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在[*第1章*](B16551_01_Final_ASB_ePub.xhtml#_idTextAnchor017)中探讨的可视化规则编辑器，*自动化的关键概念*，使得创建复杂的自动化规则变得非常简单，且无需了解Jira
    API或任何专业的脚本知识即可开始。
- en: While this approach will work for a large number of use cases, there will always
    be cases where you will need direct access to issue data and the ability to perform
    more complex functions against this data. This is where smart values come to the
    rescue.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这种方法适用于大多数使用案例，但总有一些情况下，您需要直接访问问题数据并对这些数据执行更复杂的操作。这时，智能值就能派上用场。
- en: This chapter will introduce you to smart values. You will learn how to find
    smart values, how smart functions work, and how you can introduce your own smart
    values into automation rules. You will also get an overview of how to manipulate
    dates, lists of data, text values, and how to perform numeric calculations using
    math expressions.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将介绍智能值。您将学习如何查找智能值，智能函数如何工作，以及如何将您自己的智能值引入自动化规则。您还将概览如何操作日期、数据列表、文本值，以及如何使用数学表达式进行数字计算。
- en: 'In this chapter, we''ll cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Understanding smart values
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解智能值
- en: Using smart value date functions
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用智能值日期函数
- en: Using smart value text functions
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用智能值文本函数
- en: Using smart value list functions
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用智能值列表函数
- en: Using smart value math expressions and functions
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用智能值数学表达式和函数
- en: By the end of this chapter, you will have learned how you can use smart values
    and functions to manipulate dates, text strings, and lists, as well as how to
    use math expressions and functions to perform calculations involving numerical
    values.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您将学会如何使用智能值和函数来操作日期、文本字符串和列表，以及如何使用数学表达式和函数进行涉及数值的计算。
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The requirements for this chapter are as follows:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的要求如下：
- en: '**Jira Cloud environment**: If you don''t already have access to Jira, you
    can create a free Jira Cloud account at [https://www.atlassian.com/software/jira/free](https://www.atlassian.com/software/jira/free)
    and ensure that you have both Jira Software and Jira Service Management selected.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Jira云环境**：如果您还没有Jira的访问权限，您可以在[https://www.atlassian.com/software/jira/free](https://www.atlassian.com/software/jira/free)创建一个免费的Jira云账户，并确保同时选择Jira软件和Jira服务管理。'
- en: '**Jira Server environment**: If you are using Jira Server (available from [https://www.atlassian.com/software/jira/download](https://www.atlassian.com/software/jira/download)),
    ensure you have licenses for both Jira Software and Jira Service Management. In
    addition, you will also need to ensure that you install the *Automation for Jira*
    app, available from the Atlassian Marketplace.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Jira服务器环境**：如果您使用的是Jira服务器（可以从[https://www.atlassian.com/software/jira/download](https://www.atlassian.com/software/jira/download)下载），请确保您已获得Jira软件和Jira服务管理的许可证。此外，您还需要确保安装了*Jira自动化*应用，可以从Atlassian
    Marketplace获取。'
- en: In both instances, you will need to have at least project administrator access
    to a Service Management project and a Scrum Software project to be able to follow
    the examples in this chapter. For the examples in this chapter, we have used the
    *IT Service Management project template* to create the Service Management project,
    and the *Scrum Software project template* to create the Software project.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两种情况下，您需要至少拥有项目管理员访问权限，才能访问服务管理项目和Scrum软件项目，以便跟随本章的示例。在本章的示例中，我们使用了*IT服务管理项目模板*来创建服务管理项目，并使用*Scrum软件项目模板*来创建软件项目。
- en: You can download the latest code samples for this chapter from this book's official
    GitHub repository at [https://github.com/PacktPublishing/Automate-Everyday-Tasks-in-Jira](https://github.com/PacktPublishing/Automate-Everyday-Tasks-in-Jira).
    The Code in Action videos for this chapter are available at [https://bit.ly/39Hk44d](https://bit.ly/39Hk44d).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从本书的官方GitHub仓库下载本章的最新代码示例，网址为[https://github.com/PacktPublishing/Automate-Everyday-Tasks-in-Jira](https://github.com/PacktPublishing/Automate-Everyday-Tasks-in-Jira)。本章的《实战代码》视频可以在[https://bit.ly/39Hk44d](https://bit.ly/39Hk44d)观看。
- en: Understanding smart values
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解智能值
- en: Smart values allow you to access and manipulate almost all issue data in the
    context of an automation rule. In addition to allowing you to access the issue
    data, smart values also provide advanced functionality in the form of functions
    that allow you to perform complex operations on the issue data.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 智能值允许你在自动化规则的上下文中访问和操作几乎所有问题数据。除了让你访问问题数据外，智能值还通过函数提供高级功能，使你能够对问题数据执行复杂操作。
- en: In this section, we'll explore what smart values are available to you and how
    to recognize and use them in rules. We will also introduce you to smart value
    functions and explain how you can create your own smart values for use in your
    rules.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将探讨哪些智能值对你可用，并了解如何在规则中识别和使用它们。我们还将介绍智能值函数，并解释如何创建你自己的智能值以供在规则中使用。
- en: Let's begin by taking a look at where we can find smart values and how to use
    them.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先来看一下可以在哪里找到智能值以及如何使用它们。
- en: Finding and using smart values
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查找和使用智能值
- en: Smart values are generally set in the rule context by the trigger that initiated
    execution of the rule. In addition, certain actions, such as the **Send web request**
    action, can also introduce smart values into the rule context.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 智能值通常由触发器在规则执行的上下文中设置。除此之外，某些操作（例如**发送 web 请求**操作）也可以将智能值引入规则上下文。
- en: Each of the smart values made available by these triggers are data structures
    that contain fields. These can either be simple field types, such as text or numbers,
    or more complex data structures that, in turn, contain other fields.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这些触发器所提供的每个智能值都是包含字段的数据结构。这些字段可以是简单的字段类型，例如文本或数字，或者是更复杂的数据结构，后者又包含其他字段。
- en: For example, a trigger such as `{{issue}}` to the current Jira issue in the
    rule context. This smart value is a data structure that represents an issue in
    Jira and contains both simple and complex fields.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，触发器可以是`{{issue}}`，用于当前 Jira 问题的规则上下文。此智能值是一个数据结构，表示 Jira 中的一个问题，并包含简单和复杂字段。
- en: Examples of simple fields would be `{{issue.summary}}` and `{{issue.key}}`,
    which allow you to access the summary and key of the issue, respectively. An example
    of a complex field, a field that itself is a data object, would be `{{issue.assignee}}`,
    as it itself contains further fields, which allow you to access the assignee's
    display name, email address, and accountId fields in the case of `{{issue.assignee.displayName}}`,
    `{{issue.assignee.emailAddress}}`, `{{issue.assignee.accountId}}`, and `{{issue.assignee.key}}`,
    respectively.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 简单字段的示例包括`{{issue.summary}}`和`{{issue.key}}`，它们分别允许你访问问题的摘要和关键字。一个复杂字段的示例是`{{issue.assignee}}`，它本身是一个数据对象，包含进一步的字段，允许你访问被分配者的显示名称、电子邮件地址和账户
    ID 字段，例如 `{{issue.assignee.displayName}}`、`{{issue.assignee.emailAddress}}`、`{{issue.assignee.accountId}}`
    和 `{{issue.assignee.key}}`。
- en: Tip
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: To access a custom field in a smart value, you can either use the custom field's
    name or its ID. For example, if you had a custom field named `My Custom Field`
    with an ID value of `10000`, you could access it in a smart value as either `{{issue.My
    Custom Field}}`, `{{issue.my custom field}}`, or `{{issue.customfield_10000}}`.
    You can find the custom field ID by editing the custom field from the **Custom
    Fields** admin section and copying the ID from the resulting URL. However, you
    should only use this approach if, for some reason, you have multiple custom fields
    with the same name.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 要在智能值中访问自定义字段，你可以使用自定义字段的名称或其 ID。例如，如果你有一个名为`My Custom Field`的自定义字段，ID 为`10000`，你可以通过`{{issue.My
    Custom Field}}`、`{{issue.my custom field}}` 或 `{{issue.customfield_10000}}`来访问它。你可以通过编辑自定义字段并从**自定义字段**管理部分复制结果
    URL 中的 ID 来找到自定义字段的 ID。然而，如果出于某种原因，你有多个名称相同的自定义字段，才应该使用这种方法。
- en: 'In the following table, we can see the smart values made available by each
    automation trigger that you can use in subsequent rule components:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在下表中，我们可以看到每个自动化触发器所提供的智能值，你可以在随后的规则组件中使用这些值：
- en: '![Figure 3.1 - Smart values available by trigger'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.1 - 根据触发器提供的智能值'
- en: '](img/Figure_3.1_B16551.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.1_B16551.jpg)'
- en: Figure 3.1 - Smart values available by trigger
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.1 - 根据触发器提供的智能值
- en: The preceding table shows the main smart value for each trigger and, for the
    majority of cases, you can find the fields available for each of these smart values
    listed at [https://support.atlassian.com/jira-software-cloud/docs/smart-values-general](https://support.atlassian.com/jira-software-cloud/docs/smart-values-general)
    for Jira Cloud, or [https://confluence.atlassian.com/display/AUTOMATION/Smart+values](https://confluence.atlassian.com/display/AUTOMATION/Smart+values)
    for Jira Server and Jira Data Center.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 上表展示了每个触发器的主要智能值，对于大多数情况，您可以在 [https://support.atlassian.com/jira-software-cloud/docs/smart-values-general](https://support.atlassian.com/jira-software-cloud/docs/smart-values-general)
    找到适用于 Jira Cloud 的每个智能值的字段列表，或者在 [https://confluence.atlassian.com/display/AUTOMATION/Smart+values](https://confluence.atlassian.com/display/AUTOMATION/Smart+values)
    中找到适用于 Jira Server 和 Jira Data Center 的字段列表。
- en: Smart values are based on the Mustache templating system (https://mustache.github.io).
    To use smart values (or tags, as they are referred to in Mustache), you surround
    keys using double curly braces (or mustaches). Using this format signifies to
    the rule engine that it needs to treat the given value as a smart value, and not
    just static text.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 智能值基于 Mustache 模板系统（https://mustache.github.io）。要使用智能值（或 Mustache 中称为标签），您需要将键包围在双大括号中（或称作大胡子符号）。使用这种格式意味着规则引擎需要将给定的值视为智能值，而不仅仅是静态文本。
- en: 'To access fields within smart value objects, you use dot notation. For example,
    to access the display name of the assignee of an issue, you would use dot notation
    as follows: `{{issue.assignee.displayName}}`.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问智能值对象中的字段，可以使用点符号。例如，要访问问题的指派人的显示名称，可以使用如下的点符号：`{{issue.assignee.displayName}}`。
- en: Tip
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: When you reference a field or value that does not exist in a particular issue,
    the smart value will be empty. You can instead specify that a smart value has
    a default value by using the pipe (|) symbol. For example, the smart value `{{issue.description|No
    description was supplied}}` will return the text **No description was supplied**
    if the **Description** field is empty.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 当您引用某个字段或值，该字段在特定问题中不存在时，智能值将为空。您可以通过使用管道符号（|）指定智能值的默认值。例如，智能值 `{{issue.description|没有提供描述}}`
    如果 **描述** 字段为空，将返回文本 **没有提供描述**。
- en: Smart values can be used in **Advanced compare condition**, **JQL condition**,
    and **User condition**, as well as in most rule actions.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 智能值可以在 **高级比较条件**、**JQL 条件** 和 **用户条件** 中使用，也可以在大多数规则动作中使用。
- en: Let's take a look at an example rule that uses smart values.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一个使用智能值的示例规则。
- en: Creating a rule to add a comment when issues first become assigned
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建规则，在问题首次被指派时添加评论
- en: 'In this example rule, we are going to add a comment to the issue when the issue
    is first assigned, which will notify the reporter that we''re working on their
    request:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例规则中，我们将在问题首次指派时添加评论，通知报告者我们正在处理他们的请求：
- en: In your Service Management project, navigate to **Project settings**, click
    the **Automation** tab, and then click on **Create rule**.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的服务管理项目中，导航到 **项目设置**，点击 **自动化** 标签，然后点击 **创建规则**。
- en: Select **Issue assigned** and then click **Save**.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **问题已指派**，然后点击 **保存**。
- en: Then select `{{changelog.assignee.fromString}}`
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后选择 `{{changelog.assignee.fromString}}`
- en: '`equals`'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`equals`'
- en: '**Second value**: Leave blank'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**第二个值**：留空'
- en: Now, select `Hi {{issue.reporter.displayName}}`
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，选择 `Hi {{issue.reporter.displayName}}`
- en: '`We''re now looking into your issue {{issue.summary}}.`'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`我们现在正在查看您的问题 {{issue.summary}}。`'
- en: '`We''ll get back to you soon with an update.`'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`我们会尽快为您提供更新。`'
- en: '`{{issue.assignee.displayName}}.`'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`{{issue.assignee.displayName}}。`'
- en: 'The rule should look as follows:'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 规则应该如下所示：
- en: '![Figure 3.2 - Using smart values in a rule'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.2 - 在规则中使用智能值'
- en: '](img/Figure_3.2_B16551.jpg)'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_3.2_B16551.jpg)'
- en: Figure 3.2 - Using smart values in a rule
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.2 - 在规则中使用智能值
- en: Finally, name the rule `Comment to reporter on issue assigned` and click **Turn
    it on** to save and enable the rule.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，命名规则为 `在问题指派时给报告者评论`，然后点击 **启用** 来保存并启用该规则。
- en: In this section, we learned how we can use smart values in our rules to make
    them more flexible and, in the next section, we will introduce you to smart value
    functions.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们了解了如何在规则中使用智能值使其更加灵活，在下一节中，我们将介绍智能值函数。
- en: Smart value functions
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 智能值函数
- en: In addition to the ability to access data fields with smart values, you can
    also manipulate these data values with the addition of functions.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 除了使用智能值访问数据字段的功能外，您还可以通过添加函数来操作这些数据值。
- en: 'Functions are generally appended to the end of smart values using dot notation.
    For example, to truncate the issue summary to the first 50 characters and add
    an ellipsis to the end of the truncated summary, we would use the following smart
    function: `{{issue.summary.abbreviate(50)}}`.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 函数通常通过点符号附加到智能值的末尾。例如，若要将问题摘要截断为前50个字符并在截断后的摘要末尾添加省略号，我们将使用以下智能函数：`{{issue.summary.abbreviate(50)}}`。
- en: Important note
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Smart value functions can only be applied to fields of the corresponding type.
    For example, date and time functions can only be applied to the *created*, *updated*,
    *duedate*, *resolutiondate*, and any custom fields with *Date Picker* or *Date
    Time Picker* types.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 智能值函数只能应用于相应类型的字段。例如，日期和时间函数只能应用于*创建时间*、*更新时间*、*截止日期*、*解决日期*以及任何具有*日期选择器*或*日期时间选择器*类型的自定义字段。
- en: 'Smart functions can also be chained together, allowing us to perform multiple
    transformations in a single step. For example, the following smart function chain
    will convert the summary to lowercase, extract the fifth to tenth characters,
    and then append an exclamation to the end: `{{issue.summary.toLowerCase().substring(5,10).concat("!")}}`.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 智能函数也可以串联在一起，使我们能够在单个步骤中执行多个转换。例如，以下智能函数链将把摘要转换为小写字母，提取第五到第十个字符，并在末尾附加一个感叹号：`{{issue.summary.toLowerCase().substring(5,10).concat("!")}}`。
- en: Let's look at an example of using smart value functions in a rule.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个在规则中使用智能值函数的示例。
- en: Creating a rule to add a comment asking for screenshots
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建一个规则，要求添加截图评论
- en: 'In this example, we are going to create a manually triggered rule that a user
    can invoke to create a customized comment on the issue requesting the reporter
    to upload attachments to help further diagnose an issue:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，我们将创建一个手动触发的规则，用户可以调用此规则来在问题上创建定制的评论，请求报告人上传附件以帮助进一步诊断问题：
- en: In your Service Management project, navigate to **Project settings**, click
    the **Automation** tab, and then click on **Create rule**.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的服务管理项目中，导航到**项目设置**，点击**自动化**标签，然后点击**创建规则**。
- en: Select **Manual trigger** and click **Save**.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**手动触发**并点击**保存**。
- en: Next, select `Hi {{issue.reporter.displayName.split(" ").first}}`
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，选择`Hi {{issue.reporter.displayName.split(" ").first}}`
- en: '`We require a little more info in order to diagnose your issue further.`'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`我们需要更多的信息以便进一步诊断您的问题。`'
- en: '`Please take a screenshot and attach it to this issue by no later than {{now.plusBusinessDays(2).fullDate}}.`'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`请在{{now.plusBusinessDays(2).fullDate}}之前截图并附加到此问题。`'
- en: '`Thank you :)`'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`谢谢 :)`'
- en: '`{{issue.assignee.displayName}}`'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`{{issue.assignee.displayName}}`'
- en: 'The rule should look similar to the following screenshot:'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该规则应该与以下截图类似：
- en: '![Figure 3.3 - Using smart value functions'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.3 - 使用智能值函数](img/Figure_3.3_B16551.jpg)'
- en: '](img/Figure_3.3_B16551.jpg)'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_3.3_B16551.jpg)'
- en: Figure 3.3 - Using smart value functions
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.3 - 使用智能值函数
- en: Finally, name the rule `Ask reporter to attach screenshot` and click **Turn
    it on** to save and enable the rule.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，将规则命名为`要求报告人附加截图`，然后点击**开启**以保存并启用该规则。
- en: Important note
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要提示
- en: In Jira Cloud, it is possible to use the *Create variable* action to create
    a custom smart value based on other smart value functions and expressions that
    you can then make use of in later conditions and actions.
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在Jira Cloud中，可以使用*创建变量*操作，根据其他智能值函数和表达式创建自定义智能值，然后在后续的条件和操作中使用它。
- en: In this section, we learned what smart values are and how we can use them to
    access data in automation rules. We also learned how to find the correct smart
    value for triggers and how to find the associated smart value fields. We also
    looked at smart value functions and saw how we can chain them together to apply
    multiple transformations in a single step.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们了解了什么是智能值，以及如何在自动化规则中使用它们访问数据。我们还学习了如何为触发器找到正确的智能值，并如何找到相关的智能值字段。我们还了解了智能值函数，并看到了如何将它们连接在一起，在单个步骤中应用多个转换。
- en: In the next section, we will look at how we can use smart values to manipulate
    and format dates in automation rules.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一部分，我们将学习如何在自动化规则中使用智能值来操作和格式化日期。
- en: Using smart value date functions
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用智能值日期函数
- en: As a project management and tracking tool, having the ability to manipulate
    dates in Jira is critical to the correct operation of the application, and smart
    values in automation rules give us a lot of flexibility in how we can use and
    manipulate dates and times in rules.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 作为项目管理和跟踪工具，在Jira中能够操作日期对于应用程序的正常运行至关重要，而自动化规则中的智能值为我们提供了在规则中使用和操作日期和时间的灵活性。
- en: In this section, we will look at how we can use smart values to format dates
    and times for inclusion in other date and time fields, as well as how to format
    them for use in other fields such as text fields, the advanced field editor, or
    for use in notifications.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将探讨如何使用智能值格式化日期和时间，以便将其包含在其他日期和时间字段中，以及如何将其格式化以便在文本字段、高级字段编辑器或通知中使用。
- en: We will also explore all the available formats and functions applicable to dates
    and see how we can use these in automation rules.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将探索所有可用的日期格式和函数，并了解如何在自动化规则中使用它们。
- en: Tip
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: You can access the current date and time using the smart value *{{now}}*. All
    formatting and date manipulation functions that can be used with date fields can
    also be used with the *{{now}}* smart value.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用智能值*{{now}}*访问当前的日期和时间。所有可以与日期字段一起使用的格式化和日期操作函数，也可以与*{{now}}*智能值一起使用。
- en: Let's take a look at how we can format dates using smart value functions.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下如何使用智能值函数来格式化日期。
- en: Formatting dates
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 格式化日期
- en: The ability to format dates and times gives us flexibility in how we can display
    these to users, in either comments, text fields, or notifications. It also allows
    us to be able to specify the exact format to use when communicating with external
    systems that require date and time inputs in specific formats and in reformatting
    dates and times received from external systems.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 格式化日期和时间的能力使我们可以灵活地展示这些信息，无论是在评论、文本字段还是通知中。它还使我们能够在与需要特定格式日期和时间输入的外部系统进行通信时，指定确切的格式，以及重新格式化从外部系统接收到的日期和时间。
- en: Finally, being able to control the format of dates and times allows us to manipulate
    them using smart value functions and ensure that we can set a date or time field
    with the resulting calculation correctly.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，能够控制日期和时间的格式使我们可以使用智能值函数对它们进行操作，并确保可以使用正确的计算结果设置日期或时间字段。
- en: 'In the following table, we can see how the date, *Tuesday, December 31, 2019
    10:25:30 PM CET* will be formatted using each of the available date and time formats
    available to automation rules:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在下表中，我们可以看到如何使用每种可用的日期和时间格式来格式化日期 *2019年12月31日 星期二 10:25:30 PM CET*，这些格式可用于自动化规则：
- en: '![Figure 3.4 - Available date formats'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.4 - 可用的日期格式'
- en: '](img/Figure_3.4_B16551.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.4_B16551.jpg)'
- en: Figure 3.4 - Available date formats
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.4 - 可用的日期格式
- en: As you can see from the preceding list, dates and times can be formatted for
    display in a variety of ways, and it is also possible to use a custom pattern
    if none of the standard ones are suitable.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的列表中可以看到，日期和时间可以通过多种方式格式化显示，如果没有合适的标准格式，也可以使用自定义模式。
- en: Tip
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: The pattern syntax used for the custom formatters `format("pattern")` and `as("pattern")`
    are defined by the underlying Java platform and the full syntax descriptions can
    be found at the following link, [https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html),
    under the heading *Patterns for Formatting and Parsing*.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 用于自定义格式化器`format("pattern")`和`as("pattern")`的模式语法由底层Java平台定义，完整的语法描述可以在以下链接中找到：[https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html)，请参阅标题
    *格式化和解析模式*。
- en: Formatting dates with locales and time zones
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用地区和时区格式化日期
- en: In addition to the formats that we have just looked at, with smart values, it
    is also possible to format dates and times for specific locales and time zones,
    or even the locale or time zone of a specific user, such as the assignee or reporter
    of an issue.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 除了我们刚才查看的格式之外，使用智能值还可以根据特定的地区和时区，甚至是特定用户的地区或时区（例如问题的受让人或报告人）来格式化日期和时间。
- en: 'The following formatting functions are provided to enable locale- and time
    zone-based formatting of dates and times:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 提供了以下格式化函数，用于实现基于地区和时区的日期和时间格式化：
- en: '`{{issue.created.withLocale("fr_CA")}}` to format the issue created date using
    Canadian French, or `{{issue.created.withLocale(issue.reporter.locale)}}` to format
    the issue created date using the reporter''s locale.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`{{issue.created.withLocale("fr_CA")}}` 用于使用加拿大法语格式化问题创建日期，或者 `{{issue.created.withLocale(issue.reporter.locale)}}`
    用于根据报告者的语言环境格式化问题创建日期。'
- en: '`{{issue.created.convertToTimeZone("America/New_York")}}` to format the issue
    created date to display in the current time zone in New York, or `{{issue.created.convertToTimeZone(issue.reporter.timeZone)}}`
    to format the issue created date to the reporter''s time zone.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`{{issue.created.convertToTimeZone("America/New_York")}}` 用于将问题创建日期格式化为纽约当前时区，或者
    `{{issue.created.convertToTimeZone(issue.reporter.timeZone)}}` 用于将问题创建日期格式化为报告者的时区。'
- en: '**setTimeZone(string timezone)**: Sets the time zone component of the **DateTime**
    field to the given time zone. This function will change the time zone without
    converting the time.'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**setTimeZone(string timezone)**：将**日期时间**字段的时区组件设置为给定的时区。此函数将更改时区而不转换时间。'
- en: The full list of supported locales can be found at https://www.oracle.com/java/technologies/javase/jdk11-suported-locales.html#modules.
    The list of time zones is defined by the tz database and the full list can be
    found at [https://en.wikipedia.org/wiki/List_of_tz_database_time_zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 支持的完整语言环境列表可以在 [https://www.oracle.com/java/technologies/javase/jdk11-suported-locales.html#modules](https://www.oracle.com/java/technologies/javase/jdk11-suported-locales.html#modules)
    找到。时区列表由 tz 数据库定义，完整列表可以在 [https://en.wikipedia.org/wiki/List_of_tz_database_time_zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)
    找到。
- en: Let's see how we can use date formats in an example rule.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何在示例规则中使用日期格式。
- en: Creating a rule to create onboarding sub-tasks
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建规则以创建入职子任务
- en: In this rule, when a new employee onboarding request is created, we need to
    ensure that certain tasks, such as provisioning a laptop and desk phone, are completed
    before the new employee starts.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在此规则中，当创建一个新的员工入职请求时，我们需要确保在新员工开始工作之前完成一些任务，例如提供笔记本电脑和桌面电话。
- en: 'We want the sub-task summaries to include the start date so that it is immediately
    apparent to the user assigned to the request when the task is due:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望子任务摘要中包含开始日期，这样被分配到该请求的用户就能立刻看到任务的到期时间：
- en: In your Service Management project, navigate to **Project settings**, click
    on the **Automation** tab, and then click on **Create rule**.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的服务管理项目中，导航到**项目设置**，点击**自动化**标签页，然后点击**创建规则**。
- en: Select the **Issue created** trigger and click **Save**.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**问题创建**触发器并点击**保存**。
- en: Then select `Request Type`
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后选择 `请求类型`
- en: '`equals`'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`等于`'
- en: '`Onboard new employees`'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`新员工入职`'
- en: Next, select `Provision new laptop by {{issue.duedate.longDate}}`
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，选择 `在{{issue.duedate.longDate}}之前提供新的笔记本电脑`
- en: '`Setup new desk phone by {{issue.duedate.longDate}}`'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`在{{issue.duedate.longDate}}之前设置新的桌面电话`'
- en: 'The rule should look similar to the following screenshot:'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 规则应该类似于以下截图：
- en: '![Figure 3.5 - Using the smart value date format'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.5 - 使用智能值日期格式](img/Figure_3.5_B16551.jpg)'
- en: '](img/Figure_3.5_B16551.jpg)'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_3.5_B16551.jpg)'
- en: Figure 3.5 - Using the smart value date format
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.5 - 使用智能值日期格式
- en: Finally, click `Create onboarding sub-tasks`, and click **Turn it on** to save
    and enable the rule.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，点击`创建入职子任务`，然后点击**启用**以保存并启用规则。
- en: Now that we've seen how to format dates and time, let's take a look at how we
    can manipulate them using smart value functions.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经看到如何格式化日期和时间，让我们来看看如何使用智能值函数对其进行操作。
- en: Manipulating dates
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作日期
- en: In addition to providing the ability to format dates, a number of smart value
    functions are provided that enable us to perform operations on dates. These operations
    allow us to perform comparisons on dates and times, perform basic arithmetic on
    dates and times, and manipulate the various components of dates and times.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 除了提供格式化日期的功能外，还提供了许多智能值函数，使我们能够对日期进行操作。这些操作允许我们对日期和时间进行比较，进行基本的算术运算，并操作日期和时间的各个组成部分。
- en: 'Let''s take a look at the functions you can use to manipulate dates in your
    rules. The first set of functions relate to date comparisons and allow you to
    compare one date with another:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看在规则中可以使用的日期操作函数。第一组函数涉及日期比较，允许你将一个日期与另一个日期进行比较：
- en: '`function` parameter. This function will return `date` parameter, and **false**
    otherwise.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`function` 参数。此函数将返回 `date` 参数，否则返回**false**。'
- en: '`function` parameter. This function will return `date` parameter, and **false**
    otherwise.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`function` 参数。此函数将返回 `date` 参数，否则返回**false**。'
- en: '`function` parameter. This function will return `date` parameter, and **false**
    otherwise.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`function` 参数。此函数将返回 `date` 参数，否则返回**false**。'
- en: '`-1`) when the date field used to call the function is earlier than the date
    in the parameter, `0` if they are equal, or a positive integer (such as `1`) if
    the date field is later than the date field in the parameter.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-1`) 当用于调用函数的日期字段早于参数中的日期时，`0` 如果它们相等，或者当日期字段晚于参数中的日期字段时返回正整数（如`1`）。'
- en: 'The next set of functions allows us to manipulate dates and times in various
    ways:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 下一组函数允许我们以各种方式操作日期和时间：
- en: '`diffDate(date).seconds` will display the difference between the dates in seconds.
    The default output is *prettyPrint*, which displays the difference in words, for
    example, *2 days 3 hours*.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`diffDate(date).seconds` 将显示日期之间的差异（以秒为单位）。默认输出为*prettyPrint*，以文字形式显示差异，例如，*2天3小时*。'
- en: '**plusDays(int days)**/**minusDays(int days)**: Adds or subtracts the given
    number of days to or from the respective date component and returns a new date
    with the relevant calculation applied.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**plusDays(int days)**/**minusDays(int days)**: 向相应的日期组件添加或减去给定的天数，并返回应用了相关计算的新日期。'
- en: '**plusHours(int hours)**/**minusHours(int hours)**: Adds or subtracts the given
    number of hours to or from the respective date component and returns a new date
    with the relevant calculation applied.'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**plusHours(int hours)**/**minusHours(int hours)**: 向相应的日期组件添加或减去给定的小时数，并返回应用了相关计算的新日期。'
- en: '**plusWeeks(int weeks)**/**minusWeeks(int weeks)**: Adds or subtracts the given
    number of weeks to or from the respective date component and returns a new date
    with the relevant calculation applied.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**plusWeeks(int weeks)**/**minusWeeks(int weeks)**: 向相应的日期组件添加或减去给定的周数，并返回应用了相关计算的新日期。'
- en: '**plusMillis(int millis)**/**minusMillis(int millis)**: Adds or subtracts the
    given number of milliseconds to or from the respective date component and returns
    a new date with the relevant calculation applied.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**plusMillis(int millis)**/**minusMillis(int millis)**: 向相应的日期组件添加或减去给定的毫秒数，并返回应用了相关计算的新日期。'
- en: '**plusMinutes(int minutes)**/**minusMinutes(int minutes)**: Adds or subtracts
    the given number of minutes to or from the respective date component and returns
    a new date with the relevant calculation applied.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**plusMinutes(int minutes)**/**minusMinutes(int minutes)**: 向相应的日期组件添加或减去给定的分钟数，并返回应用了相关计算的新日期。'
- en: '**plusMonths(int months)**/**minusMonths(int months)**: Adds or subtracts the
    given number of months to or from the respective date component and returns a
    new date with the relevant calculation applied.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**plusMonths(int months)**/**minusMonths(int months)**: 向相应的日期组件添加或减去给定的月数，并返回应用了相关计算的新日期。'
- en: '**plusSeconds(int seconds)**/**minusSeconds(int seconds)**: Adds or subtracts
    the given number of seconds to or from the respective date component and returns
    a new date with the relevant calculation applied.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**plusSeconds(int seconds)**/**minusSeconds(int seconds)**: 向相应的日期组件添加或减去给定的秒数，并返回应用了相关计算的新日期。'
- en: '**plusYears(int years)**/**minusYears(int years)**: Adds or subtracts the given
    number of years to or from the respective date component and returns a new date
    with the relevant calculation applied.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**plusYears(int years)**/**minusYears(int years)**: 向相应的日期组件添加或减去给定的年份数，并返回应用了相关计算的新日期。'
- en: '**plusBusinessDays(int days)**/**minusBusinessDays(int days)**: Adds or subtracts
    the given number of business days to or from the respective date component and
    returns a new date with the relevant calculation applied. A business day is defined
    as the hours of 9 a.m. to 6 p.m., Monday to Friday.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**plusBusinessDays(int days)**/**minusBusinessDays(int days)**: 向相应的日期组件添加或减去给定的工作日数，并返回应用了相关计算的新日期。工作日定义为从周一到周五，上午9点到下午6点。'
- en: '**toBusinessDay**/**toBusinessDayBackwards**: Returns the first business day
    after or before the date used to call the function, respectively.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**toBusinessDay**/**toBusinessDayBackwards**: 分别返回调用函数时的日期之前或之后的第一个工作日。'
- en: '**toStartOfDay**/**toDateTimeAtStartOfDay**: Sets the time components to zero
    (that is, midnight) for the given date using the server''s default time zone.
    The first function is used for **DateTime** fields, while the second function
    will convert a **Date** field to a **DateTime** field and set the time component
    accordingly.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**toStartOfDay**/**toDateTimeAtStartOfDay**: 使用服务器的默认时区将给定日期的时间组件设置为零（即午夜）。第一个函数用于**DateTime**字段，而第二个函数会将**Date**字段转换为**DateTime**字段，并相应地设置时间组件。'
- en: '**toCurrentTime**/**toDateTimeAtCurrentTime**: Sets the time components to
    the current time for the given date. The first function is used for **DateTime**
    fields, while the second function will convert a **Date** field to a **DateTime**
    field and set the time component accordingly.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**toCurrentTime**/**toDateTimeAtCurrentTime**：将给定日期的时间组件设置为当前时间。第一个函数用于**日期时间**字段，而第二个函数将**日期**字段转换为**日期时间**字段，并相应地设置时间组件。'
- en: '`MON`*,* `TUE`, `WED`, `THU`, `FRI`, `SAT`, or `SUN` as values for the `dayOfWeek`
    parameter.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MON`*,* `TUE`，`WED`，`THU`，`FRI`，`SAT`，或`SUN`作为`dayOfWeek`参数的值。'
- en: '`dayOfMonth`. The allowable range for the `dayOfMonth` parameter is `1` to
    `31`.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dayOfMonth`。`dayOfMonth`参数的有效范围是`1`到`31`。'
- en: '`0` to `23`.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0` 到 `23`。'
- en: '`0` to `999`.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0` 到 `999`。'
- en: '`0` to `59`.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0` 到 `59`。'
- en: '`1` to `12`.'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`1` 到 `12`。'
- en: '`0` to `59`.'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0` 到 `59`。'
- en: '**withYear(int year)**: Sets the year component of the **Date** or **DateTime**
    field to the supplied year. The allowable range for the year parameter is any
    valid year in the Gregorian calendar.'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**withYear(int year)**：将**日期**或**日期时间**字段的年份组件设置为提供的年份。年份参数的有效范围是公历中的任何有效年份。'
- en: '`dayOfYear`. The allowable range for the `dayOfYear` parameter is `1` to `365`.'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dayOfYear`。`dayOfYear`参数的有效范围是`1`到`365`。'
- en: '**startOfMonth**/**endOfMonth**: Sets the date component of the **Date** or
    **DateTime** field to the first or last calendar day of the month in the field''s
    month component.'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**startOfMonth**/**endOfMonth**：将**日期**或**日期时间**字段的日期组件设置为该字段所在月的第一个或最后一个日历日。'
- en: '**firstBusinessDayOfMonth**/**lastBusinessDayOfMonth**: Sets the day of month
    component of the **Date** or **DateTime** field to the first or last business
    day of the month in the field''s month component.'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**firstBusinessDayOfMonth**/**lastBusinessDayOfMonth**：将**日期**或**日期时间**字段的日期组件设置为该字段所在月的第一个或最后一个工作日。'
- en: '`1` to `7`, 1 being Monday and `7` being Sunday. For example, calling `{{datefield.firstOfTheMonth(3)}}`
    will set the date to the first Wednesday of the month.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`1` 到 `7`，1代表星期一，`7`代表星期天。例如，调用`{{datefield.firstOfTheMonth(3)}}`将日期设置为本月的第一个星期三。'
- en: '`weekOfMonth` parameter is from `1` to `5` and the range for the `dayOfWeek`
    parameter is `1` to `7`, `1` being Monday and `7` being Sunday. For example, to
    set the date to the third Monday of the month, you would use `{{datefield.ofTheMonth(3,
    1)}}`.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`weekOfMonth`参数的范围是`1`到`5`，`dayOfWeek`参数的范围是`1`到`7`，1代表星期一，`7`代表星期天。例如，要将日期设置为本月的第三个星期一，可以使用`{{datefield.ofTheMonth(3,
    1)}}`。'
- en: Now that we've taken a look at the various functions available to manipulate
    dates and times, let's take a look at a couple of examples of how to use them
    in rules.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经查看了用于操作日期和时间的各种函数，让我们看几个示例，了解如何在规则中使用它们。
- en: Creating a rule to update the due date based on sub-tasks
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建一个基于子任务更新到期日期的规则
- en: 'For this example, we have a number of sub-tasks for each user story in the
    software project, and we would like to update the due date of the user story to
    5 business days from the current date when the last sub-task transitions to **In
    Progress**:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我们为每个用户故事设置了多个子任务，并希望在最后一个子任务过渡到**进行中**时，将用户故事的到期日期更新为当前日期后的5个工作日：
- en: In your Software project, navigate to **Project settings**, click the **Automation**
    tab (or **Project automation** tab if you're using Jira Server), and then click
    on **Create rule**.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的软件项目中，导航到**项目设置**，点击**自动化**标签（如果你使用的是Jira Server，则为**项目自动化**标签），然后点击**创建规则**。
- en: Select the **Issue transitioned** trigger and set the **To status** field to
    **In Progress** and then click **Save**.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**问题过渡**触发器，并将**到状态**字段设置为**进行中**，然后点击**保存**。
- en: Then select `Issue Type`
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后选择`问题类型`
- en: '`equals`'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`equals`'
- en: '`Sub-task`'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`子任务`'
- en: Next, select **Branch rule / related issues**, set **Type of related issues**
    to **Parent**, and then click **Save**.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，选择**分支规则/相关问题**，将**相关问题类型**设置为**父项**，然后点击**保存**。
- en: Now select `Sub-tasks`
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在选择`子任务`
- en: '`All match specified JQL`'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`完全匹配指定的JQL`'
- en: '`status = "In Progress"`'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`status = "进行中"`'
- en: Select `{{now.plusBusinessDays(5)}}` in the **Due date** field and click **Save**.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**到期日期**字段中选择`{{now.plusBusinessDays(5)}}`并点击**保存**。
- en: 'Your rule should now look similar to the following screenshot:'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在你的规则应该类似于以下截图：
- en: '![Figure 3.6 - Adding business days to the current date'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![Figure 3.6 - Adding business days to the current date'
- en: '](img/Figure_3.6_B16551.jpg)'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_3.6_B16551.jpg)'
- en: Figure 3.6 - Adding business days to the current date
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Figure 3.6 - Adding business days to the current date
- en: Finally, name your rule `Set user story due date` and click **Turn it on** to
    save and enable the rule.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，给你的规则命名为`设置用户故事到期日期`，然后点击**启用**以保存并启用该规则。
- en: Let's now take a look at another example of using smart value functions to manipulate
    dates.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看另一个使用智能值函数操作日期的示例。
- en: Creating a rule to set the due date
  id: totrans-175
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建设置截止日期的规则
- en: 'For this example, we want to set the due date of an issue to the 15th of the
    current month if the issue is created before the 15th of the month, and to the
    15th of the following month if the issue is created after the 15th of the month:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个示例，我们希望如果问题在本月15日之前创建，则将截止日期设置为本月15日；如果问题在本月15日之后创建，则将截止日期设置为下个月15日：
- en: In your Software project, navigate to **Project settings**, click the **Automation**
    tab (or the **Project automation** tab if you're using Jira Server), and then
    click on **Create rule**.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的软件项目中，导航至**项目设置**，点击**自动化**标签（如果您使用的是Jira Server，则是**项目自动化**标签），然后点击**创建规则**。
- en: Select **Issue created** and then click **Save**.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**问题创建**，然后点击**保存**。
- en: Next, select **New condition**, followed by **If / else block**, and add an
    **Advanced compare condition** to the If block.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，选择**新条件**，然后选择**如果/否则区块**，并为“如果”区块添加**高级比较条件**。
- en: Set the fields for the `{{issue.created}}`
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置`{{issue.created}}`字段
- en: '`greater than`'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`greater than`'
- en: '`{{now.startOfMonth.plusDays(15)}}`'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`{{now.startOfMonth.plusDays(15)}}`'
- en: Now select `{{now.endOfMonth.plusDays(15)}}` and click **Save**.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在选择`{{now.endOfMonth.plusDays(15)}}`并点击**保存**。
- en: 'Your rule should now look as per the following screenshot:'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你的规则现在应该如下所示：
- en: '![Figure 3.7 - Setting the date to the middle of next month'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.7 - 将日期设置为下个月的中旬'
- en: '](img/Figure_3.7_B16551.jpg)'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_3.7_B16551.jpg)'
- en: Figure 3.7 - Setting the date to the middle of next month
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.7 - 将日期设置为下个月的中旬
- en: Now that we've dealt with due dates for next month, let's complete the rule
    for due dates this month. Click on **Add else** in the rule-chain view and then
    click **Save**.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经处理了下个月的截止日期，让我们完成本月截止日期的规则。在规则链视图中点击**添加其他条件**，然后点击**保存**。
- en: Next, add a `{{now.withDayOfMonth(15)}}` and click **Save**.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，添加`{{now.withDayOfMonth(15)}}`并点击**保存**。
- en: 'Your rule should look similar to the following screenshot:'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你的规则应该类似于以下截图：
- en: '![Figure 3.8 - Setting the date to the middle of the current month'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.8 - 将日期设置为当前月的中旬'
- en: '](img/Figure_3.8_B16551.jpg)'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_3.8_B16551.jpg)'
- en: Figure 3.8 - Setting the date to the middle of the current month
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.8 - 将日期设置为当前月的中旬
- en: Finally, name the rule `Set due date to middle of the month` and click **Turn
    it on** to save and enable the rule.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，命名规则为`将截止日期设置为本月中旬`，并点击**启用**以保存并启用此规则。
- en: In this section, we have taken a look at the various smart value date and time
    functions available and learned how to use these to manipulate dates in automation
    rules. Next, we'll take a look at how we can use smart values to work with text.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们已经了解了各种智能值日期和时间函数，并学习了如何使用它们在自动化规则中操作日期。接下来，我们将看看如何使用智能值处理文本。
- en: Using smart value text functions
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用智能值文本函数
- en: In a similar fashion to working with dates and times, smart value functions
    that deal with text strings allow us to manipulate any text field type, including
    the sub-attributes of fields where they are also text-type fields.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于操作日期和时间，处理文本字符串的智能值函数允许我们操作任何文本字段类型，包括字段的子属性（如果它们也是文本类型字段）。
- en: In this section, we will look at how smart value functions for text allow us
    to manipulate text, encode it for use in HTML, JSON, XML, or URLs, and how we
    can use functions to test for specific characteristics within blocks of text.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍如何使用文本的智能值函数来操作文本，如何对其进行编码以便在HTML、JSON、XML或URL中使用，以及如何使用函数测试文本块中的特定特征。
- en: 'Let''s take a look at the functions available to manipulate text in automation
    rules. The first set of functions we''ll look at deal with text comparisons and
    return either **true** or **false** depending on whether the check passes or fails:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看在自动化规则中操作文本的可用函数。我们首先要查看的一组函数处理文本比较，并根据检查是否通过返回**true**或**false**：
- en: '**startsWith(string)**/**endsWith(string)**: Checks whether the text field
    starts or ends with the given string, respectively'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**startsWith(string)**/**endsWith(string)**：分别检查文本字段是否以给定字符串开头或结尾'
- en: '**equals(string)**/**equalsIgnoreCase(string)**: Checks whether the text field
    equals the given string exactly or ignoring capitalization, respectively'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**equals(string)**/**equalsIgnoreCase(string)**：分别检查文本字段是否完全等于给定字符串，或者忽略大小写地等于给定字符串'
- en: '**isAlpha**: Checks whether the text field contains only letters'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**isAlpha**：检查文本字段是否仅包含字母'
- en: '**isNumeric**: Checks whether the text field contains only numbers'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**isNumeric**: 检查文本字段是否仅包含数字。'
- en: '**isAlphaNumeric**: Checks whether the text field contains only letters and
    numbers'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**isAlphaNumeric**: 检查文本字段是否仅包含字母和数字。'
- en: '**isEmpty**: Checks for the absence of data in the text field'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**isEmpty**: 检查文本字段中是否没有数据。'
- en: '**isNotEmpty**: Checks for the presence of data in the text field'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**isNotEmpty**: 检查文本字段中是否有数据。'
- en: 'The next set of functions allows us to convert text into other types, such
    as numbers, dates, or lists:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 下一组函数允许我们将文本转换为其他类型，如数字、日期或列表：
- en: '**asNumber**: Converts the text field to a number allowing you to perform numeric
    operations and calculations on the converted value.'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**asNumber**: 将文本字段转换为数字，允许你对转换后的值进行数值操作和计算。'
- en: Tip
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 提示
- en: Use the *isNumeric* test on the text field prior to conversion to ensure you
    don't get errors by trying to convert text that cannot be represented as numbers.
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在转换之前，请对文本字段使用 *isNumeric* 测试，确保不会因为尝试转换无法表示为数字的文本而导致错误。
- en: '**toDate**/**toDate(string pattern)**: Converts a text field to a date. Use
    the second form of the function to specify what the format of the date in its
    textual representation should be. Refer to the *Formatting dates* section for
    examples of how to define the pattern.'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**toDate**/**toDate(string pattern)**: 将文本字段转换为日期。使用该函数的第二种形式来指定文本表示中的日期格式。请参阅*格式化日期*部分，了解如何定义模式的示例。'
- en: '**split(string separator)**: Splits a text field into a list of items around
    the separator. The resulting list of items can then be manipulated using the smart
    value list functions.'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**split(string separator)**: 按照分隔符将文本字段拆分成一个项列表。结果列表中的项可以通过智能值列表函数进一步操作。'
- en: '**match(string regularExpression)**: Performs a regular expression search on
    the text field. Multiple matches of regularExpression are returned as a list of
    items that can be manipulated further using the smart value list functions.'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**match(string regularExpression)**: 在文本字段上执行正则表达式搜索。正则表达式的多个匹配项将作为项列表返回，可以通过智能值列表函数进一步操作。'
- en: Tip
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 提示
- en: A *regular expression* is a special text string for describing a search pattern.
    These patterns are usually used to perform find or find-and-replace operations
    on text strings or to validate input. In Jira automation, regular expressions
    are based on the underlying Java implementation, which can be found at [https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html](https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html).
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*正则表达式* 是描述搜索模式的特殊文本字符串。这些模式通常用于执行文本字符串的查找或查找替换操作，或者验证输入。在 Jira 自动化中，正则表达式基于底层的
    Java 实现，可以参考[https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html](https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html)。'
- en: 'The following set of functions allows us to change the way text is displayed,
    extract portions of text, or even replace blocks of text:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 以下一组函数允许我们更改文本的显示方式、提取文本片段，甚至替换文本块：
- en: '**abbreviate(int maxLength)**: Abbreviates the text field to the maximum length
    specified and adds an ellipsis ("…") to the end of the text.'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**abbreviate(int maxLength)**: 将文本字段缩短到指定的最大长度，并在文本末尾添加省略号（"…"）。'
- en: '**toLowerCase**: Converts the text field to all lowercase.'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**toLowerCase**: 将文本字段转换为全小写。'
- en: '**toUpperCase**: Converts the text field to all uppercase.'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**toUpperCase**: 将文本字段转换为全大写。'
- en: '**capitalize**: Converts the first character of the text field to uppercase.'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**capitalize**: 将文本字段的第一个字符转换为大写。'
- en: '**reverse**: Reverses all the characters of the text field.'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**reverse**: 将文本字段中的所有字符反转。'
- en: '**trim**: Removes all leading and trailing white spaces from the text field.'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**trim**: 移除文本字段中所有前导和尾随的空白字符。'
- en: '**concat(string)**: Appends the given string to the end of the text field.'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**concat(string)**: 将给定字符串附加到文本字段的末尾。'
- en: '`0`.'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0`。'
- en: '**indexOf(string) / lastIndexOf(string)**: Finds the first or last position
    of the given string within the text field.'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**indexOf(string) / lastIndexOf(string)**: 查找给定字符串在文本字段中的第一次或最后一次出现的位置。'
- en: '**length**: Returns the total number of characters of the text field.'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**length**: 返回文本字段的总字符数。'
- en: '**quote**: Formats the text field into a literal expression that can then be
    used in a regular expression in the match function. For example, if the text field
    contains regular expression special characters, such as * or \, these will be
    treated as normal (or literal) characters rather than as regular expressions.'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**quote**：将文本字段格式化为字面表达式，之后可以在匹配函数的正则表达式中使用。例如，如果文本字段包含正则表达式特殊字符，如*或\，这些字符将被当作普通字符（或字面字符）处理，而不是作为正则表达式。'
- en: '**remove(string)**: Removes all occurrences of the given string from the text
    field.'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**remove(string)**：从文本字段中移除给定字符串的所有出现。'
- en: '**replace(string target, string replacement)**: Replaces the target string
    in the text field with the replacement string value.'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**replace(string target, string replacement)**：将文本字段中的目标字符串替换为替换字符串的值。'
- en: '`regex` with the replacement string.'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`regex`与替换字符串。'
- en: '**left(int length)**/**right(int length)**: Returns the specified number of
    characters from either the left or right of the text field, respectively.'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**left(int length)**/**right(int length)**：分别返回文本字段左侧或右侧指定数量的字符。'
- en: '**leftPad(int length, string)**/**rightPad(int length, string)**: Adds the
    given string to either the left or right of the text field until the text reaches
    the total length specified.'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**leftPad(int length, string)**/**rightPad(int length, string)**：将给定字符串添加到文本字段的左侧或右侧，直到文本达到指定的总长度。'
- en: '**substring(int start)**: Returns a portion of the text field beginning at
    the start index.'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**substring(int start)**：返回从起始索引开始的文本字段部分。'
- en: '**substring(int start, int end)**: Returns a portion of the text field beginning
    at the start index and ending at the end index.'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**substring(int start, int end)**：返回从起始索引到结束索引之间的文本字段部分。'
- en: '**substringAfter(string)**/**substringAfterLast(string)**: Returns a portion
    of the text field after the first or last occurrence of the supplied string, respectively.'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**substringAfter(string)**/**substringAfterLast(string)**：返回文本字段中首次或最后一次出现提供的字符串后的部分。'
- en: '**substringBefore(string)**/**substringBeforeLast(string)**: Returns a portion
    of the text field before the first or last occurrence of the supplied string,
    respectively.'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**substringBefore(string)**/**substringBeforeLast(string)**：返回文本字段中首次或最后一次出现提供的字符串之前的部分。'
- en: '**substringBetween(string open, string close)**: Returns a portion of the text
    field between the given start and end strings.'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**substringBetween(string open, string close)**：返回给定起始字符串和结束字符串之间的文本字段部分。'
- en: 'The final set of functions allows us to encode text to comply with specific
    standards. This is especially useful when integrating with external systems or
    when sending email notifications from rules:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一组函数使我们能够对文本进行编码，以符合特定标准。当与外部系统集成或从规则发送电子邮件通知时，这尤其有用：
- en: '**htmlEncode**: Use this function to ensure the text field value is correctly
    encoded when including the field in HTML output.'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**htmlEncode**：使用此函数确保在将字段包含在HTML输出中时，文本字段的值被正确编码。'
- en: '**jsonEncode)**: Use this function to ensure the text field value is correctly
    encoded when including the field in JSON output.'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**jsonEncode**：使用此函数确保在将字段包含在JSON输出中时，文本字段的值被正确编码。'
- en: '**urlEncode**: Use this function to ensure the text field value is correctly
    encoded when using the field to create a URL link.'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**urlEncode**：使用此函数确保在使用字段创建URL链接时，文本字段的值被正确编码。'
- en: '**xmlEncode**: Use this function to ensure the text field value is correctly
    encoded when including the field in XML output.'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**xmlEncode**：使用此函数确保在将字段包含在XML输出中时，文本字段的值被正确编码。'
- en: Now that we've looked at the various functions available that we can use to
    manipulate text, let's take a look at how we can leverage these in automation
    rules.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经查看了可用于操作文本的各种函数，接下来让我们看看如何在自动化规则中利用这些函数。
- en: Creating a rule to auto-close an issue
  id: totrans-244
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个规则以自动关闭问题
- en: A common scenario faced by many teams is that after a ticket has been resolved,
    the reporter replies to say thank you. This will generally cause the ticket to
    re-open and someone will have to manually go and resolve the ticket again.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 许多团队常面临的一个常见场景是，在工单解决后，报告人回复说感谢。这通常会导致工单重新打开，并且有人必须手动再次解决工单。
- en: 'In this example, we''ll use text smart value functions to examine the latest
    comment and auto-resolve the issue if we find the words "thank you":'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们将使用文本智能值函数检查最新的评论，如果发现“thank you”字样，则自动解决该问题：
- en: In your Service Management project, navigate to **Project settings**, click
    the **Automation** tab, and then click on **Create rule**.
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的服务管理项目中，导航到**项目设置**，点击**自动化**选项卡，然后点击**创建规则**。
- en: Select the **Issue transitioned** trigger, set the **From status** field to
    **Resolved**, the **To status** field to **In Progress**, and then click **Save**.
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**问题已转移**触发器，将**来源状态**字段设置为**已解决**，将**目标状态**字段设置为**进行中**，然后点击**保存**。
- en: Now select `{{issue.comments.last.body.trim.toLowercase}}`
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在选择`{{issue.comments.last.body.trim.toLowercase}}`
- en: '`contains regular expression`'
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`contains regular expression`'
- en: '`thank\s+you`'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`thank\s+you`'
- en: 'The rule should now look as follows:'
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 规则现在应如下所示：
- en: '![Figure 3.9 - Using text smart value functions in conditions'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图3.9 - 在条件中使用文本智能值函数'
- en: '](img/Figure_3.9_B16551.jpg)'
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_3.9_B16551.jpg)'
- en: Figure 3.9 - Using text smart value functions in conditions
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图3.9 - 在条件中使用文本智能值函数
- en: Next, select **New action** and then **Transition issue**. Set **Transition
    the issue by** to **Selecting the destination status**, and, in the **Destination
    status** field, select **Resolved** and then click **Save**.
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，选择**新建操作**，然后选择**转移问题**。将**转移问题至**设置为**选择目标状态**，并在**目标状态**字段中选择**已解决**，然后点击**保存**。
- en: Name the rule `Auto-resolve thank you comments` and click **Turn it on** to
    save and enable the rule.
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将规则命名为`自动处理感谢评论`，然后点击**启用**以保存并启用该规则。
- en: In this section, we have seen how we can use smart value functions to compare
    and manipulate text values. In the next section, we'll take a look at how we can
    use smart values and functions to work with lists of items.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们已经了解了如何使用智能值函数比较和操作文本值。在下一节中，我们将看看如何使用智能值和函数来处理项的列表。
- en: Using smart value list functions
  id: totrans-259
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用智能值列表函数
- en: There are a number of scenarios you'll come across when authoring automation
    rules, where you'll be presented with a list of items. This could be a list of
    versions or components attached to an issue, or a list of issues, such as all
    the sub-tasks of a particular issue.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写自动化规则时，您会遇到一些场景，这些场景会向您展示一个项的列表。这可能是与问题关联的版本或组件的列表，或者是问题的列表，比如某个问题的所有子任务。
- en: Smart value functions for lists give us the ability to work with these lists
    of items by iterating over each item and being able to perform additional functions
    against attributes of the items. We also have access to functions that allow us
    to perform simple calculations against all the items in a list.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 用于列表的智能值函数使我们能够通过对每个项目进行迭代来操作这些项，并能针对项目的属性执行额外的操作。我们还可以使用某些函数，对列表中所有项目进行简单的计算。
- en: In this section, we'll take a look at the smart value functions available for
    accessing and formatting lists of items.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将查看可用于访问和格式化项列表的智能值函数。
- en: We'll cover examples of iterating over lists using smart values when we look
    at sending notifications via email and Slack in [*Chapter 4*](B16551_04_Final_ASB_ePub.xhtml#_idTextAnchor080),
    *Sending Automated Notifications*.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第4章*](B16551_04_Final_ASB_ePub.xhtml#_idTextAnchor080)《发送自动化通知》中，我们将通过使用智能值来迭代列表，举例说明如何通过电子邮件和Slack发送通知。
- en: 'Let''s now take a look at the smart value functions available for working with
    lists:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看看可以用于操作列表的智能值函数：
- en: '**isEmpty**: Checks whether a list contains any items. This function will return
    **true** if the list is empty and **false** if it contains items.'
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**isEmpty**：检查列表是否包含任何项。如果列表为空，该函数返回**true**；如果列表中包含项，则返回**false**。'
- en: '**size**: Returns the number of items in the list.'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**size**：返回列表中项目的数量。'
- en: '**join(string separator)**: Joins all the items in the list into a single text
    value, separated by the supplied separator.'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**join(string separator)**：将列表中的所有项合并成一个单一的文本值，项与项之间用提供的分隔符分开。'
- en: '`0` (zero) on either end of the list.'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表的两端是`0`（零）。
- en: '**first**: Retrieves the first item of the list.'
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**first**：获取列表中的第一项。'
- en: '**last**: Retrieves the last item of the list.'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**last**：获取列表中的最后一项。'
- en: '**average**: Computes the average of all the items in a numerical list.'
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**average**：计算数值列表中所有项目的平均值。'
- en: '**max**: Finds the item with the largest number in a numerical list or finds
    the latest date in a list of dates.'
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**max**：在数值列表中找到最大的项，或者在日期列表中找到最晚的日期。'
- en: '**min**: Finds the item with the smallest number in a numerical list or finds
    the earliest date in a list of dates.'
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**min**：在数值列表中找到最小的项，或者在日期列表中找到最早的日期。'
- en: '**sum**: Computes the sum of all the items in a numerical list.'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**sum**：计算数值列表中所有项的总和。'
- en: Let's take a look at how we can incorporate what we have learned about lists
    into a practical example that uses a smart value list function to calculate the
    sum of story points in sub-tasks.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看如何将我们所学到的列表知识应用到实际示例中，利用智能值列表函数计算子任务中的故事点总和。
- en: Creating a rule to sum up sub-task story points in a parent story
  id: totrans-276
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建规则，将子任务的故事点汇总到父任务中
- en: 'In this example, we are tracking story points against sub-tasks and would like
    to ensure that the parent story always reflects the correct total of story points
    whenever the story points in one of its sub-tasks'' changes. You will need to
    enable the configuration context for the **Story Points** custom field to include
    **sub-tasks** in addition to **Epics** and **Stories**:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我们正在跟踪子任务的故事点，并希望确保每当其子任务中的故事点发生变化时，父任务始终反映正确的故事点总数。你需要启用**故事点**自定义字段的配置上下文，以便除了**史诗**和**故事**外，还能包含**子任务**：
- en: In your Software Project, navigate to **Project settings**, click the **Automation**
    tab (or the **Project automation** tab if you're using Jira Server), and then
    click on **Create rule**.
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的软件项目中，导航至**项目设置**，点击**自动化**选项卡（如果你使用的是 Jira Server，请点击**项目自动化**选项卡），然后点击**创建规则**。
- en: Select **Field value changed**, set **Fields to monitor for changes** to **Story
    Points**, and then click **Save**.
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**字段值已更改**，将**监视字段变化**设置为**故事点**，然后点击**保存**。
- en: Now select `Issue Type`
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在选择`问题类型`
- en: '`equals`'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`等于`'
- en: '`Sub-task`'
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`子任务`'
- en: Then select `Parent` and click **Save**.
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后选择`父任务`，点击**保存**。
- en: Next, select **New action** and then select **Edit issue**.
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，选择**新建操作**，然后选择**编辑问题**。
- en: In the `{{issue.subtasks.Story Points.sum}}`
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`{{issue.subtasks.Story Points.sum}}`
- en: 'Your rule should now look as per the following screenshot:'
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你的规则现在应该如下所示，参考以下截图：
- en: '![Figure 3.10 - Using a smart value list function to sum list item values'
  id: totrans-287
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.10 - 使用智能值列表函数求和列表项值'
- en: '](img/Figure_3.10_B16551.jpg)'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_3.10_B16551.jpg)'
- en: Figure 3.10 - Using a smart value list function to sum list item values
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.10 - 使用智能值列表函数求和列表项值
- en: Finally, name the rule `Keep parent in sync with sub-task story points` and
    click **Turn it on** to save and enable the rule.
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，为规则命名为`保持父任务与子任务故事点同步`，然后点击**启用**以保存并启用该规则。
- en: In this section, we have learned how we can use smart value list functions to
    iterate over items in a list and how to perform operations against values in a
    list.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们学到了如何使用智能值列表函数遍历列表中的项，并对列表中的值执行操作。
- en: Next we'll take a look at the mathematical operations available for use in automation
    rules.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们将查看自动化规则中可用的数学运算。
- en: Using smart value math expressions and functions
  id: totrans-293
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用智能值数学表达式和函数
- en: So far, we have seen how to use smart values for working with dates, text, and
    lists and how they are able to help you create powerful and flexible automation
    rules.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经看到如何使用智能值来处理日期、文本和列表，以及它们如何帮助你创建强大且灵活的自动化规则。
- en: In this section, we are going to look at math expressions and functions. Math
    expressions and functions will allow you to perform calculations directly in numeric
    fields as well as allow you to reference numeric fields in calculations for display
    in text fields. In Jira, all numeric fields are based on floating-point numbers.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将研究数学表达式和函数。数学表达式和函数将允许你在数字字段中直接执行计算，并允许你在文本字段中引用数字字段进行计算以显示。在 Jira 中，所有数字字段都是基于浮点数的。
- en: 'To use any of the math expressions, they need to be surrounded by the following
    smart value block in order to be recognized as shown in the following example:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 若要使用任何数学表达式，它们需要被包含在以下智能值块中，以便被识别，如下所示：
- en: '`{{#=}} <math expression> {{/}}`'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: '`{{#=}} <数学表达式> {{/}}`'
- en: The `{{#=}}` operator signifies to the automation engine that you are about
    to perform a calculation and is a custom addition to the underlying Mustache library.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: '`{{#=}}` 运算符通知自动化引擎，你即将进行计算，这是对底层 Mustache 库的自定义扩展。'
- en: Important note
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明
- en: Jira Cloud offers additional capabilities for working with numbers, including
    the ability to format numbers using locales or with custom patterns.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: Jira Cloud 提供了额外的数字处理功能，包括使用地区设置或自定义模式来格式化数字的功能。
- en: Let's take a look at the math expressions in common between Jira Cloud and Jira
    Server first.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先看看 Jira Cloud 和 Jira Server 之间共有的数学表达式。
- en: 'Math expressions support the usual operations you''d expect to see, as can
    be seen in the following table:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 数学表达式支持您期望看到的常见运算，如下表所示：
- en: '![Figure 3.11 - Basic math expression operators'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.11 - 基本数学表达式运算符'
- en: '](img/Figure_3.11_B16551.jpg)'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.11_B16551.jpg)'
- en: Figure 3.11 - Basic math expression operators
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.11 - 基本数学表达式运算符
- en: 'In addition to the basic operations, math expressions support Boolean operators
    as well, and the supported operators can be seen in the following table:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 除了基本运算外，数学表达式还支持布尔运算符，支持的运算符可以在下表中查看：
- en: '![Figure 3.12 - Boolean math expression operators'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.12 - 布尔数学表达式运算符'
- en: '](img/Figure_3.12_B16551.jpg)'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.12_B16551.jpg)'
- en: Figure 3.12 - Boolean math expression operators
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.12 - 布尔数学表达式运算符
- en: 'Math expressions also support a number of functions that can be used, and we
    can see a full list of supported functions in the following table:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 数学表达式还支持多种可用的函数，我们可以在下表中查看支持的完整函数列表：
- en: '![Figure 3.13 - Supported math functions'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.13 - 支持的数学函数'
- en: '](img/Figure_3.13_B16551.jpg)'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.13_B16551.jpg)'
- en: Figure 3.13 - Supported math functions
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.13 - 支持的数学函数
- en: 'There are also a few constant values that are supported for use in math expressions,
    and these are listed here:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 这里还有一些常量值可以用于数学表达式，它们列在这里：
- en: '![Figure 3.14 - Support constant values'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.14 - 支持的常量值'
- en: '](img/Figure_3.14_B16551.jpg)'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.14_B16551.jpg)'
- en: Figure 3.14 - Support constant values
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.14 - 支持的常量值
- en: In addition to the preceding common functions and operations, Jira Cloud introduces
    some additional numerical operations. These operations do not need to be surrounded
    by the smart value block we learned about earlier, but rather can be applied directly
    to numerical smart values or fields.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 除了前述的常见函数和操作外，Jira Cloud 还引入了一些额外的数字运算。这些运算不需要像我们之前学习的智能值块那样被包围，而是可以直接应用于数字智能值或字段。
- en: 'Let''s take a look at these additional numerical operations:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看这些额外的数字运算：
- en: '**abs**: Returns the absolute value of a number'
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**abs**：返回数字的绝对值'
- en: '**round**: Returns a number rounded to the nearest whole number'
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**round**：返回四舍五入到最接近的整数的数字'
- en: '**floor**/**ceil**: Returns the lower or upper value of a number, respectively'
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**floor**/**ceil**：分别返回数字的下限值或上限值'
- en: '**plus(value)**/**minus(value)**: Adds or subtracts the number or smart value
    in the parameter to or from the numerical value or field used to call the operation'
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**plus(value)**/**minus(value)**：将参数中的数字或智能值加到或减去调用该操作的数值或字段'
- en: '**multiply(value)**/**divide(value)**: Multiplies or divides the number or
    smart value in the parameter with or by the numerical value or field used to call
    the operation'
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**multiply(value)**/**divide(value)**：将参数中的数字或智能值与调用该操作的数值或字段相乘或相除'
- en: '**gt(value)**/**gte(value)**: Checks whether the numerical smart value is greater
    than, or greater than or equal to, the value given in the parameter'
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**gt(value)**/**gte(value)**：检查数值智能值是否大于或大于等于参数中给定的值'
- en: '**eq(value)**: Checks whether the numerical smart value is equal to the value
    given in the parameter'
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**eq(value)**：检查数值智能值是否等于参数中给定的值'
- en: '**lt(value)**/**lte(value)**: Checks whether the numerical smart value is less
    than, or less than or equal to, the value given in the parameter'
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**lt(value)**/**lte(value)**：检查数值智能值是否小于或小于等于参数中给定的值'
- en: 'Jira Cloud also adds the ability to format numerical values using smart value
    functions, and these functions are listed here:'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: Jira Cloud 还增加了使用智能值函数格式化数值的能力，以下是这些函数：
- en: '**format**: Formats the numerical field using the numerical format of the US
    locale.'
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**format**：使用美国地区的数字格式化数字字段。'
- en: '`fr_CA`.'
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fr_CA`。'
- en: '**format(string pattern)**: Formats the numerical field using a custom pattern.
    The patterns you can use rely on the underlying Java implementation and can be
    found at the following link: https://docs.oracle.com/javase/tutorial/java/data/numberformat.html.'
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**format(string pattern)**：使用自定义模式格式化数字字段。您可以使用的模式依赖于底层的 Java 实现，可以在以下链接找到：
    https://docs.oracle.com/javase/tutorial/java/data/numberformat.html。'
- en: '**asPercentage**/**asPercentage(string locale)**: Formats the numerical field
    as a percentage in the US locale or as a percentage in the locale specified.'
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**asPercentage**/**asPercentage(string locale)**：将数字字段格式化为美国地区的百分比，或按指定地区的百分比格式化。'
- en: '**asCurrency**/**asCurrency(string locale)**: Formats the numerical field as
    a currency in the US locale or as a currency in the locale specified.'
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**asCurrency**/**asCurrency(string locale)**：将数值字段格式化为美国地区的货币格式，或者根据指定的地区格式化为相应的货币格式。'
- en: As we've seen, there is a comprehensive number of smart value functions that
    we can make use of to perform advanced mathematical operations in automation rules.
    Let's now take a look at using math expressions in an example.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，我们可以使用大量的智能值函数来执行自动化规则中的高级数学运算。现在，让我们通过一个例子来看看如何使用数学表达式。
- en: Creating a rule to keep an original estimate for an epic in sync with its child
    issues
  id: totrans-335
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个规则，以保持史诗的原始预估与其子问题同步
- en: 'In this example, we''re going to update the original estimate of an epic any
    time tracking fields in the epic''s underlying issues change:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，每当史诗下的相关问题的时间跟踪字段发生变化时，我们将更新史诗的原始预估。
- en: In your Software project, navigate to **Project settings**, click the **Automation**
    tab (or the **Project automation** tab if you're using Jira Server), and then
    click on **Create rule**.
  id: totrans-337
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的软件项目中，导航至**项目设置**，点击**自动化**标签（如果使用的是Jira Server，则点击**项目自动化**标签），然后点击**创建规则**。
- en: Select the **Field value changed** trigger and, in the **Fields to monitor for
    changes** list, select **Time tracking** and then click **Save**.
  id: totrans-338
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**字段值更改**触发器，在**监控变化的字段**列表中选择**时间跟踪**，然后点击**保存**。
- en: Next, select `Epic`
  id: totrans-339
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，选择`Epic`
- en: '`Exists`'
  id: totrans-340
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`Exists`'
- en: Now select `Epic (parent)` and click **Save**.
  id: totrans-341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在选择`Epic (parent)`并点击**保存**。
- en: Then, select `Original Estimate (System)`.
  id: totrans-342
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，选择`原始预估（系统）`。
- en: 'Add the following math expression to the **Original Estimate (System)** field
    and click **Save**:'
  id: totrans-343
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将以下数学表达式添加到**原始预估（系统）**字段中，并点击**保存**：
- en: '[PRE0]'
  id: totrans-344
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The rule should now look similar to the following screenshot:'
  id: totrans-345
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 规则现在应该类似于以下截图：
- en: '![Figure 3.15 - Using math expressions in a rule'
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.15 - 在规则中使用数学表达式'
- en: '](img/Figure_3.15_B16551.jpg)'
  id: totrans-347
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_3.15_B16551.jpg)'
- en: Figure 3.15 - Using math expressions in a rule
  id: totrans-348
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.15 - 在规则中使用数学表达式
- en: Finally, name the rule `Keep Epic estimates in sync` and click **Turn it on**
    to save and enable the rule.
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，命名该规则为`保持史诗预估同步`，并点击**启用**以保存并启用该规则。
- en: In this section, we have seen the comprehensive list of smart value mathematical
    functions available for use in your automation rules and how we can use these
    to manipulate numerical values.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们看到了可以在自动化规则中使用的智能值数学函数的全面列表，并且学习了如何使用这些函数来操作数值。
- en: Summary
  id: totrans-351
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you have learned how to enhance the functionality of automation
    rules by using smart values and smart value functions.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您学习了如何通过使用智能值和智能值函数来增强自动化规则的功能。
- en: We learned which smart values are set by the various triggers and how you can
    access their attributes or fields. In addition, you learned about smart value
    functions and how they can be used in isolation against a particular field or
    chained together to perform multiple operations on data in a single step.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 我们学习了各种触发器设置的智能值，以及如何访问它们的属性或字段。此外，您还了解了智能值函数，以及如何在特定字段上单独使用它们，或者将它们链式组合以在单个步骤中对数据执行多个操作。
- en: Finally, we learned about the various smart value functions available for dates,
    text, lists, and numerical values and how these can be used to format and manipulate
    data to create extremely powerful and flexible rules.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们了解了适用于日期、文本、列表和数值的各种智能值函数，以及如何使用这些函数格式化和操作数据，以创建极其强大且灵活的规则。
- en: Smart values and their associated functions can be used in nearly every field
    in automation rule conditions and actions, and we'll learn throughout the rest
    of this book how they will help us to create much more powerful and richer rules
    as a result of their use.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 智能值及其相关函数几乎可以在自动化规则条件和动作中的每个字段中使用，接下来在本书的其余部分中，我们将学习它们如何帮助我们创建更强大、更丰富的规则。
- en: In the next chapter, we will be looking at how to send notifications to various
    channels from your automation rules.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何从自动化规则发送通知到不同的频道。
