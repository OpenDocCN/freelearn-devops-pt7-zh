["```\nUsage:  gitolite access [-q] <repo> <user> <perm> <ref>\n\nPrint access rights for arguments given.  The string printed has the word\nDENIED in it if access was denied.  With '-q', returns only an exit code\n(shell truth, not perl truth -- 0 is success).\n\n - repo: mandatory\n - user: mandatory\n - perm: defauts to '+'.  Valid values: R, W, +, C, D, M\n - ref:  defauts to 'any'.  See notes below\n\nNotes:\n - ref: Any fully qualified ref ('refs/heads/master', not 'master') is fine.\n The 'any' ref is special -- it ignores deny rules (see docs for what this\n means and exceptions).\n\nBatch mode: see src/triggers/post-compile/update-git-daemon-access-list for a\ngood example that shows how to test several repos in one invocation.  This is\norders of magnitude faster than running the command multiple times; you'll\nnotice if you have more than a hundred or so repos.\n\n```", "```\n#!/bin/bash\n[ -n $3 ] && echo | mail -s \"new repo $2 created\" admin_group@example.com\n\n```", "```\nPOST_CREATE => [\n 'new-repo-alert',\n],\n\n```", "```\n#!/bin/bash\n\nrepo=$1\n\ngitolite access -q $repo $GL_USER W any || {\n echo Sorry $GL_USER, you are not authorized\n exit 1\n}\n\ncd $GL_REPO_BASE/$repo.git\ngit count-objects -v\n\n```"]