- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Understanding the Fundamentals of Ansible
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 Ansible 基础
- en: 'At its heart, Ansible is a simple framework that pushes a small program called
    an **Ansible module** to target nodes. Modules are at the heart of Ansible and
    are responsible for performing all of the automation’s hard work. The Ansible
    framework goes beyond this, however, and also includes plugins and dynamic inventory
    management, as well as tying all of this together with playbooks to automate infrastructure
    provisioning, configuration management, application deployment, network automation,
    and much more, as shown:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 从本质上讲，Ansible 是一个简单的框架，它将一个叫做 **Ansible 模块** 的小程序推送到目标节点。模块是 Ansible 的核心，负责执行自动化的所有繁重工作。然而，Ansible
    框架不仅仅是如此，它还包括插件和动态清单管理，并且通过 playbook 将这些功能结合起来，用于自动化基础设施供应、配置管理、应用部署、网络自动化等，正如所示：
- en: '![Figure 2.1 – The typical flow and usage of Ansible’s automation engine](img/B20846_02_001.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.1 – Ansible 自动化引擎的典型流程和使用方式](img/B20846_02_001.jpg)'
- en: Figure 2.1 – The typical flow and usage of Ansible’s automation engine
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.1 – Ansible 自动化引擎的典型流程和使用方式
- en: Even with the addition of Ansible collections since the previous release of
    this book, this architecture remains unchanged – now, the modules, plugins, and
    dynamic inventory scripts are simply distributed through collections whereas before
    everything was distributed as part of the Ansible release itself.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 即使在本书的上一版本添加了 Ansible 集合，这一架构仍然保持不变——现在，模块、插件和动态清单脚本通过集合分发，而以前所有内容都是作为 Ansible
    发布的一部分进行分发的。
- en: Ansible only needs to be installed on the management node. From there, it distributes
    the required modules over the network’s transport layer (usually SSH or WinRM)
    to perform tasks and deletes them once the tasks are complete. In this way, Ansible
    retains its agentless architecture and does not clutter up your target nodes with
    code that might be required for a one-off automation task.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible 只需要在管理节点上安装。从那里，它通过网络的传输层（通常是 SSH 或 WinRM）分发所需的模块来执行任务，并在任务完成后将其删除。通过这种方式，Ansible
    保持了其无代理架构，不会在目标节点上留下可能仅为一次性自动化任务所需的代码。
- en: In this chapter, you will learn more about the composition of the Ansible framework
    and its various components, as well as how to use them together in playbooks written
    in YAML syntax. You will learn how to create automation code for your IT operation
    tasks and learn how to apply this using both ad hoc tasks and more complex playbooks.
    Finally, you will learn how Jinja2 templating allows you to repeatably build dynamic
    configuration files using variables and dynamic expressions.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将了解更多关于 Ansible 框架的组成及其各种组件，并学习如何将它们结合使用，在 YAML 语法编写的 playbook 中使用。您将学习如何为
    IT 操作任务创建自动化代码，并了解如何通过临时任务和更复杂的 playbook 来应用这些代码。最后，您将学习如何使用 Jinja2 模板重复构建动态配置文件，利用变量和动态表达式。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Getting familiar with the Ansible framework
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 熟悉 Ansible 框架
- en: Exploring the configuration file
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索配置文件
- en: Command-line arguments
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命令行参数
- en: Defining variables
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义变量
- en: Understanding Jinja2 filters
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 Jinja2 过滤器
- en: Technical requirements
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: This chapter assumes that you have successfully installed the latest version
    of Ansible (8.0 with `ansible-core` 2.15, at the time of writing) on a Linux node,
    as discussed in [*Chapter 1*](B20846_01.xhtml#_idTextAnchor015), *Getting Started
    with Ansible*. It also assumes that you have at least one other Linux host to
    test the automation code on. The more hosts you have available, the more you will
    be able to develop the examples in this chapter and learn about Ansible. SSH communication
    between the Linux hosts is assumed, as is a working knowledge of them.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本章假设您已经成功安装了最新版本的 Ansible（截至写作时为 8.0 版本，`ansible-core` 2.15），并且是在 Linux 节点上安装的，正如在
    [*第 1 章*](B20846_01.xhtml#_idTextAnchor015)《与 Ansible 入门》中所讨论的内容。还假设您至少有一个其他的
    Linux 主机来测试自动化代码。可用的主机越多，您就能在本章中开发更多的示例，并进一步了解 Ansible。本书假定 Linux 主机之间有 SSH 通信，并且您已具备一定的
    Linux 使用经验。
- en: The code bundle for this chapter is available at [https://github.com/PacktPublishing/Practical-Ansible-Second-Edition/tree/main/Chapter%202](https://github.com/PacktPublishing/Practical-Ansible-Second-Edition/tree/main/Chapter%202).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码包可以在 [https://github.com/PacktPublishing/Practical-Ansible-Second-Edition/tree/main/Chapter%202](https://github.com/PacktPublishing/Practical-Ansible-Second-Edition/tree/main/Chapter%202)
    上获取。
- en: Getting familiar with the Ansible framework
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 熟悉 Ansible 框架
- en: In this section, you will learn how the Ansible framework fits into IT operations.
    We will explain how to run Ansible for the first time. Once you understand this
    framework, you will be ready to start learning about more advanced concepts, such
    as creating and running playbooks with your own inventory.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将学习 Ansible 框架如何适配 IT 操作。我们将解释如何首次运行 Ansible。理解这个框架后，您将准备好学习更高级的概念，比如创建并运行带有您自己清单的
    playbook。
- en: 'In order to run Ansible’s ad hoc commands via an SSH connection from your Ansible
    control machine to multiple remote hosts, you need to ensure you have the latest
    Ansible version installed on the control host. Use the following command to confirm
    the latest Ansible version:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 为了通过 SSH 连接从您的 Ansible 控制主机到多个远程主机运行 Ansible 的临时命令，您需要确保在控制主机上安装了最新版本的 Ansible。使用以下命令确认安装的是最新版本的
    Ansible：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You also need to ensure SSH connectivity with each remote host that you will
    define in the inventory. You can use a simple, manual SSH connection on each of
    your remote hosts to test the connectivity, as Ansible will make use of SSH during
    all remote Linux-based automation tasks:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 您还需要确保与您在清单中定义的每个远程主机具有 SSH 连接性。您可以通过在每个远程主机上进行简单的手动 SSH 连接测试来验证连接性，因为 Ansible
    在所有远程 Linux 自动化任务中都会使用 SSH：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In this section, we will walk you through how Ansible works, starting with
    some simple connectivity testing. You can learn how the Ansible framework accesses
    multiple host machines to execute your tasks by following this simple procedure:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将带您了解 Ansible 的工作原理，从一些简单的连接性测试开始。通过以下简单的步骤，您可以了解 Ansible 框架如何访问多个主机并执行您的任务：
- en: 'Create or edit your default inventory file, `/etc/ansible/hosts` (you can also
    specify the path with your own inventory file by passing options such as `–-inventory=/path/inventory_file`).
    Add some example hosts to your inventory—these must be the IP addresses or hostnames
    of real machines for Ansible to test against. The following are examples from
    my network, but you need to substitute these for your own devices. Add one hostname
    (or IP address) per line:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建或编辑您的默认清单文件，`/etc/ansible/hosts`（您还可以通过传递如`–-inventory=/path/inventory_file`等选项指定自定义清单文件的路径）。向您的清单中添加一些示例主机——这些必须是实际机器的
    IP 地址或主机名，以便 Ansible 测试。以下是我的网络中的一些示例，但您需要用您自己的设备替换这些。每行添加一个主机名（或 IP 地址）：
- en: '[PRE2]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'All hosts should be specified with a resolvable address—that is, a `/etc/hosts`
    on your Ansible control node). Alternatively, this can be IP addresses if you
    do not have DNS or host entries set up. Whatever format you choose for your inventory
    addresses, you should be able to successfully connect to each host. Unless you
    have set up stringent firewall rules, a simple ping to each host will suffice
    as a test. See the following output as an example:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 所有主机应使用可解析的地址指定——即，Ansible 控制节点上的 `/etc/hosts` 文件）。或者，如果没有设置 DNS 或主机条目，也可以使用
    IP 地址。无论您选择何种格式的清单地址，都应该能够成功连接到每个主机。除非您已设置严格的防火墙规则，否则对每个主机进行简单的 ping 测试即可作为验证。以下是一个示例输出：
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To make the automation process seamless, we’ll generate an SSH authentication
    key pair so that we don’t have to type in a password every time we want to run
    a playbook. If you do not already have an SSH key pair, you can generate one using
    the following command:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了使自动化过程更加流畅，我们将生成一个 SSH 认证密钥对，这样每次运行 playbook 时就不需要输入密码。如果您还没有 SSH 密钥对，可以使用以下命令生成一个：
- en: '[PRE4]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'When you run the `ssh-keygen` tool, you will see an output similar to the following.
    Note that you should leave the `passphrase` variable blank when prompted; otherwise,
    you will need to enter a passphrase every time you want to run an Ansible task,
    which removes the convenience of authenticating with SSH keys (though it does
    make them more secure if they ever get into the wrong hands, so please take this
    into consideration when working with SSH key pairs):'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当您运行`ssh-keygen`工具时，您将看到类似以下的输出。请注意，当提示时，您应该将`passphrase`变量留空；否则，每次运行 Ansible
    任务时，您都需要输入密码，这样就失去了使用 SSH 密钥认证的便利性（尽管这确实能增强安全性，如果密钥落入错误之手，因此在使用 SSH 密钥对时请考虑这一点）：
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Although there are conditions under which your SSH keys will be automatically
    picked up, it is recommended that you make use of `ssh-agent` as this allows you
    to load multiple keys to authenticate against a variety of targets, without worrying
    about whether your keys have the right name and path to be picked up. This will
    be very useful to you in the future, even if it isn’t right now. Start `ssh-agent`
    as follows, and then add your new authentication key (note that you will need
    to do this for every shell that you open):'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尽管有些条件下您的 SSH 密钥会自动获取，但建议您使用 `ssh-agent`，因为这样可以加载多个密钥来对抗各种目标，而无需担心密钥名称和路径是否正确。即使现在用处不大，将来对您也将非常有用。按以下方式启动
    `ssh-agent`，然后添加您的新认证密钥（注意，您需要为每个打开的 shell 执行此操作）：
- en: '[PRE6]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Before you can perform key-based authentication with your target hosts, you
    need to apply the public key from the key pair you just generated to each host.
    You can copy the key to each host, in turn, using the following command:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您可以使用目标主机进行基于密钥的身份验证之前，您需要将刚生成的密钥对的公钥应用于每个主机。您可以使用以下命令将密钥逐个复制到每个主机：
- en: '[PRE7]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: $ ansible -i hosts -m ansible.builtin.ping all
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ ansible -i hosts -m ansible.builtin.ping all
- en: web01.example.org | SUCCESS => {
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: web01.example.org | SUCCESS => {
- en: '"ansible_facts": {'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"ansible_facts": {'
- en: '"discovered_interpreter_python": "/usr/bin/python3"'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"discovered_interpreter_python": "/usr/bin/python3"'
- en: '},'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '},'
- en: '"changed": false,'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"changed": false,'
- en: '"ping": "pong"'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"ping": "pong"'
- en: '}'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: app02.example.org | SUCCESS => {
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: app02.example.org | SUCCESS => {
- en: '"ansible_facts": {'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"ansible_facts": {'
- en: '"discovered_interpreter_python": "/usr/bin/python3"'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"discovered_interpreter_python": "/usr/bin/python3"'
- en: '},'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '},'
- en: '"changed": false,'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"changed": false,'
- en: '"ping": "pong"'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"ping": "pong"'
- en: '}'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: web02.example.org | SUCCESS => {
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: web02.example.org | SUCCESS => {
- en: '"ansible_facts": {'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"ansible_facts": {'
- en: '"discovered_interpreter_python": "/usr/bin/python3"'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"discovered_interpreter_python": "/usr/bin/python3"'
- en: '},'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '},'
- en: '"changed": false,'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"changed": false,'
- en: '"ping": "pong"'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"ping": "pong"'
- en: '}'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: app01.example.org | SUCCESS => {
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: app01.example.org | SUCCESS => {
- en: '"ansible_facts": {'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"ansible_facts": {'
- en: '"discovered_interpreter_python": "/usr/bin/python3"'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"discovered_interpreter_python": "/usr/bin/python3"'
- en: '},'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '},'
- en: '"changed": false,'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"changed": false,'
- en: '"ping": "pong"'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"ping": "pong"'
- en: '}'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE8]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This example output is generated with Ansible’s default level of verbosity.
    If you run into problems during this process, you can increase Ansible’s level
    of verbosity by passing one or more `-v` switches to the `ansible` command when
    you run it. For most issues, it is recommended that you use `-vvvv`, which gives
    you ample debugging information, including the raw SSH commands and the output
    from them. For example, assume that a certain host (such as `web02.example.org`)
    can’t be connected to and you receive an error similar to the following:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这个示例输出是使用 Ansible 的默认详细级别生成的。如果在此过程中遇到问题，您可以通过在运行 `ansible` 命令时传递一个或多个 `-v`
    开关来增加 Ansible 的详细级别。对于大多数问题，建议您使用 `-vvvv`，这将为您提供丰富的调试信息，包括原始的 SSH 命令及其输出。例如，假设某个主机（如
    `web02.example.org`）无法连接，并且您收到类似以下错误：
- en: '[PRE9]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '---'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '---'
- en: '- name: My first Ansible playbook'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- name: 我的第一个 Ansible playbook'
- en: 'hosts: all'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'hosts: all'
- en: '[PRE10]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'become: yes'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'become: yes'
- en: '[PRE11]'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'tasks:'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'tasks:'
- en: '- name: Install/Update to the latest of Apache Web Server'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- name: 安装/更新到最新的 Apache Web 服务器'
- en: 'ansible.builtin.apt:'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'ansible.builtin.apt:'
- en: 'name: apache2'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'name: apache2'
- en: 'state: latest'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'state: latest'
- en: 'notify:'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'notify:'
- en: '- Restart the Apache Web Server'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 重新启动 Apache Web 服务器'
- en: 'handlers:'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'handlers:'
- en: '- name: Restart the Apache Web Server'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- name: 重新启动 Apache Web 服务器'
- en: 'ansible.builtin.service:'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'ansible.builtin.service:'
- en: 'name: apache2'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'name: apache2'
- en: 'state: restarted'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'state: restarted'
- en: '[PRE12]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: $ ansible-playbook -i hosts --limit web* playbook.yml
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible-playbook -i hosts --limit web* playbook.yml
- en: PLAY [My first Ansible playbook] **********************************************************
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: PLAY [我的第一个 Ansible playbook] **********************************************************
- en: TASK [Gathering Facts] ***************************************************
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: TASK [收集事实] ***************************************************
- en: 'ok: [web02.example.org]'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 'ok: [web02.example.org]'
- en: 'ok: [web01.example.org]'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 'ok: [web01.example.org]'
- en: TASK [Install/Update to the latest of Apache Web Server] **********************************************************
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: TASK [安装/更新到最新的 Apache Web 服务器] **********************************************************
- en: 'changed: [web01.example.org]'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 'changed: [web01.example.org]'
- en: 'changed: [web02.example.org]'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 'changed: [web02.example.org]'
- en: RUNNING HANDLER [Restart the Apache Web Server] **********************************************************
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: RUNNING HANDLER [重新启动 Apache Web 服务器] **********************************************************
- en: 'changed: [web02.example.org]'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 'changed: [web02.example.org]'
- en: 'changed: [web01.example.org]'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 'changed: [web01.example.org]'
- en: PLAY RECAP **********************************************************
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: PLAY RECAP **********************************************************
- en: 'web01.example.org          : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 'web01.example.org : 成功=3    更改=2    无法访问=0    失败=0    跳过=0    救援=0    忽略=0'
- en: 'web02.example.org          : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 'web02.example.org : 成功=3    更改=2    无法访问=0    失败=0    跳过=0    救援=0    忽略=0'
- en: '[PRE13]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: PLAY [My first Ansible playbook] **********************************************************
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 执行 [我的第一个 Ansible 剧本] **********************************************************
- en: TASK [Gathering Facts] ************************************************************
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 任务 [收集信息] ************************************************************
- en: 'ok: [web02.example.org]'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 成功：[web02.example.org]
- en: 'ok: [web01.example.org]'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 成功：[web01.example.org]
- en: TASK [Install/Update to the latest of Apache Web Server] ***********************************************************
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 任务 [安装/更新到最新版本的 Apache Web Server] ***********************************************************
- en: 'ok: [web01.example.org]'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 成功：[web01.example.org]
- en: 'ok: [web02.example.org]'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 成功：[web02.example.org]
- en: PLAY RECAP **********************************************************
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 执行回顾 **********************************************************
- en: 'web01.example.org          : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 'web01.example.org : 成功=2    更改=0    无法访问=0    失败=0    跳过=0    救援=0    忽略=0'
- en: 'web02.example.org          : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 'web02.example.org : 成功=2    更改=0    无法访问=0    失败=0    跳过=0    救援=0    忽略=0'
- en: '[PRE14]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '- name: Install/Update to the latest of Apache Web Server'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 名称：安装/更新到最新版本的 Apache Web Server'
- en: 'ansible.builtin.apt:'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'ansible.builtin.apt:'
- en: 'name: apache2'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 名称：apache2
- en: 'state: latest'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 状态：最新
- en: '[PRE15]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '- name: Install/Update to the latest of Apache Web Server'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称：安装/更新到最新版本的 Apache Web Server'
- en: 'ansible.builtin.apt:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 'ansible.builtin.apt:'
- en: 'name:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 名称：
- en: '- apache2'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '- apache2'
- en: '- apache2-utils'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '- apache2-utils'
- en: 'state: latest'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 状态：最新
- en: '[PRE16]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'ansible.builtin.service:'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'ansible.builtin.service:'
- en: 'name: apache2'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 名称：apache2
- en: 'state: restarted'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 状态：重启
- en: '[PRE17]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '---'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '---'
- en: 'employees:'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 员工：
- en: '- name: daniel'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 名称：daniel'
- en: 'fullname: Daniel Oh'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 全名：Daniel Oh
- en: 'role: DevOps Evangelist'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 角色：DevOps 布道者
- en: 'level: Expert'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 水平：专家
- en: 'skills:'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 技能：
- en: '- Kubernetes'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- Kubernetes'
- en: '- Microservices'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 微服务'
- en: '- Ansible'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- Ansible'
- en: '- Linux Container'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- Linux 容器'
- en: '- name: michael'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 名称：michael'
- en: 'fullname: Michael Smith'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 全名：Michael Smith
- en: 'role: Enterprise Architect'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 角色：企业架构师
- en: 'level: Advanced'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 水平：高级
- en: 'skills:'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 技能：
- en: '- Cloud'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 云'
- en: '- Middleware'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 中间件'
- en: '- Windows'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- Windows'
- en: '- Storage'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 存储'
- en: '[PRE18]'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Specialty: |'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 专业特长：|
- en: Agile methodology
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 敏捷方法论
- en: Cloud-native app development practices
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 云原生应用开发实践
- en: Advanced enterprise DevOps practices
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 高级企业 DevOps 实践
- en: '[PRE19]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Agile methodology
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 敏捷方法论
- en: Cloud-native app development practices
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 云原生应用开发实践
- en: Advanced enterprise DevOps practices
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 高级企业 DevOps 实践
- en: '[PRE20]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Specialty: >'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 专业特长：>
- en: Agile methodology
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 敏捷方法论
- en: Cloud-native app development practices
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 云原生应用开发实践
- en: Advanced enterprise DevOps practices
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 高级企业 DevOps 实践
- en: '[PRE21]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Agile methodologyCloud-native app development practicesAdvanced enterprise DevOps
    practices
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 敏捷方法论云原生应用开发实践高级企业 DevOps 实践
- en: '[PRE22]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '---'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: 'servers:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器：
- en: '- frontend'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '- 前端'
- en: '- backend'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '- 后端'
- en: '- database'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '- 数据库'
- en: '- cache'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '- 缓存'
- en: 'employees:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 员工：
- en: '- name: daniel'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称：daniel'
- en: 'fullname: Daniel Oh'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 全名：Daniel Oh
- en: 'role: DevOps Evangelist'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 角色：DevOps 布道者
- en: 'level: Expert'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 水平：专家
- en: 'skills:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 技能：
- en: '- Kubernetes'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '- Kubernetes'
- en: '- Microservices'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '- 微服务'
- en: '- Ansible'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '- Ansible'
- en: '- Linux Container'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '- Linux 容器'
- en: '- name: michael'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '- 名称：michael'
- en: 'fullname: Michael Smiths'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 全名：Michael Smiths
- en: 'role: Enterprise Architect'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 角色：企业架构师
- en: 'level: Advanced'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 水平：高级
- en: 'skills:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 技能：
- en: '- Cloud'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '- 云'
- en: '- Middleware'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '- 中间件'
- en: '- Windows'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '- Windows'
- en: '- Storage'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '- 存储'
- en: 'Speciality: |'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 专业特长：|
- en: Agile methodology
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 敏捷方法论
- en: Cloud-native app development practices
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 云原生应用开发实践
- en: Advanced enterprise DevOps practices
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 高级企业 DevOps 实践
- en: '[PRE23]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '---'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: 'employees: [{"fullname": "Daniel Oh","level": "Expert","name": "daniel","role":
    "DevOps Evangelist","skills": ["Kubernetes","Microservices","Ansible","Linux Container"]},{"fullname":
    "Michael Smiths","level": "Advanced","name": "michael","role": "Enterprise Architect","skills":["Cloud","Middleware","Windows","Storage"]}]'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '员工：[{"全名": "Daniel Oh","水平": "专家","名称": "daniel","角色": "DevOps 布道者","技能": ["Kubernetes","微服务","Ansible","Linux
    容器"]},{"全名": "Michael Smiths","水平": "高级","名称": "michael","角色": "企业架构师","技能":["云","中间件","Windows","存储"]}]'
- en: '[PRE24]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'version: "2.0"'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 版本： "2.0"
- en: '[PRE25]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[frontends_na_zone]'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '[frontends_na_zone]'
- en: frontend1-na.example.com
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: frontend1-na.example.com
- en: frontend2-na.example.com
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: frontend2-na.example.com
- en: '[frontends_emea_zone]'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '[frontends_emea_zone]'
- en: frontend1-emea.example.com
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: frontend1-emea.example.com
- en: frontend2-emea.example.com
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: frontend2-emea.example.com
- en: '[appservers_na_zone]'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '[appservers_na_zone]'
- en: appserver1-na.example.com
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: appserver1-na.example.com
- en: appserver2-na.example.com
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: appserver2-na.example.com
- en: '[appservers_emea_zone]'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '[appservers_emea_zone]'
- en: appserver1-emea.example.com
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: appserver1-emea.example.com
- en: appserver2-emea.example.com
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: appserver2-emea.example.com
- en: '[PRE26]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '---'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '---'
- en: '- hosts: frontends_na_zone'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- hosts: frontends_na_zone'
- en: 'remote_user: james'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'remote_user: james'
- en: 'gather_facts: no'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'gather_facts: no'
- en: 'tasks:'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '任务:'
- en: '- name: simple connection test'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- name: simple connection test'
- en: 'ansible.builtin.ping:'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'ansible.builtin.ping:'
- en: '[PRE27]'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: $ ansible-playbook -i production-inventory frontends-na.yml
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ ansible-playbook -i production-inventory frontends-na.yml
- en: PLAY [frontends_na_zone]  ******************************************************
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 执行 [frontends_na_zone] ******************************************************
- en: TASK [simple connection test] *****************************************************
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 任务 [简单连接测试] *****************************************************
- en: 'ok: [frontend2-na.example.com]'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'ok: [frontend2-na.example.com]'
- en: 'ok: [frontend1-na.example.com]'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'ok: [frontend1-na.example.com]'
- en: PLAY RECAP **********************************************
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 执行回顾 **********************************************
- en: 'frontend1-na.example.com   : ok=1    changed=0    unreachable=0    failed=0
        skipped=0    rescued=0    ignored=0'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'frontend1-na.example.com   : ok=1    changed=0    unreachable=0    failed=0
        skipped=0    rescued=0    ignored=0'
- en: 'ansible.builtin.ping module to perform a connection test, but in a real-world
    situation, you would perform more complex tasks, such as installing packages or
    modifying files. Specify that this playbook is run against this host group from
    the appservers_emea_zone inventory. Add the following contents to the playbook:'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用 ansible.builtin.ping 模块进行连接测试，但在实际情况中，您将执行更复杂的任务，例如安装软件包或修改文件。指定此 playbook
    针对 appservers_emea_zone 清单中的主机组运行。将以下内容添加到 playbook 中：
- en: '[PRE28]'
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: $ ansible-playbook -i production-inventory appservers-emea.yml
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible-playbook -i production-inventory appservers-emea.yml
- en: PLAY [appservers_emea_zone] ******************************************************
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 执行 [appservers_emea_zone] ******************************************************
- en: TASK [simple connection test] *************************************************************
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 任务 [简单连接测试] *************************************************************
- en: 'ok: [appserver1-emea.example.com]'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 'ok: [appserver1-emea.example.com]'
- en: 'ok: [appserver2-emea.example.com]'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 'ok: [appserver2-emea.example.com]'
- en: PLAY RECAP *****************************************************
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 执行回顾 *****************************************************
- en: 'appserver1-emea.example.com : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 'appserver1-emea.example.com : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
- en: 'appserver2-emea.example.com : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 'appserver2-emea.example.com : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
- en: '[PRE30]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '---'
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '---'
- en: '- ansible.builtin.import_playbook: frontends-na.yml'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- ansible.builtin.import_playbook: frontends-na.yml'
- en: '- ansible.builtin.import_playbook: appservers-emea.yml'
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- ansible.builtin.import_playbook: appservers-emea.yml'
- en: '[PRE31]'
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: $ ansible-playbook -i production-inventory site.yml
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible-playbook -i production-inventory site.yml
- en: PLAY [frontends_na_zone] **********************************************************
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 执行 [frontends_na_zone] **********************************************************
- en: TASK [simple connection test] **********************************************************
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 任务 [简单连接测试] **********************************************************
- en: 'ok: [frontend2-na.example.com]'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 'ok: [frontend2-na.example.com]'
- en: 'ok: [frontend1-na.example.com]'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 'ok: [frontend1-na.example.com]'
- en: PLAY [appservers_emea_zone] **********************************************************
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 执行 [appservers_emea_zone] **********************************************************
- en: TASK [simple connection test] *************************************************************
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 任务 [简单连接测试] *************************************************************
- en: 'ok: [appserver2-emea.example.com]'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 'ok: [appserver2-emea.example.com]'
- en: 'ok: [appserver1-emea.example.com]'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 'ok: [appserver1-emea.example.com]'
- en: PLAY RECAP *********************************************************
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 执行回顾 *********************************************************
- en: 'appserver1-emea.example.com : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 'appserver1-emea.example.com : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
- en: 'appserver2-emea.example.com : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 'appserver2-emea.example.com : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
- en: 'frontend1-na.example.com   : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 'frontend1-na.example.com   : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
- en: 'frontend2-na.example.com   : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 'frontend2-na.example.com   : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
- en: '[PRE32]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: $ ansible-config init --disabled > ansible.cfg
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible-config init --disabled > ansible.cfg
- en: '[PRE33]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: $ ansible-config list
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ ansible-config list
- en: '[PRE34]'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: $ ansible-config list
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible-config list
- en: 'ACTION_WARNINGS:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 'ACTION_WARNINGS:'
- en: 'default: true'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '默认值: true'
- en: 'description:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '描述:'
- en: '- By default Ansible will issue a warning when received from a task action
    (module'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '- 默认情况下，Ansible 在接收到任务操作（模块或操作插件）时会发出警告。'
- en: or action plugin)
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 或操作插件)
- en: '- These warnings can be silenced by adjusting this setting to False.'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '- 可以通过将此设置调整为 False 来消除这些警告。'
- en: 'env:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 'env:'
- en: '- name: ANSIBLE_ACTION_WARNINGS'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '- name: ANSIBLE_ACTION_WARNINGS'
- en: 'ini:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 'ini:'
- en: '- key: action_warnings'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '- key: action_warnings'
- en: 'section: defaults'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 'section: defaults'
- en: 'name: Toggle action warnings'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 'name: 切换操作警告'
- en: 'type: boolean'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 'type: boolean'
- en: 'version_added: ''2.5'''
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 'version_added: ''2.5'''
- en: 'AGNOSTIC_BECOME_PROMPT:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 'AGNOSTIC_BECOME_PROMPT:'
- en: 'default: true'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 'default: true'
- en: 'description: Display an agnostic become prompt instead of displaying a prompt
    containing'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 'description: 显示一个无关的变成提示，而不是显示包含提示的变成提示'
- en: the command line supplied become method
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行提供的变成方法
- en: 'env:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 'env:'
- en: '- name: ANSIBLE_AGNOSTIC_BECOME_PROMPT'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '- name: ANSIBLE_AGNOSTIC_BECOME_PROMPT'
- en: 'ini:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 'ini:'
- en: '- key: agnostic_become_prompt'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '- key: agnostic_become_prompt'
- en: 'section: privilege_escalation'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 'section: privilege_escalation'
- en: 'name: Display an agnostic become prompt'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 'name: 显示一个无关的变成提示'
- en: 'type: boolean'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 'type: boolean'
- en: 'version_added: ''2.5'''
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 'version_added: ''2.5'''
- en: 'yaml:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 'yaml:'
- en: 'key: privilege_escalation.agnostic_become_prompt'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 'key: privilege_escalation.agnostic_become_prompt'
- en: '[PRE35]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: $ ansible-config dump
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ ansible-config dump
- en: '[PRE36]'
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: $ ansible-config dump
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible-config dump
- en: ACTION_WARNINGS(default) = True
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: ACTION_WARNINGS(default) = True
- en: AGNOSTIC_BECOME_PROMPT(default) = True
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: AGNOSTIC_BECOME_PROMPT(default) = True
- en: ANSIBLE_CONNECTION_PATH(default) = None
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: ANSIBLE_CONNECTION_PATH(default) = None
- en: ANSIBLE_COW_ACCEPTLIST(default) = ['bud-frogs', 'bunny', 'cheese', 'daemon',
    'default', 'dragon', 'elephant-in-snake', 'elephant', 'eyes', 'hellok>
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: ANSIBLE_COW_ACCEPTLIST(default) = ['bud-frogs', 'bunny', 'cheese', 'daemon',
    'default', 'dragon', 'elephant-in-snake', 'elephant', 'eyes', 'hellok>
- en: ANSIBLE_COW_PATH(default) = None
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: ANSIBLE_COW_PATH(default) = None
- en: ANSIBLE_COW_SELECTION(default) = default
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: ANSIBLE_COW_SELECTION(default) = default
- en: ANSIBLE_FORCE_COLOR(default) = False
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: ANSIBLE_FORCE_COLOR(default) = False
- en: ANSIBLE_HOME(default) = /home/james/.ansible
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: ANSIBLE_HOME(default) = /home/james/.ansible
- en: …
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: …
- en: CONFIG_FILE() = None
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: CONFIG_FILE() = None
- en: …
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: …
- en: '[PRE37]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: $ export ANSIBLE_FORCE_COLOR=True
  id: totrans-309
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ export ANSIBLE_FORCE_COLOR=True
- en: '[PRE38]'
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: $ ansible-config dump --only-change
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible-config dump --only-change
- en: 'ANSIBLE_FORCE_COLOR(env: ANSIBLE_FORCE_COLOR) = True'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 'ANSIBLE_FORCE_COLOR(env: ANSIBLE_FORCE_COLOR) = True'
- en: ansible-config tells us that we have only changed ANSIBLE_FORCE_COLOR from the
    default value, which it is set to True, and that we set it through an env variable.
    Note that CONFIG_FILE has also been changed but no source for the change is found
    – this is because I installed Ansible via PIP, and so /etc/ansible/ansible.cfg
    (and other valid configuration files) do not exist – thus, this is expected behavior.
    This is an incredibly valuable tool, especially if you have to debug configuration
    issues.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: ansible-config 告诉我们，我们只改变了 ANSIBLE_FORCE_COLOR 的默认值，它被设置为 True，而且我们通过环境变量进行了设置。注意，CONFIG_FILE
    也已更改，但没有找到更改的来源——这是因为我通过 PIP 安装了 Ansible，因此 /etc/ansible/ansible.cfg（以及其他有效的配置文件）不存在——因此，这是预期的行为。这是一个非常有价值的工具，尤其是当你需要调试配置问题时。
- en: 'When working with the Ansible configuration file itself, you will note that
    it is in INI format, meaning it has sections such as `[defaults]`, parameters
    in the format `key = value`, and comments beginning with either `#` or `;`. You
    only need to place the parameters you wish to change from their defaults in your
    configuration file, so if you wanted to create a simple configuration to change
    the location of your default inventory file, it might look as follows:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 当处理 Ansible 配置文件时，你会注意到它是 INI 格式的，这意味着它包含诸如`[defaults]`这样的部分，`key = value`格式的参数，以及以`#`或`;`开头的注释。你只需要在配置文件中放置你希望更改的默认参数，因此，如果你想创建一个简单的配置来更改默认库存文件的位置，它可能如下所示：
- en: '[PRE39]'
  id: totrans-315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: As discussed earlier, one of the possible valid locations for the `ansible.cfg`
    configuration file is in your current working directory. It is likely that this
    is within your home directory, so on a multi-user system, we strongly recommend
    you restrict access to the Ansible configuration file to your user account alone.
    You should take all the usual precautions when it comes to securing important
    configuration files on a multi-user system, especially as Ansible is normally
    used to configure multiple remote systems, and so, a lot of damage could be done
    if a configuration file was inadvertently compromised!
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，`ansible.cfg`配置文件可能的有效位置之一是在当前工作目录中。它很可能位于你的主目录中，因此在多用户系统上，我们强烈建议你将 Ansible
    配置文件的访问权限限制为仅限你的用户账户。你应该采取所有常规预防措施来保护多用户系统上的重要配置文件，特别是因为 Ansible 通常用于配置多个远程系统，因此，如果配置文件不小心泄露，可能会造成很大损害！
- en: 'It is also important to note that the behavior of environment variables and
    configuration files is additive—thus with the configuration file I just mentioned
    in place, running the dump of the changed configuration again will yield the following:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 同样需要注意的是，环境变量和配置文件的行为是递加的——因此，按照我刚才提到的配置文件，当再次运行已更改配置的 dump 时，将会得到以下结果：
- en: '[PRE40]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Of course, Ansible’s behavior is not just controlled by the configuration files
    and switches—the command-line arguments that you pass to the various Ansible executables
    are also of vital importance. In fact, we have already worked with several already.
    We have shown you how to change where Ansible looks for its inventory file using
    the `inventory` parameter in `ansible.cfg`. However, in many of the examples that
    we previously covered in this book, we overrode this with the `-i` switch when
    running Ansible. So, let’s proceed to the next section to look at the use of command-line
    arguments when running Ansible.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，Ansible的行为不仅仅受到配置文件和开关的控制——你传递给各种Ansible可执行文件的命令行参数也至关重要。事实上，我们已经使用过其中一些参数。我们已经向你展示了如何使用`ansible.cfg`中的`inventory`参数来更改Ansible查找库存文件的位置。然而，在本书之前的许多例子中，我们在运行Ansible时使用`-i`开关覆盖了这一设置。那么，让我们继续下一部分，了解在运行Ansible时如何使用命令行参数。
- en: Command-line arguments
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行参数
- en: In this section, you will learn about the use of command-line arguments for
    playbook execution and how to employ some of the more commonly used ones to your
    advantage. We are already very familiar with one of these arguments, the `--version`
    switch, which we use to confirm that Ansible is installed (and which version is
    installed).
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，你将学习如何使用命令行参数来执行playbook，以及如何利用一些常用的参数为自己带来便利。我们已经非常熟悉其中一个参数，`--version`开关，用来确认Ansible是否已安装（以及安装的是哪个版本）。
- en: 'Just as we were able to learn about the various configuration parameters directly
    through Ansible, we can also learn about the command-line arguments. Almost all
    of the Ansible executables have a `--help` option that you can run to display
    the valid command-line parameters. Let’s try this out now:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 就像我们能够通过Ansible直接了解各种配置参数一样，我们也可以了解命令行参数。几乎所有的Ansible可执行文件都有一个`--help`选项，你可以运行它来显示有效的命令行参数。现在让我们尝试一下：
- en: 'You can view all the options and arguments when you execute the `ansible` command
    line. Use the following command:'
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以查看执行`ansible`命令时所有可用的选项和参数。使用以下命令：
- en: '[PRE41]'
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'You will see a great deal of helpful output when you run the preceding command;
    a snippet of this is shown in the following code block (you might want to pipe
    this into a pager, such as `less`, so that you can read it all easily):'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行上面的命令时，你会看到大量有用的输出；以下代码块展示了一部分输出（你可能想将它通过`less`等分页工具输出，以便轻松阅读）：
- en: '![Figure 2.2 – An example of the output of Ansible’s built-in help](img/B20846_02_002.jpg)'
  id: totrans-326
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.2 – Ansible内置帮助输出示例](img/B20846_02_002.jpg)'
- en: Figure 2.2 – An example of the output of Ansible’s built-in help
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.2 – Ansible内置帮助输出示例
- en: 'We could take one example from the preceding code to build on our previous
    use of the `ansible` command; so far, we have almost exclusively used it to run
    ad hoc tasks with the `-m` and `-a` parameters. However, `ansible` can also perform
    useful tasks such as telling us about the hosts in a group within our inventory.
    We could explore this using the `production-inventory` file we used earlier in
    this chapter:'
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以从前面的代码中举一个例子，基于之前使用`ansible`命令的经验进行扩展；到目前为止，我们几乎只使用它来运行带有`-m`和`-a`参数的临时任务。然而，`ansible`还可以执行一些有用的任务，比如告诉我们关于库存中某个组的主机信息。我们可以通过本章早些时候使用的`production-inventory`文件来探讨这一点：
- en: '[PRE42]'
  id: totrans-329
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'When you run this, you should see the members of the `appservers_emea_zone`
    inventory group listed. Although perhaps a little contrived, this example is incredibly
    valuable when you start working with dynamic inventory files and you can no longer
    just `cat` your inventory file to the terminal to view the contents:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行这个命令时，你应该会看到`appservers_emea_zone`库存组的成员列出。虽然这个例子可能有些牵强，但当你开始使用动态库存文件，并且不能再直接通过`cat`命令将库存文件内容输出到终端时，这个例子非常有价值：
- en: '[PRE43]'
  id: totrans-331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: $ ansible-playbook -i production-inventory site.yml --private-key ~/keys/id_rsa
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible-playbook -i production-inventory site.yml --private-key ~/keys/id_rsa
- en: '[PRE44]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: $ ansible-playbook -i production-inventory site.yml --user james
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible-playbook -i production-inventory site.yml --user james
- en: '[PRE45]'
  id: totrans-335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[frontends_na_zone]'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '[frontends_na_zone]'
- en: frontend1-na.example.com
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: frontend1-na.example.com
- en: frontend2-na.example.com
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: frontend2-na.example.com
- en: '[frontends_emea_zone]'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '[frontends_emea_zone]'
- en: frontend1-emea.example.com
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: frontend1-emea.example.com
- en: frontend2-emea.example.com
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: frontend2-emea.example.com
- en: '[appservers_na_zone]'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: '[appservers_na_zone]'
- en: appserver1-na.example.com
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: appserver1-na.example.com
- en: appserver2-na.example.com
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: appserver2-na.example.com
- en: '[appservers_emea_zone]'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: '[appservers_emea_zone]'
- en: appserver1-emea.example.com
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: appserver1-emea.example.com
- en: appserver2-emea.example.com
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: appserver2-emea.example.com
- en: '[PRE46]'
  id: totrans-348
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: $ ansible -i production-inventory frontends_emea_zone -a /usr/bin/date
  id: totrans-349
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ ansible -i production-inventory frontends_emea_zone -a /usr/bin/date
- en: '[PRE47]'
  id: totrans-350
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: $ ansible -i production-inventory frontends_emea_zone -a /usr/bin/date
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible -i production-inventory frontends_emea_zone -a /usr/bin/date
- en: frontend2-emea.example.com | CHANGED | rc=0 >>
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: frontend2-emea.example.com | 已更改 | rc=0 >>
- en: Tue Apr 25 14:26:30 UTC 2023
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 星期二 4月 25 14:26:30 UTC 2023
- en: frontend1-emea.example.com | CHANGED | rc=0 >>
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: frontend1-emea.example.com | 已更改 | rc=0 >>
- en: Tue Apr 25 14:26:30 UTC 2023
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 星期二 4月 25 14:26:30 UTC 2023
- en: '[PRE48]'
  id: totrans-356
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: $ ansible -i production-inventory frontends_emea_zone -a /usr/sbin/pvs -u james
  id: totrans-357
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ ansible -i production-inventory frontends_emea_zone -a /usr/sbin/pvs -u james
- en: frontend2-emea.example.com | FAILED | rc=5 >>
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: frontend2-emea.example.com | 失败 | rc=5 >>
- en: 'WARNING: Running as a non-root user. Functionality may be unavailable.'
  id: totrans-359
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 警告：以非根用户身份运行，功能可能不可用。
- en: '/run/lock/lvm/P_global:aux: open failed: Permission deniednon-zero return code'
  id: totrans-360
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '/run/lock/lvm/P_global:aux: 打开失败：权限被拒绝，非零返回代码'
- en: frontend1-emea.example.com | FAILED | rc=5 >>
  id: totrans-361
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: frontend1-emea.example.com | 失败 | rc=5 >>
- en: 'WARNING: Running as a non-root user. Functionality may be unavailable.'
  id: totrans-362
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 警告：以非根用户身份运行，功能可能不可用。
- en: 'james user account does not have the privileges required to successfully run
    the pvs command. However, we can fix this by adding the --become command-line
    argument, which tells Ansible to become root on the remote systems:'
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: james 用户账户没有执行 pvs 命令所需的权限。然而，我们可以通过添加 --become 命令行参数来解决这个问题，告诉 Ansible 在远程系统上以
    root 身份执行：
- en: '[PRE49]'
  id: totrans-364
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: $ ansible -i production-inventory frontends_emea_zone -a /usr/sbin/pvs -u james
    --become --ask-become-pass
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ ansible -i production-inventory frontends_emea_zone -a /usr/sbin/pvs -u james
    --become --ask-become-pass
- en: 'BECOME password:'
  id: totrans-366
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: BECOME 密码：
- en: frontend2-emea.example.com | CHANGED | rc=0 >>
  id: totrans-367
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: frontend2-emea.example.com | 已更改 | rc=0 >>
- en: PV         VG      Fmt  Attr PSize  PFree
  id: totrans-368
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: PV         VG      Fmt  Attr PSize  PFree
- en: /dev/vdb1  vg_data lvm2 a--  <8.00g <8.00g
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: /dev/vdb1  vg_data lvm2 a--  <8.00g <8.00g
- en: frontend1-emea.example.com | CHANGED | rc=0 >>
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: frontend1-emea.example.com | 已更改 | rc=0 >>
- en: PV         VG      Fmt  Attr PSize  PFree
  id: totrans-371
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: PV         VG      Fmt  Attr PSize  PFree
- en: '-m command-line argument, Ansible assumes you want to use the ansible.builtin.command
    module (see https://docs.ansible.com/ansible/latest/modules/command_module.xhtml).
    If you wish to use a specific module, you can add the -m switch to the command-line
    arguments and then specify the module arguments under the -a switch, as in the
    following example:'
  id: totrans-372
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: -m 命令行参数，Ansible 假定您要使用 ansible.builtin.command 模块（请参见 https://docs.ansible.com/ansible/latest/modules/command_module.xhtml）。如果您希望使用特定模块，可以在命令行参数中添加
    -m 开关，然后在 -a 开关下指定模块参数，如以下示例所示：
- en: '[PRE50]'
  id: totrans-373
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-374
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[PRE52]'
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: $ ansible -i production-inventory frontends_emea_zone -B 7200 -P 0 -a "sleep
    2h"
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible -i production-inventory frontends_emea_zone -B 7200 -P 0 -a "sleep
    2h"
- en: frontend1-emea.example.com | CHANGED => {
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: frontend1-emea.example.com | 已更改 => {
- en: '"ansible_facts": {'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: '"ansible_facts": {'
- en: '"discovered_interpreter_python": "/usr/bin/python3"'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: '"discovered_interpreter_python": "/usr/bin/python3"'
- en: '},'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '"ansible_job_id": "809218129417.1291",'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: '"ansible_job_id": "809218129417.1291",'
- en: '"changed": true,'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: '"changed": true,'
- en: '"finished": 0,'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: '"finished": 0,'
- en: '"results_file": "/home/james/.ansible_async/809218129417.1291",'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: '"results_file": "/home/james/.ansible_async/809218129417.1291",'
- en: '"started": 1'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: '"started": 1'
- en: '}'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: frontend2-emea.example.com | CHANGED => {
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: frontend2-emea.example.com | 已更改 => {
- en: '"ansible_facts": {'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: '"ansible_facts": {'
- en: '"discovered_interpreter_python": "/usr/bin/python3"'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: '"discovered_interpreter_python": "/usr/bin/python3"'
- en: '},'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '"ansible_job_id": "772164843356.1273",'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: '"ansible_job_id": "772164843356.1273",'
- en: '"changed": true,'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: '"changed": true,'
- en: '"finished": 0,'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: '"finished": 0,'
- en: '"results_file": "/home/james/.ansible_async/772164843356.1273",'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: '"results_file": "/home/james/.ansible_async/772164843356.1273",'
- en: '"started": 1'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: '"started": 1'
- en: '}'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE53]'
  id: totrans-397
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: $ ansible -i production-inventory frontend2-emea.example.com -m ansible.builtin.async_status
    -a "jid=772164843356.1273"
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible -i production-inventory frontend2-emea.example.com -m ansible.builtin.async_status
    -a "jid=772164843356.1273"
- en: frontend2-emea.example.com | SUCCESS => {
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: frontend2-emea.example.com | 成功 => {
- en: '"ansible_facts": {'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: '"ansible_facts": {'
- en: '"discovered_interpreter_python": "/usr/bin/python3"'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: '"discovered_interpreter_python": "/usr/bin/python3"'
- en: '},'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '"ansible_job_id": "772164843356.1273",'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: '"ansible_job_id": "772164843356.1273",'
- en: '"changed": false,'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: '"changed": false,'
- en: '"finished": 0,'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: '"finished": 0,'
- en: '"results_file": "/home/james/.ansible_async/772164843356.1273",'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: '"results_file": "/home/james/.ansible_async/772164843356.1273",'
- en: '"started": 1,'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: '"started": 1,'
- en: '"stderr": "",'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: '"stderr": "",'
- en: '"stderr_lines": [],'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: '"stderr_lines": [],'
- en: '"stdout": "",'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: '"stdout": "",'
- en: '"stdout_lines": []'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: '"stdout_lines": []'
- en: '}'
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE54]'
  id: totrans-413
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: $ ansible -i production-inventory frontend2-emea.example.com -a "pkill sleep"
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible -i production-inventory frontend2-emea.example.com -a "pkill sleep"
- en: frontend2-emea.example.com | CHANGED | rc=0 >>
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: frontend2-emea.example.com | 已更改 | rc=0 >>
- en: james@controlnode:~/code/chapter02$ ansible -i production-inventory frontend2-emea.example.com
    -m ansible.builtin.async_status -a "jid=772164843356.1273"
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: james@controlnode:~/code/chapter02$ ansible -i production-inventory frontend2-emea.example.com
    -m ansible.builtin.async_status -a "jid=772164843356.1273"
- en: frontend2-emea.example.com | FAILED! => {
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: frontend2-emea.example.com | 失败! => {
- en: '"ansible_facts": {'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: '"ansible_facts": {'
- en: '"discovered_interpreter_python": "/usr/bin/python3"'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: '"discovered_interpreter_python": "/usr/bin/python3"'
- en: '},'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '"ansible_job_id": "772164843356.1273",'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: '"ansible_job_id": "772164843356.1273",'
- en: '"changed": true,'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: '"changed": true,'
- en: '"cmd": ['
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: '"cmd": ['
- en: '"sleep",'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: '"sleep",'
- en: '"2h"'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: '"2h"'
- en: '],'
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: '],'
- en: '"delta": "0:02:06.526826",'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: '"delta": "0:02:06.526826",'
- en: '"end": "2023-04-25 14:45:13.024199",'
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: '"end": "2023-04-25 14:45:13.024199",'
- en: '"finished": 1,'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: '"finished": 1,'
- en: '"msg": "non-zero return code",'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: '"msg": "非零返回码",'
- en: '"rc": -15,'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: '"rc": -15,'
- en: '"results_file": "/home/james/.ansible_async/772164843356.1273",'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: '"results_file": "/home/james/.ansible_async/772164843356.1273",'
- en: '"start": "2023-04-25 14:43:06.497373",'
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: '"start": "2023-04-25 14:43:06.497373",'
- en: '"started": 1,'
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: '"started": 1,'
- en: '"stderr": "",'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: '"stderr": "",'
- en: '"stderr_lines": [],'
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: '"stderr_lines": [],'
- en: '"stdout": "",'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: '"stdout": "",'
- en: '"stdout_lines": []'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: '"stdout_lines": []'
- en: '}'
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE55]'
  id: totrans-440
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'region:'
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 'region:'
- en: 'east: app'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 'east: app'
- en: 'west: frontend'
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 'west: frontend'
- en: 'central: cache'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 'central: cache'
- en: '[PRE56]'
  id: totrans-445
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: bracket notation
  id: totrans-446
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 括号表示法
- en: region['east']
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: region['east']
- en: dot notation
  id: totrans-448
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 点符号表示法
- en: region.east
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: region.east
- en: '[PRE57]'
  id: totrans-450
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '---'
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: 'redis:'
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 'redis:'
- en: '- server: cacheserver01.example.com'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: '- server: cacheserver01.example.com'
- en: 'port: 6379'
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 'port: 6379'
- en: 'slaveof: cacheserver02.example.com'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 'slaveof: cacheserver02.example.com'
- en: '[PRE58]'
  id: totrans-456
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'roles:'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 'roles:'
- en: '- role: dbms_admin'
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: '- role: dbms_admin'
- en: 'vars:'
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 'vars:'
- en: 'username: James'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 'username: James'
- en: '- role: system_admin'
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: '- role: system_admin'
- en: 'vars:'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 'vars:'
- en: 'username: John'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 'username: John'
- en: '- role: security_amdin'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: '- role: security_amdin'
- en: 'vars:'
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 'vars:'
- en: 'username: Rock'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 'username: Rock'
- en: '- role: app_admin'
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: '- role: app_admin'
- en: 'vars:'
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 'vars:'
- en: 'username: Daniel'
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 'username: Daniel'
- en: '[PRE59]'
  id: totrans-470
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '---'
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: '- name: Display redis variables'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: '- name: 显示 redis 变量'
- en: 'hosts: all'
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 'hosts: all'
- en: 'vars:'
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 'vars:'
- en: 'redis:'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 'redis:'
- en: 'server: cacheserver01.example.com'
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 'server: cacheserver01.example.com'
- en: 'port: 6379'
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 'port: 6379'
- en: 'slaveof: cacheserver02.example.com'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 'slaveof: cacheserver02.example.com'
- en: 'tasks:'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: 'tasks:'
- en: '- name: Display the redis port'
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: '- name: 显示 redis 端口'
- en: 'ansible.builtin.debug:'
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 'ansible.builtin.debug:'
- en: 'msg: "The redis port for {{ redis.server }} is {{ redis.port }}"'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 'msg: "redis 服务器 {{ redis.server }} 的端口是 {{ redis.port }}"'
- en: '[PRE60]'
  id: totrans-483
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: $ ansible-playbook -i localhost, -c local redis-playbook.yml
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible-playbook -i localhost, -c local redis-playbook.yml
- en: PLAY [Display redis variables] **********************************************************
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: PLAY [显示 redis 变量] **********************************************************
- en: TASK [Gathering Facts] **********************************************************
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: TASK [收集事实] **********************************************************
- en: 'ok: [localhost]'
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: 'ok: [localhost]'
- en: TASK [Display the redis port] **********************************************************
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: TASK [显示 redis 端口] **********************************************************
- en: 'ok: [localhost] => {'
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: 'ok: [localhost] => {'
- en: '"msg": "The redis port for cacheserver01.example.com is 6379"'
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: '"msg": "cacheserver01.example.com 的 redis 端口是 6379"'
- en: '}'
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: PLAY RECAP **********************************************************
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: PLAY RECAP **********************************************************
- en: 'localhost                  : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 'localhost                  : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
- en: '[PRE61]'
  id: totrans-494
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'tags:'
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 'tags:'
- en: '- key: job'
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: '- key: job'
- en: 'value: developer'
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 'value: developer'
- en: '- key: language'
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: '- key: language'
- en: 'value: java'
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 'value: java'
- en: '[PRE62]'
  id: totrans-500
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '---'
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: '- name: Jinja2 filtering demo 1'
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: '- name: Jinja2 过滤演示 1'
- en: 'hosts: localhost'
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 'hosts: localhost'
- en: 'tasks:'
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 'tasks:'
- en: '- name: Copy sample data to /tmp'
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: '- name: 复制示例数据到 /tmp'
- en: 'ansible.builtin.copy:'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 'ansible.builtin.copy:'
- en: 'src: multiple-document-strings.yaml'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 'src: multiple-document-strings.yaml'
- en: 'dest: /tmp/multiple-document-strings.yaml'
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 'dest: /tmp/multiple-document-strings.yaml'
- en: '- name: Read sample data to a variable'
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: '- name: 读取示例数据到变量'
- en: 'ansible.builtin.shell: cat /tmp/multiple-document-strings.yaml'
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 'ansible.builtin.shell: cat /tmp/multiple-document-strings.yaml'
- en: 'register: result'
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: 'register: result'
- en: '- name: Print the filtered output in a debug message'
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: '- name: 打印调试信息中的过滤输出'
- en: 'ansible.builtin.debug:'
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 'ansible.builtin.debug:'
- en: 'msg: ''{{ item }}'''
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 'msg: ''{{ item }}'''
- en: 'loop: ''{{ result.stdout | from_yaml_all | list }}'''
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 'loop: ''{{ result.stdout | from_yaml_all | list }}'''
- en: '[PRE63]'
  id: totrans-516
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: PLAY [Jinja2 filtering demo 1] ************************************************************
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: PLAY [Jinja2 过滤演示 1] ************************************************************
- en: TASK [Gathering Facts] ************************************************************
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: TASK [收集事实] ************************************************************
- en: 'ok: [localhost]'
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: 'ok: [localhost]'
- en: TASK [Copy sample data to /tmp] ***********************************************************
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: TASK [复制示例数据到 /tmp] ***********************************************************
- en: 'changed: [localhost]'
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 'changed: [localhost]'
- en: TASK [Read sample data to a variable] ***********************************************************
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: TASK [读取示例数据到变量] ***********************************************************
- en: 'changed: [localhost]'
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: 'changed: [localhost]'
- en: TASK [Print the filtered output in a debug message] ***********************************************************
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: TASK [打印调试信息中的过滤输出] ***********************************************************
- en: 'ok: [localhost] => (item={''tags'': [{''key'': ''job'', ''value'': ''developer''},
    {''key'': ''language'', ''value'': ''java''}]}) => {'
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 'ok: [localhost] => (item={''tags'': [{''key'': ''job'', ''value'': ''developer''},
    {''key'': ''language'', ''value'': ''java''}]}) => {'
- en: '"msg": {'
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: '"msg": {'
- en: '"tags": ['
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: '"tags": ['
- en: '{'
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '"key": "job",'
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: '"key": "job",'
- en: '"value": "developer"'
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: '"value": "developer"'
- en: '},'
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '{'
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '"key": "language",'
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: '"key": "language",'
- en: '"value": "java"'
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: '"value": "java"'
- en: '}'
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: ']'
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: ']'
- en: '}'
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: PLAY RECAP ***************************************************
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: 执行回顾 ***************************************************
- en: 'localhost                  : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: 'localhost                  : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
- en: '[PRE64]'
  id: totrans-541
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '---'
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: '- name: Jinja2 filtering demo 2'
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: '- name: Jinja2 过滤演示 2'
- en: 'hosts: localhost'
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: 'hosts: localhost'
- en: 'vars:'
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: 'vars:'
- en: 'tags:'
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: 'tags:'
- en: '- key: job'
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: '- key: job'
- en: 'value: developer'
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: 'value: developer'
- en: '- key: language'
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: '- key: language'
- en: 'value: java'
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: 'value: java'
- en: 'tasks:'
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: 'tasks:'
- en: '- name: Filter the tags variable through items2dict'
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: '- name: 通过 items2dict 过滤标签变量'
- en: 'ansible.builtin.debug:'
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 'ansible.builtin.debug:'
- en: 'msg: ''{{ tags | items2dict }}'''
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: 'msg: ''{{ tags | items2dict }}'''
- en: '[PRE65]'
  id: totrans-555
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: $ ansible-playbook -i localhost, -c local jinja-filtering2.yml
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible-playbook -i localhost, -c local jinja-filtering2.yml
- en: '[WARNING]: Found variable using reserved name: tags'
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: '[警告]: 发现使用保留名称的变量: tags'
- en: PLAY [Jinja2 filtering demo 2] ***********************************************************
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: 执行 [Jinja2 过滤演示 2] ***********************************************************
- en: TASK [Gathering Facts] ***************************************************
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: 任务 [收集事实] ***************************************************
- en: 'ok: [localhost]'
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: 'ok: [localhost]'
- en: TASK [Filter the tags variable through items2dict] ***********************************************************
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: 任务 [通过 items2dict 过滤标签变量] ***********************************************************
- en: 'ok: [localhost] => {'
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: 'ok: [localhost] => {'
- en: '"msg": {'
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: '"msg": {'
- en: '"job": "developer",'
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: '"job": "developer",'
- en: '"language": "java"'
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: '"language": "java"'
- en: '}'
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: PLAY RECAP ***************************************************
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: 执行回顾 ***************************************************
- en: 'localhost                  : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: 'localhost                  : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
- en: '[PRE66]'
  id: totrans-570
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: '---'
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: '- name: Jinja2 filtering demo 3'
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: '- name: Jinja2 过滤演示 3'
- en: 'hosts: localhost'
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: 'hosts: localhost'
- en: 'vars:'
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: 'vars:'
- en: 'ping_value: "{{ lookup(''file'', ''/etc/hosts'') }}"'
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: 'ping_value: "{{ lookup(''file'', ''/etc/hosts'') }}"'
- en: 'tasks:'
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: 'tasks:'
- en: '- name: Display the values obtained from the file lookup'
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
  zh: '- name: 显示从文件查找中获取的值'
- en: 'ansible.builtin.debug:'
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
  zh: 'ansible.builtin.debug:'
- en: 'msg: "ping value is {{ ping_value }}"'
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: 'msg: "ping 值是 {{ ping_value }}"'
- en: '[PRE67]'
  id: totrans-580
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: $ ansible-playbook -i localhost, -c local jinja-filtering3.yml
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible-playbook -i localhost, -c local jinja-filtering3.yml
- en: PLAY [Jinja2 filtering demo 3] ************************************************************
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: 执行 [Jinja2 过滤演示 3] ************************************************************
- en: TASK [Gathering Facts] ***************************************************
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
  zh: 任务 [收集事实] ***************************************************
- en: 'ok: [localhost]'
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
  zh: 'ok: [localhost]'
- en: TASK [Display the values obtained from the file lookup] ***********************************************************
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
  zh: 任务 [显示从文件查找中获取的值] ***********************************************************
- en: 'ok: [localhost] => {'
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: 'ok: [localhost] => {'
- en: '"msg": "ping value is 127.0.0.1 localhost\n\n# The following lines are desirable
    for IPv6 capable hosts\n::1 ip6-localhost ip6-loopback\nfe00::0 ip6-localnet\nff00::0
    ip6-mcastprefix\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\nff02::3 ip6-allhosts\n\n10.0.50.30
    frontend1-na.example.com frontend1-emea.example.com\n10.0.50.31 frontend2-na.example.com
    frontend2-emea.example.com\n\n10.0.50.40 appserver1-emea.example.com\n10.0.50.41
    appserver2-emea.example.com"'
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
  zh: '"msg": "ping 值是 127.0.0.1 localhost\n\n# 以下行适用于支持 IPv6 的主机\n::1 ip6-localhost
    ip6-loopback\nfe00::0 ip6-localnet\nff00::0 ip6-mcastprefix\nff02::1 ip6-allnodes\nff02::2
    ip6-allrouters\nff02::3 ip6-allhosts\n\n10.0.50.30 frontend1-na.example.com frontend1-emea.example.com\n10.0.50.31
    frontend2-na.example.com frontend2-emea.example.com\n\n10.0.50.40 appserver1-emea.example.com\n10.0.50.41
    appserver2-emea.example.com"'
- en: '}'
  id: totrans-588
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: PLAY RECAP **********************************************************
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
  zh: 执行回顾 **********************************************************
- en: 'localhost                  : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
  zh: 'localhost                  : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0'
- en: '[PRE68]'
  id: totrans-591
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Add some quotation in the shell
  id: totrans-592
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 shell 中添加一些引号
- en: '- shell: echo {{ string_value | quote }}'
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
  zh: '- shell: echo {{ string_value | quote }}'
- en: Concatenate a list into a specific string
  id: totrans-594
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将列表连接成特定字符串
- en: '{{ list | join("$") }}'
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
  zh: '{{ list | join("$") }}'
- en: Obtain the file name of a specific file path
  id: totrans-596
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取特定文件路径的文件名
- en: '{{ path | basename }}'
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: '{{ path | basename }}'
- en: Retrieve the directory from a full path
  id: totrans-598
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从完整路径中获取目录
- en: '{{ path | dirname }}'
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: '{{ path | dirname }}'
- en: Get the directory from a specific windows path
  id: totrans-600
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取特定 Windows 路径的目录
- en: '{{ path | win_dirname }}'
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: '{{ path | win_dirname }}'
- en: '[PRE69]'
  id: totrans-602
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '[PRE70]'
  id: totrans-603
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
