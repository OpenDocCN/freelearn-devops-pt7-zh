["```\nubuntu@node01:~$ docker network create -d bridge --subnet 172.100.0.0/16 SkyNet\n\n2679e6a7009912fbe5b8203c83011f5b3f3a5fa7c154deebb4a9aac7af80a6aa\n```", "```\nubuntu@node01:~$ docker network ls\nNETWORK ID          NAME                DRIVER              SCOPE\n2679e6a70099        SkyNet              bridge              local\ntruncated..\n```", "```\nubuntu@node01:~$ docker network inspect SkyNet\n[\n    {\n        \"Name\": \"SkyNet\",\n        \"Id\": \"2679e6a7009912fbe5b8203c83011f5b3f3a5fa7c154deebb4a9aac7af80a6aa\",\n        \"Created\": \"2017-11-05T02:26:22.790958921Z\",\n        \"Scope\": \"local\",\n        \"Driver\": \"bridge\",\n        \"EnableIPv6\": false,\n        \"IPAM\": {\n            \"Driver\": \"default\",\n            \"Options\": {},\n            \"Config\": [\n                {\n                    \"Subnet\": \"172.100.0.0/16\"\n                }\n            ]\n        },\n```", "```\nubuntu@node01:~$ docker run --network=SkyNet -itd --name=service1 alpine\nUnable to find image 'alpine:latest' locally\nlatest: Pulling from library/alpine\nb56ae66c2937: Pull complete\nDigest: sha256:d6bfc3baf615dc9618209a8d607ba2a8103d9c8a405b3bd8741d88b4bef36478\nStatus: Downloaded newer image for alpine:latest\n5f1fba3964fae85e90cc1b3854fc443de0b479f94af68c14d9d666999962e25a \n```", "```\nubuntu@node01:~$ docker run --network=SkyNet -itd --name=service2 alpine\n8f6ad6b88b52e446cee44df44d8eaa65a9fe0d76a2aecb156fac704c71b34e27\n```", "```\nubuntu@node01:~$ docker inspect service1\nTRUNCATED..\n\"NetworkID\": \"2679e6a7009912fbe5b8203c83011f5b3f3a5fa7c154deebb4a9aac7af80a6aa\",\n\"EndpointID\": \"47e16d352111007b9f19caf8c10a388e768cc20e5114a3b346d08c64f1934e1f\",\n\"Gateway\": \"172.100.0.1\",\n\"IPAddress\": \"172.100.0.2\",\n\"IPPrefixLen\": 16,\n\"IPv6Gateway\": \"\",\n\"GlobalIPv6Address\": \"\",\n\"GlobalIPv6PrefixLen\": 0,\n\"MacAddress\": \"02:42:ac:64:00:02\",\n\"DriverOpts\": null\n```", "```\nubuntu@node01:~$ docker inspect service2\nTRUNCATED..\n\"NetworkID\": \"2679e6a7009912fbe5b8203c83011f5b3f3a5fa7c154deebb4a9aac7af80a6aa\",\n\"EndpointID\": \"3ca5485aa27bd1baffa826b539f905b50005c9157d5a4b8ba0907d15a3ae7a21\",\n\"Gateway\": \"172.100.0.1\",\n\"IPAddress\": \"172.100.0.3\",\n\"IPPrefixLen\": 16,\n\"IPv6Gateway\": \"\",\n\"GlobalIPv6Address\": \"\",\n\"GlobalIPv6PrefixLen\": 0,\n\"MacAddress\": \"02:42:ac:64:00:03\",\n\"DriverOpts\": null\n```", "```\nubuntu@node01:~$ docker exec -it service1 /bin/sh\n/ # ping 172.100.0.3\nPING 172.100.0.3 (172.100.0.3): 56 data bytes\n64 bytes from 172.100.0.3: seq=0 ttl=64 time=0.347 ms\n64 bytes from 172.100.0.3: seq=1 ttl=64 time=0.160 ms\n64 bytes from 172.100.0.3: seq=2 ttl=64 time=0.159 ms\n```", "```\nubuntu@node01:~$ docker exec -it service2 /bin/sh\n/ # ping 172.100.0.2\nPING 172.100.0.2 (172.100.0.2): 56 data bytes\n64 bytes from 172.100.0.2: seq=0 ttl=64 time=0.175 ms\n64 bytes from 172.100.0.2: seq=1 ttl=64 time=0.157 ms\n```", "```\nubuntu@node01:~$ docker exec -it service1 /bin/sh\n/ # ping service2\nPING service2 (172.100.0.3): 56 data bytes\n64 bytes from 172.100.0.3: seq=0 ttl=64 time=0.233 ms\n64 bytes from 172.100.0.3: seq=1 ttl=64 time=0.142 ms\n64 bytes from 172.100.0.3: seq=2 ttl=64 time=0.184 ms\n64 bytes from 172.100.0.3: seq=3 ttl=64 time=0.263 ms\n```", "```\nubuntu@node01:~$ docker run --network=SkyNet -itd --name=service3 alpine\n8db62ae30457c351474d909f0600db7f744fb339e06e3c9a29b87760ad6364ff \nubuntu@node01:~$ docker exec -it service3 /bin/sh\n/ # ping service1\nPING service1 (172.100.0.2): 56 data bytes\n64 bytes from 172.100.0.2: seq=0 ttl=64 time=0.207 ms\n64 bytes from 172.100.0.2: seq=1 ttl=64 time=0.165 ms\n64 bytes from 172.100.0.2: seq=2 ttl=64 time=0.159 ms\n^C\n--- service1 ping statistics ---\n3 packets transmitted, 3 packets received, 0% packet loss\nround-trip min/avg/max = 0.159/0.177/0.207 ms\n/ #\n/ # ping service2\nPING service2 (172.100.0.3): 56 data bytes\n64 bytes from 172.100.0.3: seq=0 ttl=64 time=0.224 ms\n64 bytes from 172.100.0.3: seq=1 ttl=64 time=0.162 ms\n64 bytes from 172.100.0.3: seq=2 ttl=64 time=0.146 ms\n```", "```\nubuntu@node01:~$ docker exec -it service2 /bin/sh\n/ # nslookup service3\n\nName:      service3\nAddress 1: 172.100.0.4 service3.SkyNet\n```", "```\nubuntu@node01:~$ mkdir demo/\nubuntu@node01:~$ cd demo/\nubuntu@node01:~$ ansible-container init ansible.django-gulp-nginx\nAnsible Container initialized from Galaxy container app 'ansible.django-gulp-nginx'\n```", "```\nubuntu@node01:~/demo$ ls\nbower.json     dist         Makefile   meta.yml      package.json       project    requirements.txt  roles    src         test\nAUTHORS             container.yml  gulpfile.js  manage.py  node_modules  package-lock.json  README.md  requirements.yml  scripts  temp-space  update-authors.py\n```", "```\nversion: '2'\nsettings:\n  conductor:\n    base: 'centos:7'\n    volumes:\n    - temp-space:/tmp   # Used to copy static content between containers\n  k8s_namespace:\n    name: demo\n    display_name: Ansible Container Demo \n    description: Django framework demo \ndefaults:\n  POSTGRES_USER: django\n  POSTGRES_PASSWORD: sesame\n  POSTGRES_DB: django\n  DJANGO_ROOT: /django\n  DJANGO_USER: django\n  DJANGO_PORT: 8080\n  DJANGO_VENV: /venv\n  NODE_USER: node\n  NODE_HOME: /node\n  NODE_ROOT: ''\n  GULP_DEV_PORT: 8080\nservices:\n  django:\n    from: 'centos:7'\n    roles:\n    - role: django-gunicorn\n    environment:\n      DATABASE_URL: 'pgsql://{{ POSTGRES_USER }}:{{ POSTGRES_PASSWORD }}@postgresql:5432/{{ POSTGRES_DB }}'\n      DJANGO_ROOT: '{{ DJANGO_ROOT }}'\n      DJANGO_VENV: '{{ DJANGO_VENV }}'\n    expose:\n    - '{{ DJANGO_PORT }}'\n    working_dir: '{{ DJANGO_ROOT }}'\n    links:\n    - postgresql\n    user: '{{ DJANGO_USER }}'\n    command: ['/usr/bin/dumb-init', '{{ DJANGO_VENV }}/bin/gunicorn', -w, '2', -b, '0.0.0.0:{{ DJANGO_PORT }}', 'project.wsgi:application']\n    entrypoint: [/usr/bin/entrypoint.sh]\n    dev_overrides:\n      volumes:\n      - '$PWD:{{ DJANGO_ROOT }}'\n      command: [/usr/bin/dumb-init, '{{ DJANGO_VENV }}/bin/python', manage.py, runserver, '0.0.0.0:{{ DJANGO_PORT }}']\n      depends_on:\n      - postgresql\n\n  gulp:\n    from: 'centos:7'\n    roles:\n    - role: gulp-static \n    working_dir: '{{ NODE_HOME }}'\n    command: ['/bin/false']\n    environment:\n      NODE_HOME: '{{ NODE_HOME }}'\n    dev_overrides:\n      entrypoint: [/entrypoint.sh]\n      command: [/usr/bin/dumb-init, /usr/local/bin/gulp]\n      ports:\n      - '8080:{{ GULP_DEV_PORT }}'\n      - 3001:3001\n      links:\n      - django\n      volumes:\n      - '$PWD:{{ NODE_HOME }}'\n    openshift:\n      state: absent\n\n  nginx:\n    from: 'centos:7'\n    roles:\n    - role: ansible.nginx-container\n      ASSET_PATHS:\n      - /tmp/dist\n      PROXY: yes\n      PROXY_PASS: 'http://django:8080'\n      PROXY_LOCATION: \"~* /(admin|api)\"\n    ports:\n    - '{{ DJANGO_PORT }}:8000'\n    links:\n    - django\n    dev_overrides:\n      ports: []\n      command: /bin/false\n\n  postgresql:\n    # Uses a pre-built postgresql image from Docker Hub \n    from: ansible/postgresql:latest\n    environment:\n    - 'POSTGRES_DB={{ POSTGRES_DB }}'\n    - 'POSTGRES_USER={{ POSTGRES_USER }}'\n    - 'POSTGRES_PASS={{ POSTGRES_PASSWORD }}'\n    - 'PGDATA=/var/lib/pgsql/data/userdata'\n    volumes:\n    - postgres-data:/var/lib/pgsql/data\n    expose:\n    - 5432\n\nvolumes:\n  postgres-data:\n    docker: {}\n    openshift:\n      access_modes:\n      - ReadWriteMany\n      requested_storage: 3Gi \n\n  temp-space: \n    docker: {}\n    openshift:\n      state: absent\n\nregistries:\n   local_openshift:\n     url: https://local.openshift\n     namespace: demo\n     pull_from_url: 172.30.1.1:5000\n```", "```\nubuntu@node01:~/demo$ ansible-container build\nBuilding Docker Engine context...       \nStarting Docker build of Ansible Container Conductor image (please be patient)...       \nParsing conductor CLI args.\nDocker™ daemon integration engine loaded. Build starting. project=demo\nBuilding service...     project=demo service=django\n\nPLAY [django] ******************************************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [django]\n\nTASK [django-gunicorn : Install dumb init] *************************************\nchanged: [django]\n\nTASK [django-gunicorn : Install epel] ******************************************\nchanged: [django]\n\nTASK [django-gunicorn : Install python deps] ***********************************\nchanged: [django] => (item=[u'postgresql-devel', u'python-devel', u'gcc', u'python-virtualenv', u'nc', u'rsync'])\n\nTASK [django-gunicorn : Make Django user] **************************************\nchanged: [django]\n\nTASK [django-gunicorn : Create /django] ****************************************\nchanged: [django]\n\nTASK [django-gunicorn : Make virtualenv dir] ***********************************\nchanged: [django]\n\nTASK [django-gunicorn : Setup virtualenv] **************************************\nchanged: [django]\n\nTASK [django-gunicorn : Copy core source items] ********************************\nchanged: [django] => (item=manage.py)\nchanged: [django] => (item=package.json)\nchanged: [django] => (item=project)\nchanged: [django] => (item=requirements.txt)\nchanged: [django] => (item=requirements.yml)\nTRUNCATED...\n```", "```\nubuntu@node01:~/demo$ ansible-container run\nParsing conductor CLI args.\nEngine integration loaded. Preparing run.       engine=Docker™ daemon\nVerifying service image service=django\nVerifying service image service=gulp\nVerifying service image service=nginx\n\nPLAY [Deploy demo] *************************************************************\n\nTASK [docker_service] **********************************************************\nchanged: [localhost]\n\nPLAY RECAP *********************************************************************\nlocalhost                  : ok=1    changed=1    unreachable=0    failed=0\n\nAll services running.   playbook_rc=0\nConductor terminated. Cleaning up.      command_rc=0 conductor_id=3109066bdb82a46e0b44fdbbbeaaa02fe8daf7bc18600c0c8466e19346e57b39 save_container=False\n```", "```\nubuntu@node01:~/demo$ docker ps -a\nCONTAINER ID  IMAGE  COMMAND  CREATED  STATUS  PORTS  NAMES\nc3e3c2e07427  demo-gulp:20171107030355     \"/entrypoint.sh /u...\"   56 seconds\n0e14b6468ad4  demo-nginx:20171107031508    \"/bin/false\"             Exited (1)\n987345cf6460  demo-django:20171107031311   \"/usr/bin/en\"            57 seconds ago9660b816e86f  ansible/postgresql:latest \"/usr/bin/entrypoi...\"   58 seconds \n```", "```\nubuntu@node01:~/demo$ curl http://localhost:8080\n<!DOCTYPE html><html lang=\"en-US\"><head><title></title><meta charset=\"UTF-8\"><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><meta name=\"viewport\" content=\"width=device-width,initial-scale=1\"><link rel=\"stylesheet\" href=\"style.css\"></head><body><div class=\"content\"><div class=\"visible\"><p>Hello</p><ul><li>world !</li><li>users !</li><li>you!</li><li>everybody !</li></ul></div></div><script src=\"img/bundle.min.js\"></script></body></html>\n```", "```\nubuntu@node01:~/demo$ ansible-container stop\nParsing conductor CLI args.\nEngine integration loaded. Preparing to stop all containers.    engine=Docker™ daemon\n\nPLAY [Deploy demo] *************************************************************\n\nTASK [docker_service] **********************************************************\nchanged: [localhost]\n\nPLAY RECAP *********************************************************************\nlocalhost                  : ok=1    changed=1    unreachable=0    failed=0\n\nAll services stopped.   playbook_rc=0\nConductor terminated. Cleaning up.      command_rc=0 conductor_id=8ab40a594ec72012afdf0abc31ff527925fc5960e4ecbb40eeb16763a12e973a save_container=False\n```", "```\nubuntu@node01:~/demo$ ansible-container run --production\nParsing conductor CLI args.\nEngine integration loaded. Preparing run.       engine=Docker™ daemon\nVerifying service image service=django\nVerifying service image service=gulp\nVerifying service image service=nginx\n\nPLAY [Deploy demo] *************************************************************\n\nTASK [docker_service] **********************************************************\nchanged: [localhost]\n\nPLAY RECAP *********************************************************************\nlocalhost                  : ok=1    changed=1    unreachable=0    failed=0\n\nAll services running.   playbook_rc=0\nConductor terminated. Cleaning up.      command_rc=0 conductor_id=1916f63a843d490ec936672528e507332ef408363f65387256fe8a75a1ed7a2f save_container=False\n```", "```\nubuntu@node01:~/demo$ docker ps -a\nCONTAINER ID  IMAGE  COMMAND  CREATED  STATUS  PORTS  NAMES\n1aabc9745942  demo-nginx:20171107031508    \"/usr/bin/dumb-ini...\"   7 seconds ago\n16154bbfae54  demo-django:20171107031311   \"/usr/bin/entrypoi...\"   14 seconds ago      \nea2ec92e9c50  demo-gulp:20171107030355     \"/bin/false\"             Exited (1) 15\n9660b816e86f  ansible/postgresql:latest    \"/usr/bin/entrypoi...\"   20 minutes ago\n```", "```\nubuntu@node01:~/demo$ curl http://localhost:8080\n<!DOCTYPE html><html lang=\"en-US\"><head><title></title><meta charset=\"UTF-8\"><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><meta name=\"viewport\" content=\"width=device-width,initial-scale=1\"><link rel=\"stylesheet\" href=\"style.css\"></head><body><div class=\"content\"><div class=\"visible\"><p>Hello</p><ul><li>world !</li><li>users !</li><li>you!</li><li>everybody !</li></ul></div></div><script src=\"img/bundle.min.js\"></script></body></html>\n```", "```\n k8s_namespace:\n   name: demo\n   display_name: Ansible Container Demo\n   description: Django framework demo\n k8s_auth:\n   config_file: /home/ubuntu/.kube/config\n```", "```\nregistries:  \n   docker:\n     url: https://index.docker.io/v1/\n     namespace: aric49\n```", "```\nubuntu@node01:~/demo$ ansible-container --engine openshift deploy --push-to docker --username aric49 --tag containerapp\nEnter password for aric49 at Docker Hub: \nParsing conductor CLI args.\nEngine integration loaded. Preparing push.      engine=OpenShift™\nTagging aric49/demo-django\nPushing aric49/demo-django:containerapp...\nThe push refers to a repository [docker.io/aric49/demo-django]\nPreparing\nPushing\nMounted from library/centos\nPushing\nPushed\ncontainerapp: digest: sha256:983afc3cb7c0f393d20047d0a1aa75a94a9ab30a2f3503147c09b55a81e007a9 size: 741\nTagging aric49/demo-gulp\nPushing aric49/demo-gulp:containerapp...\nThe push refers to a repository [docker.io/aric49/demo-gul\nTRUNCATED...\n```", "```\nubuntu@node01:~/demo$ ansible-container --engine openshift run --production\nParsing conductor CLI args.\nEngine integration loaded. Preparing run.       engine=OpenShift™\nVerifying service image service=django\nVerifying service image service=gulp\nVerifying service image service=nginx\n\nPLAY [Manage the lifecycle of demo on OpenShift?] ******************************\n\nTASK [Create project demo] *****************************************************\nchanged: [localhost]\n\nTASK [Create service] **********************************************************\nchanged: [localhost]\n\nTASK [Create service] **********************************************************\nchanged: [localhost]\n\nTASK [Create service] **********************************************************\nchanged: [localhost]\n\nTASK [Remove service] **********************************************************\nok: [localhost]\n\nTASK [Create deployment, and scale replicas up] ********************************\nchanged: [localhost]\n\nTASK [Create deployment, and scale replicas up] ********************************\nchanged: [localhost]\nTRUNCATED..\n```"]