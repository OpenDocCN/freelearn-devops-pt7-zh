- en: '5'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '5'
- en: Creating and Consuming Modules
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建和使用模块
- en: Throughout this book, we have almost constantly referred to and made use of
    Ansible modules. We have treated these as *black boxes* – that is to say, we have
    just accepted that they exist and that they will work in a certain documented
    manner. However, one of the many great things about Ansible is that it is an open
    source project, and as such, not only can you view and modify its source code,
    but you can also develop your own additions. At the time of writing, there are
    3,300+ modules available for Ansible, handling everything from simple commands
    such as copying files and installing packages to configuring highly complex and
    bespoke networking equipment. This large array of modules has grown out of a genuine
    need to solve problems with Ansible, and the number included with each release
    of Ansible increases every time.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的整个过程中，我们几乎一直在引用并使用Ansible模块。我们将这些模块视为*黑箱*——也就是说，我们只是接受它们的存在，并且相信它们会以某种已记录的方式工作。然而，Ansible的许多优点之一是它是一个开源项目，因此你不仅可以查看和修改其源代码，还可以开发自己的扩展功能。截止目前，Ansible已拥有3300多个模块，处理从简单的命令（如复制文件和安装包）到配置高度复杂和定制的网络设备等各种任务。这些模块的庞大阵容来源于Ansible解决问题的真实需求，而且每次发布新版本时，包含的模块数量都会增加。
- en: Sooner or later, you will come across a specific piece of functionality that
    doesn’t exist in any of the current Ansible modules. Of course, you could attempt
    to fill this gap functionally, either by writing your own module or by contributing
    enhancements to one of the existing modules back to the Ansible project for everyone
    else to benefit from. In this chapter, you will learn the basics of creating modules,
    as well as how to contribute your code back to the upstream Ansible project if
    you wish.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 迟早，你会遇到一种当前Ansible模块中不存在的特定功能。当然，你可以尝试通过编写自己的模块或将某个现有模块的增强功能贡献回Ansible项目来填补这个空白，从而让其他人也能受益。在本章中，你将学习创建模块的基础知识，并了解如何将你的代码贡献回上游的Ansible项目（如果你愿意的话）。
- en: 'Specifically, in this chapter, you will cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将具体涉及以下主题：
- en: Executing multiple modules using the command line
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用命令行执行多个模块
- en: Reviewing the module index
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 审查模块索引
- en: Accessing module documentation from the command line
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从命令行访问模块文档
- en: Module return values
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模块返回值
- en: Developing custom modules
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发自定义模块
- en: Let’s get started!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 开始吧！
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: This chapter assumes that you have set up your control host with Ansible, as
    detailed in [*Chapter 1*](B20846_01.xhtml#_idTextAnchor015), *Getting Started
    with Ansible*, and are using the most recent version available – the examples
    in this chapter were tested with `ansible-core` version 2.15\. This chapter also
    assumes that you have at least one additional host to test against. Ideally, this
    should be Linux-based. Although we will give specific examples of hostnames in
    this chapter, you are free to substitute them with your own hostname and/or IP
    address. Details of how to do this will be provided in the appropriate places.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本章假设你已经按照[*第1章*](B20846_01.xhtml#_idTextAnchor015)《开始使用Ansible》的详细说明，设置好了控制主机，并且正在使用最新版本的Ansible——本章的示例是在`ansible-core`版本2.15下测试的。本章还假设你至少有一个额外的主机进行测试。理想情况下，该主机应为基于Linux的。尽管本章中将给出具体的主机名示例，你可以自由地用自己的主机名和/或IP地址替换它们。如何进行替换的详细说明将在适当的位置提供。
- en: The module development work that will be covered in this chapter assumes the
    presence of a Python 3 development environment on your computer and that you are
    running either Linux, FreeBSD, or macOS. Where additional Python modules are needed,
    their installation is documented. The task of building module documentation has
    some very specific requirements around Python 3.10 or later, so you will need
    to install a suitable Python environment if you wish to attempt this.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中将涉及的模块开发工作假定你的计算机上已安装Python 3开发环境，并且你正在运行Linux、FreeBSD或macOS之一。如果需要额外的Python模块，其安装过程已记录。本章中模块文档的构建任务有一些关于Python
    3.10或更高版本的特定要求，因此如果你希望尝试此任务，你需要安装合适的Python环境。
- en: 'The code bundle for this chapter is available here: [https://github.com/PacktPublishing/Practical-Ansible-Second-Edition/tree/main/Chapter%205](https://github.com/PacktPublishing/Practical-Ansible-Second-Edition/tree/main/Chapter%205).'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码包可以在这里获取：[https://github.com/PacktPublishing/Practical-Ansible-Second-Edition/tree/main/Chapter%205](https://github.com/PacktPublishing/Practical-Ansible-Second-Edition/tree/main/Chapter%205)。
- en: Executing multiple modules using the command line
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用命令行执行多个模块
- en: As this chapter is all about modules and how to create them, let’s recap how
    to use modules. We’ve done this throughout this book, but we have not drawn attention
    to some of the specifics related to how they work. One of the key things we have
    not discussed is how the Ansible engine talks to its modules and vice versa, so
    let’s explore this now.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 由于本章内容主要围绕模块及其创建方式，因此让我们回顾一下如何使用模块。我们在本书中一直在这样做，但没有特别指出它们的工作方式的某些细节。我们尚未讨论的一个关键点是
    Ansible 引擎如何与其模块进行交互，反之亦然，接下来我们就来探索这个问题。
- en: 'As ever, when working with Ansible commands, we need an inventory to run our
    commands against. For this chapter, as our focus is on the modules themselves,
    we will use a very simple and small inventory, as shown here:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 和往常一样，在使用 Ansible 命令时，我们需要一个清单来执行命令。在本章中，由于我们关注的是模块本身，我们将使用一个非常简单且小的清单，如下所示：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, for the first part of our recap, you can run a module very easily via
    an ad hoc command and use the `-m` switch to tell Ansible which module you want
    to run. Hence, one of the simplest commands you can run is the Ansible `ping`
    command, as shown here:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在我们的回顾部分，使用临时命令可以非常轻松地运行模块，并使用 `-m` 选项告诉 Ansible 你要运行哪个模块。因此，你可以运行的最简单命令之一是
    Ansible 的 `ping` 命令，如下所示：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now, let’s examine the output of the preceding command:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们查看前面命令的输出：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Did you notice the structure of the output – the curly braces, colons, and commas?
    Yes, Ansible uses JSON-formatted data to talk to its modules, and the modules
    report their data back to Ansible in JSON as well. The preceding output is a subset
    of the JSON-formatted data returned to the Ansible engine by the `ping` module.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 你注意到输出的结构了吗——大括号、冒号和逗号？是的，Ansible 使用 JSON 格式的数据与模块进行交互，而模块也以 JSON 格式将数据报告回 Ansible。前面的输出是
    `ping` 模块返回给 Ansible 引擎的 JSON 格式数据的一个子集。
- en: Of course, we never have to worry about this as we work with the modules using
    either `key=value` pairs on the command line or YAML in playbooks and roles. Hence,
    the JSON is shielded from us, but this is an important fact to bear in mind as
    we head into the world of module development later in this chapter.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，在使用命令行中的 `key=value` 对或在 playbook 和角色中使用 YAML 与模块交互时，我们永远不需要担心这个问题。因此，JSON
    对我们来说是隐藏的，但这是一个重要的事实，在我们进入模块开发的世界时需要牢记。
- en: Ansible modules are just like functions in a high-level programming language,
    in that they take a well-defined list of arguments as input, perform their function,
    and then provide a set of output data, which is also well defined and documented.
    We’ll look at this in more detail later in this chapter. Of course, the preceding
    command didn’t include any arguments, so this was the simplest possible invocation
    of a module via Ansible.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible 模块就像高级编程语言中的函数一样，它们接受一组定义良好的输入参数，执行功能，然后提供一组输出数据，这些输出数据也是明确定义和记录的。我们将在本章稍后详细讨论这一点。当然，前面的命令没有包括任何参数，因此这是通过
    Ansible 调用模块的最简单方式。
- en: 'Now, let’s run another command that takes an argument and passes that data
    to the module:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们运行另一个带有参数并将数据传递给模块的命令：
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'In this case, we provided a single string as an argument to the command module,
    which Ansible, in turn, converts into JSON and passes down to the command module
    when it’s invoked. When you run this ad hoc command, you will see an output similar
    to the following:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们向命令模块提供了一个字符串作为参数，Ansible 会将其转换为 JSON，并在调用时传递给命令模块。当你运行这个临时命令时，你会看到类似以下的输出：
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In this instance, the output data does not appear to be JSON formatted; however,
    what Ansible prints to the Terminal when you run a module is only a subset of
    the data that each module returns – for example, both the `CHANGED` status and
    `rc=0` exit code from our command were passed back to Ansible in a JSON-formatted
    data structure – this was just hidden from us.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，输出数据似乎不是 JSON 格式的；然而，当你运行模块时，Ansible 打印到终端的内容仅是每个模块返回的数据的一个子集——例如，命令的
    `CHANGED` 状态和 `rc=0` 退出代码都以 JSON 格式的数据结构传回给 Ansible——这些只是对我们隐藏了。
- en: 'This point doesn’t need to be labored too much, but it is important to set
    the context. It is this context that we shall build upon throughout this chapter,
    so simply remember these key points:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这一点不需要过多解释，但设定背景是很重要的。正是基于这个背景，我们将在本章中不断构建，所以请记住以下关键点：
- en: Communication between Ansible and its modules is done through JSON-formatted
    data structures
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ansible 和其模块之间的通信是通过 JSON 格式的数据结构进行的
- en: Modules take input data that controls how they function (arguments)
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模块接受控制其功能的输入数据（参数）
- en: Modules always return data – at the very least, the status of the module’s execution
    (for example, `changed`, `ok`, or `failed`)
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模块总是返回数据——至少是模块执行的状态（例如，`changed`、`ok` 或 `failed`）。
- en: Of course, before you start coding modules, it makes sense to check whether
    a module that can perform all (or some) of the functionality you need already
    exists. We will explore this in the next section.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，在开始编码模块之前，首先检查是否已经存在可以执行你所需要的所有（或部分）功能的模块是有意义的。我们将在下一节探讨这一点。
- en: Reviewing the module index
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 审查模块索引
- en: 'As discussed in the preceding section, Ansible provides thousands of modules
    to make it fast and easy to develop playbooks and run them across multiple host
    machines. How do you go about finding the right module to begin with, though,
    when there are so many? Fortunately, the Ansible documentation features a well-organized,
    indexed list of modules that you can consult to find your desired module – this
    is available here: [https://docs.ansible.com/ansible/latest/collections/index_module.xhtml](https://docs.ansible.com/ansible/latest/collections/index_module.xhtml).'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前一节所讨论的，Ansible 提供了成千上万个模块，使得开发 playbooks 并在多个主机上运行它们变得快速而容易。然而，在这么多模块中，如何找到合适的模块开始使用呢？幸运的是，Ansible
    文档提供了一个组织良好的、带有索引的模块列表，你可以查阅该列表来找到所需的模块——你可以在这里找到它：[https://docs.ansible.com/ansible/latest/collections/index_module.xhtml](https://docs.ansible.com/ansible/latest/collections/index_module.xhtml)。
- en: 'Let’s suppose you want to see whether there is a native Ansible module that
    can help you configure and manage your Amazon Web Services S3 buckets. That’s
    a fairly precise, well-defined need, so let’s approach this logically:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你想看看是否有一个原生的 Ansible 模块可以帮助你配置和管理你的 Amazon Web Services S3 存储桶。这是一个相当精确、明确的需求，所以让我们按逻辑来处理：
- en: 'Begin by opening the index of all modules in your web browser, as discussed
    previously: https://docs.ansible.com/ansible/latest/collections/index_module.xhtml.'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照之前讨论的，首先在你的网页浏览器中打开所有模块的索引：[https://docs.ansible.com/ansible/latest/collections/index_module.xhtml](https://docs.ansible.com/ansible/latest/collections/index_module.xhtml)。
- en: Now, we know that `amazon.aws` modules are certainly indexed at the very beginning
    of this page.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们知道 `amazon.aws` 模块肯定在这页的最开始部分已经列出了。
- en: 'There are still thousands of modules listed on this page! So, let’s use the
    find function (*Ctrl* + *F*) in the browser to see whether the `amazon.aws.s3`
    keyword appears anywhere:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这页上仍然列出了成千上万个模块！所以，让我们在浏览器中使用查找功能（*Ctrl* + *F*），看看 `amazon.aws.s3` 这个关键词是否出现：
- en: '![Figure 5.1 – Amazon modules](img/B20846_05_001.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.1 – Amazon 模块](img/B20846_05_001.jpg)'
- en: Figure 5.1 – Amazon modules
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.1 – Amazon 模块
- en: We now have a shortlist of modules to work with – granted, there are several,
    so we still need to work out which one (or ones) we will need for our playbook.
    As shown from the preceding short descriptions, this will depend on what your
    intended task is.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经有了一个模块的短名单——虽然有几个模块，所以我们仍然需要决定哪个（或哪些）模块适合我们的 playbook。正如前面简短描述所示，这将取决于你预期的任务是什么。
- en: 'The short descriptions should be enough to give you some clues about whether
    the module will suit your needs or not. Once you have an idea, you can click on
    the appropriate document links to view more details about the module and how to
    work with it:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 简短的描述应该足够给你一些线索，判断该模块是否适合你的需求。一旦你有了大致的想法，可以点击相应的文档链接查看该模块的更多详情及如何使用：
- en: '![Figure 5.2 – Amazon S3 module details](img/B20846_05_002.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.2 – Amazon S3 模块详情](img/B20846_05_002.jpg)'
- en: Figure 5.2 – Amazon S3 module details
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.2 – Amazon S3 模块详情
- en: As you can see, the documentation page for each module provides a great deal
    of information, including a longer description. If you scroll down the page, you
    will see a list of the possible arguments that you can provide the module with,
    some practical examples of how to use them, and some details about the outputs
    from the module. Also, note the `aws_s3` module from a playbook without installing
    the `boto3` and `botocore` modules on Python 3.6 or later, you will simply receive
    an error.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如你所见，每个模块的文档页面提供了大量信息，包括更长的描述。如果你向下滚动页面，你会看到可以提供给模块的参数列表，一些实际的使用示例，以及有关模块输出的细节。同时，请注意，如果你在没有安装
    `boto3` 和 `botocore` 模块的 Python 3.6 或更高版本上运行 playbook 时使用 `aws_s3` 模块，你将会收到一个错误。
- en: All modules must have documentation like this created before they will be accepted
    as part of the Ansible project, so you must keep this in mind if you intend to
    submit your own modules. This is also one of the reasons for Ansible’s popularity
    – with easy-to-maintain and well-documented standards, it is the perfect community
    platform for automation. The official Ansible website isn’t the only place you
    can obtain documentation, however, as it is even available on the command line.
    We shall look at how to retrieve documentation via this route in the next section.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 所有模块在被接受作为 Ansible 项目的一部分之前，必须有这样的文档，因此如果你打算提交自己的模块，必须记住这一点。这也是 Ansible 受欢迎的原因之一——凭借易于维护且文档完善的标准，它是自动化的完美社区平台。然而，官方的
    Ansible 网站并不是你唯一可以获取文档的地方，因为它甚至可以在命令行中使用。我们将在下一节中讨论如何通过这种方式检索文档。
- en: Accessing module documentation from the command line
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从命令行访问模块文档
- en: As discussed in the preceding section, the Ansible project prides itself on
    its documentation, and making this documentation readily accessible is an important
    part of the project itself. Now, suppose you are working on an Ansible task (in
    a playbook, role, or even an ad hoc command) and you are in a data center environment
    where you only have access to the shell of the machine you are working on. How
    would you get access to the Ansible documentation?
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一节所述，Ansible 项目以其文档为荣，确保文档易于访问是项目的一个重要部分。现在，假设你正在处理一个 Ansible 任务（无论是在 playbook、角色中，还是在临时命令中），并且你处于一个数据中心环境，只有你所工作的机器的
    shell 可用。你该如何获取 Ansible 文档？
- en: Fortunately, part of the Ansible installation that we have not discussed yet
    is the `ansible-doc` tool, which is installed as standard along with the familiar
    `ansible` and `ansible-playbook` executables. The `ansible-doc` command includes
    a complete (text-based) library of documentation for all the modules that ship
    with the version of Ansible you have installed. This means that the very information
    you need to work with modules is at your fingertips, even if you are in the middle
    of a data center and without a working internet connection!
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，我们尚未讨论的 Ansible 安装的一部分是 `ansible-doc` 工具，它与熟悉的 `ansible` 和 `ansible-playbook`
    可执行文件一起作为标准安装。`ansible-doc` 命令包含了所有随你安装的 Ansible 版本一起发布的模块的完整（基于文本的）文档库。这意味着，无论你身处数据中心并且没有网络连接，你都能触手可及地获取到你需要的模块信息！
- en: 'The following are some examples to show you how to interact with the `ansible-doc`
    tool:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些示例，展示如何使用 `ansible-doc` 工具：
- en: 'You can list all of the modules that there’s documentation for on your Ansible
    control machine by simply issuing the following command:'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以通过简单地执行以下命令，列出 Ansible 控制机上所有有文档的模块：
- en: '[PRE5]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You should see an output similar to the following:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到类似于以下的输出：
- en: '[PRE6]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'There are many pages of output, which shows you just how many modules there
    are! You can even count them:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 输出页数众多，这也展示了模块的数量！你甚至可以数一数它们：
- en: '[PRE7]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: That’s right – 7,484 modules ship with Ansible 2.15!
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 没错——Ansible 2.15 包含了 7,484 个模块！
- en: 'As before, you can search for specific modules using your favorite shell tools
    to process the index; for example, you could `grep` for `s3` to find all of the
    S3-related modules, as we did interactively in the web browser in the previous
    section:'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 和以前一样，你可以使用你喜欢的 shell 工具来处理索引，查找特定模块；例如，你可以使用 `grep` 查找 `s3`，以便找到所有与 S3 相关的模块，正如我们在上一节中在浏览器中进行的交互一样：
- en: '[PRE8]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: $ ansible-doc aws_s3
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ ansible-doc aws_s3
- en: '[PRE9]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This should produce an output similar to the following:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成类似于以下的输出：
- en: '[PRE10]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: $ ansible-doc ping
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible-doc ping
- en: '[PRE11]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: $ ansible-doc ping
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible-doc ping
- en: ANSIBLE.BUILTIN.PING    (/home/james/.local/lib/python3.10/site-packages/ansible/modules/ping.py)
  id: totrans-70
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: ANSIBLE.BUILTIN.PING    (/home/james/.local/lib/python3.10/site-packages/ansible/modules/ping.py)
- en: '...'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '...'
- en: 'RETURN VALUES:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 返回值：
- en: 'ping:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 'ping:'
- en: 'description: value provided with the data parameter'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 'description: 数据参数提供的值'
- en: 'returned: success'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 'returned: success'
- en: 'sample: pong'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 'sample: pong'
- en: 'type: str'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 'type: str'
- en: '[PRE12]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '---'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: '- name: Simple play to demonstrate a return value'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '- name: 演示返回值的简单任务'
- en: 'hosts: localhost'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 'hosts: localhost'
- en: 'tasks:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 'tasks:'
- en: '- name: Perform a simple module based task'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '- name: 执行一个简单的基于模块的任务'
- en: 'ansible.builtin.ping:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 'ansible.builtin.ping:'
- en: 'register: pingresult'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 'register: pingresult'
- en: '- name: Display the result'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '- name: 显示结果'
- en: 'ansible.builtin.debug:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 'ansible.builtin.debug:'
- en: 'var: pingresult'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 'var: pingresult'
- en: '[PRE13]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: $ ansible-playbook retval.yml
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible-playbook retval.yml
- en: '[WARNING]: provided hosts list is empty, only localhost is available. Note
    that'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '[警告]: 提供的主机列表为空，仅 localhost 可用。注意'
- en: the implicit localhost does not match 'all'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 隐式 localhost 不匹配 'all'
- en: PLAY [Simple play to demonstrate a return value] *******************************
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 任务 [展示返回值的简单示例] *******************************
- en: TASK [Gathering Facts] *********************************************************
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 任务 [Gathering Facts] *********************************************************
- en: 'ok: [localhost]'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 'ok: [localhost]'
- en: TASK [Perform a simple module based task] **************************************
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 任务 [执行简单的基于模块的任务] **************************************
- en: 'ok: [localhost]'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 'ok: [localhost]'
- en: TASK [Display the result] ******************************************************
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 任务 [显示结果] ******************************************************
- en: 'ok: [localhost] => {'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 'ok: [localhost] => {'
- en: '"pingresult": {'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '"pingresult": {'
- en: '"changed": false,'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '"changed": false,'
- en: '"failed": false,'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '"failed": false,'
- en: '"ping": "pong"'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '"ping": "pong"'
- en: '}'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: PLAY RECAP *********************************************************************
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 任务总结 *********************************************************************
- en: 'localhost : ok=3 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 'localhost : ok=3 changed=0 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0'
- en: '[PRE14]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: $ sudo dnf install python python-devel
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ sudo dnf install python python-devel
- en: '[PRE15]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: $ sudo yum install python3 python3-devel
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ sudo yum install python3 python3-devel
- en: '[PRE16]'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: $ sudo apt-get update
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ sudo apt-get update
- en: $ sudo apt-get install python3-pip python3-dev build-essential
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ sudo apt-get install python3-pip python3-dev build-essential
- en: '[PRE17]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: $ brew install python
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ brew install python
- en: '[PRE18]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: $ git clone https://github.com/ansible/ansible.git
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: $ git clone https://github.com/ansible/ansible.git
- en: '[PRE19]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: $ cd ansible
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: $ cd ansible
- en: $ python -m virtualenv moduledev
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: $ python -m virtualenv moduledev
- en: New python executable in /home/james/ansible/moduledev/bin/python
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 新的 Python 可执行文件位于 /home/james/ansible/moduledev/bin/python
- en: Installing setuptools, pip, wheel...done.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 setuptools, pip, wheel...完成。
- en: '[PRE20]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: $ vi remote_filecopy.py
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ vi remote_filecopy.py
- en: '[PRE21]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '#!/usr/bin/env python'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#!/usr/bin/env python'
- en: '[PRE22]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Copyright: (c) 2018, Jesse Keating <jesse.keating@example.org>'
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 版权：(c) 2018, Jesse Keating <jesse.keating@example.org>
- en: GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: GNU 通用公共许可证 v3.0+（请参阅 COPYING 或 https://www.gnu.org/licenses/gpl-3.0.txt）
- en: '[PRE23]'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'ANSIBLE_METADATA = {''metadata_version'': ''1.1'','
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'ANSIBLE_METADATA = {''metadata_version'': ''1.1'','
- en: '''status'': [''preview''],'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '''status'': [''preview''],'
- en: '''supported_by'': ''community''}'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '''supported_by'': ''community''}'
- en: '[PRE24]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: DOCUMENTATION = '''
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: DOCUMENTATION = '''
- en: '---'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '---'
- en: 'module: remote_filecopy'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 模块：remote_filecopy
- en: 'version_added: "2.15"'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'version_added: "2.15"'
- en: 'short_description: Copy a file on the remote host'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 简短描述：在远程主机上复制文件
- en: 'description:'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 描述：
- en: '- The remote_copy module copies a file on the remote host from a given source
    to a provided destination.'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- remote_copy 模块将文件从给定的源复制到提供的目标位置。'
- en: 'options:'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 选项：
- en: 'source:'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'source:'
- en: 'description:'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 描述：
- en: '- Path to a file on the source file on the remote host'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 远程主机上源文件的路径'
- en: 'required: True'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 必需：True
- en: 'dest:'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'dest:'
- en: 'description:'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 描述：
- en: '- Path to the destination on the remote host for the copy'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 远程主机上目标的复制路径'
- en: 'required: True'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 必需：True
- en: 'author:'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 作者：
- en: '- Jesse Keating (@omgjlk)'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- Jesse Keating (@omgjlk)'
- en: ''''''''
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ''''''''
- en: '[PRE25]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: EXAMPLES = '''
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: EXAMPLES = '''
- en: Example from Ansible Playbooks
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 来自 Ansible Playbooks 的示例
- en: '- name: backup a config file'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 名称：备份配置文件'
- en: 'remote_copy:'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'remote_copy:'
- en: 'source: /etc/herp/derp.conf'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'source: /etc/herp/derp.conf'
- en: 'dest: /root/herp-derp.conf.bak'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'dest: /root/herp-derp.conf.bak'
- en: ''''''''
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ''''''''
- en: '[PRE26]'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: RETURN = '''
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: RETURN = '''
- en: 'source:'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'source:'
- en: 'description: source file used for the copy'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 描述：用于复制的源文件
- en: 'returned: success'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回：成功
- en: 'type: str'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类型：str
- en: 'sample: "/path/to/file.name"'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'sample: "/path/to/file.name"'
- en: 'dest:'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: dest：
- en: 'description: destination of the copy'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 描述：复制的目标
- en: 'returned: success'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回：成功
- en: 'type: str'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类型：str
- en: 'sample: "/path/to/destination.file"'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'sample: "/path/to/destination.file"'
- en: 'gid:'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: gid：
- en: 'description: group ID of destination target'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 描述：目标的组ID
- en: 'returned: success'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回：成功
- en: 'type: int'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类型：int
- en: 'sample: 502'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'sample: 502'
- en: 'group:'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 组：
- en: 'description: group name of destination target'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 描述：目标的组名
- en: 'returned: success'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回：成功
- en: 'type: str'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类型：str
- en: 'sample: "users"'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'sample: "users"'
- en: 'uid:'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: uid：
- en: 'description: owner ID of destination target'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 描述：目标的所有者ID
- en: 'returned: success'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回：成功
- en: 'type: int'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类型：int
- en: 'sample: 502'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'sample: 502'
- en: 'owner:'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: owner：
- en: 'description: owner name of destination target'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 描述：目标所有者名称
- en: 'returned: success'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回：成功
- en: 'type: str'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类型：str
- en: 'sample: "fred"'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'sample: "fred"'
- en: 'mode:'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 模式：
- en: 'description: permissions of the destination target'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 描述：目标的权限
- en: 'returned: success'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回：成功
- en: 'type: int'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类型：int
- en: 'sample: 0644'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'sample: 0644'
- en: 'size:'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 大小：
- en: 'description: size of destination target'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 描述：目标大小
- en: 'returned: success'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回：成功
- en: 'type: int'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类型：int
- en: 'sample: 20'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'sample: 20'
- en: 'state:'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 状态：
- en: 'description: state of destination target'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 描述：目标的状态
- en: 'returned: success'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回：成功
- en: 'type: str'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类型：str
- en: 'sample: "file"'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'sample: "file"'
- en: ''''''''
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ''''''''
- en: '[PRE27]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'main function, in which we will create an object of the AnsibleModule type
    and use an argument_spec dictionary to obtain the options that the module was
    called with:'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '主函数，其中我们将创建一个 AnsibleModule 类型的对象，并使用 argument_spec 字典获取模块调用时的选项：  '
- en: '[PRE28]'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: shutil.copy(module.params['source'],
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'shutil.copy(module.params[''source''],  '
- en: module.params['dest'])
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'module.params[''dest''])  '
- en: '[PRE30]'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: module.exit_json(changed=True)
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'module.exit_json(changed=True)  '
- en: '[PRE31]'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: from ansible.module_utils.basic import *
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'from ansible.module_utils.basic import *  '
- en: '[PRE32]'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'if __name__ == ''__main__'':'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if __name__ == ''__main__'':  '
- en: main()
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'main()  '
- en: '[PRE33]'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '{'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '{  '
- en: '"ANSIBLE_MODULE_ARGS": {'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '"ANSIBLE_MODULE_ARGS": {  '
- en: '"source": "/tmp/foo",'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '"source": "/tmp/foo",  '
- en: '"dest": "/tmp/bar"'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '"dest": "/tmp/bar"  '
- en: '}'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '}  '
- en: '}'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '}  '
- en: '[PRE34]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: $ touch /tmp/foo
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '$ touch /tmp/foo  '
- en: $ . moduledev/bin/activate
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '$ . moduledev/bin/activate  '
- en: (moduledev) $ . hacking/env-setup
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '(moduledev) $ . hacking/env-setup  '
- en: running egg_info
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '正在运行 egg_info  '
- en: creating lib/ansible_base.egg-info
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '正在创建 lib/ansible_base.egg-info  '
- en: writing requirements to lib/ansible_base.egg-info/requires.txt
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '正在将依赖写入 lib/ansible_base.egg-info/requires.txt  '
- en: writing lib/ansible_base.egg-info/PKG-INFO
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '正在写入 lib/ansible_base.egg-info/PKG-INFO  '
- en: writing top-level names to lib/ansible_base.egg-info/top_level.txt
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '正在将顶层名称写入 lib/ansible_base.egg-info/top_level.txt  '
- en: writing dependency_links to lib/ansible_base.egg-info/dependency_links.txt
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '正在写入依赖链接到 lib/ansible_base.egg-info/dependency_links.txt  '
- en: writing manifest file 'lib/ansible_base.egg-info/SOURCES.txt'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '正在写入清单文件 ''lib/ansible_base.egg-info/SOURCES.txt''  '
- en: reading manifest file 'lib/ansible_base.egg-info/SOURCES.txt'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '正在读取清单文件 ''lib/ansible_base.egg-info/SOURCES.txt''  '
- en: reading manifest template 'MANIFEST.in'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '正在读取清单模板 ''MANIFEST.in''  '
- en: 'warning: no files found matching ''SYMLINK_CACHE.json'''
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '警告：未找到与 ''SYMLINK_CACHE.json'' 匹配的文件  '
- en: 'warning: no previously-included files found matching ''docs/docsite/rst_warnings'''
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '警告：未找到与 ''docs/docsite/rst_warnings'' 匹配的先前包含的文件  '
- en: 'warning: no previously-included files matching ''*'' found under directory
    ''docs/docsite/_build'''
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '警告：在目录 ''docs/docsite/_build'' 下未找到与 ''*'' 匹配的先前包含的文件  '
- en: 'warning: no previously-included files matching ''*.pyc'' found under directory
    ''docs/docsite/_extensions'''
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '警告：在目录 ''docs/docsite/_extensions'' 下未找到与 ''*.pyc'' 匹配的先前包含的文件  '
- en: 'warning: no previously-included files matching ''*.pyo'' found under directory
    ''docs/docsite/_extensions'''
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '警告：在目录 ''docs/docsite/_extensions'' 下未找到与 ''*.pyo'' 匹配的先前包含的文件  '
- en: 'warning: no files found matching ''*.ps1'' under directory ''lib/ansible/modules/windows'''
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '警告：在目录 ''lib/ansible/modules/windows'' 下未找到与 ''*.ps1'' 匹配的文件  '
- en: 'warning: no files found matching ''*.psm1'' under directory ''test/support'''
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: '警告：在目录 ''test/support'' 下未找到与 ''*.psm1'' 匹配的文件  '
- en: writing manifest file 'lib/ansible_base.egg-info/SOURCES.txt'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '正在写入清单文件 ''lib/ansible_base.egg-info/SOURCES.txt''  '
- en: Setting up Ansible to run out of checkout...
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '正在设置 Ansible 从检出中运行...  '
- en: PATH=/home/james/ansible/bin:/home/james/ansible/moduledev/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/home/james/bin
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: PATH=/home/james/ansible/bin:/home/james/ansible/moduledev/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/home/james/bin
- en: PYTHONPATH=/home/james/ansible/lib
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 'PYTHONPATH=/home/james/ansible/lib  '
- en: MANPATH=/home/james/ansible/docs/man:/usr/local/share/man:/usr/share/man
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 'MANPATH=/home/james/ansible/docs/man:/usr/local/share/man:/usr/share/man  '
- en: Remember, you may wish to specify your host file with -i
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '请记住，您可能希望通过 -i 指定主机文件  '
- en: Done!
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '完成！  '
- en: '[PRE35]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: (moduledev) $ python remote_filecopy.py args.json
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '(moduledev) $ python remote_filecopy.py args.json  '
- en: '{"invocation": {"module_args": {"dest": "/tmp/bar", "source": "/tmp/foo"}},
    "changed": true}'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '{"invocation": {"module_args": {"dest": "/tmp/bar", "source": "/tmp/foo"}},
    "changed": true}  '
- en: (moduledev) $ ls -l /tmp/bar
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '(moduledev) $ ls -l /tmp/bar  '
- en: -rw-r--r-- 1 root root 0 Apr 26 12:35 /tmp/bar
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '-rw-r--r-- 1 root root 0 Apr 26 12:35 /tmp/bar  '
- en: '[PRE36]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: $ cd ~
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '$ cd ~  '
- en: $ mkdir testplaybook
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '$ mkdir testplaybook  '
- en: $ cd testplaybook
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '$ cd testplaybook  '
- en: $ mkdir library
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '$ mkdir library  '
- en: $ cp ~/ansible/moduledev/remote_filecopy.py library/
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '$ cp ~/ansible/moduledev/remote_filecopy.py library/  '
- en: '[PRE37]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '---'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '---  '
- en: '- name: Playbook to test custom module'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '- name: 测试自定义模块的 Playbook  '
- en: 'hosts: all'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 'hosts: all  '
- en: 'tasks:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 'tasks:  '
- en: '- name: Test the custom module'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '- name: 测试自定义模块  '
- en: 'remote_filecopy:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 'remote_filecopy:  '
- en: 'source: /tmp/foo'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 'source: /tmp/foo  '
- en: 'dest: /tmp/bar'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 'dest: /tmp/bar  '
- en: 'register: testresult'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 'register: testresult  '
- en: '- name: Print the test result data'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '- name: 打印测试结果数据  '
- en: 'ansible.builtin.debug:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 'ansible.builtin.debug:  '
- en: 'var: testresult'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 'var: testresult  '
- en: '[PRE38]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: testplaybook
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 'testplaybook  '
- en: ├── hosts
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '├── hosts  '
- en: ├── library
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '├── library  '
- en: │ └── remote_filecopy.py
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '│ └── remote_filecopy.py  '
- en: └── testplaybook.yml
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '└── testplaybook.yml  '
- en: '[PRE39]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: $ ansible-playbook -i hosts testplaybook.yml
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '$ ansible-playbook -i hosts testplaybook.yml  '
- en: PLAY [Playbook to test custom module] ******************************************
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 'PLAY [测试自定义模块的 Playbook] ******************************************  '
- en: TASK [Gathering Facts] *********************************************************
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 'TASK [Gathering Facts] *********************************************************  '
- en: 'ok: [frt01.example.com]'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 'ok: [frt01.example.com]  '
- en: 'ok: [app01.example.com]'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 'ok: [app01.example.com]  '
- en: TASK [Test the custom module] **************************************************
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 'TASK [测试自定义模块] **************************************************  '
- en: 'changed: [app01.example.com]'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 'changed: [app01.example.com]  '
- en: 'changed: [frt01.example.com]'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 'changed: [frt01.example.com]  '
- en: TASK [Print the test result data] **********************************************
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 任务 [打印测试结果数据] **********************************************
- en: 'ok: [app01.example.com] => {'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 'ok: [app01.example.com] => {'
- en: '"testresult": {'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '"testresult": {'
- en: '"changed": true,'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '"changed": true,'
- en: '"failed": false'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '"failed": false'
- en: '}'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: 'ok: [frt01.example.com] => {'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 'ok: [frt01.example.com] => {'
- en: '"testresult": {'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '"testresult": {'
- en: '"changed": true,'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '"changed": true,'
- en: '"failed": false'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '"failed": false'
- en: '}'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: PLAY RECAP *********************************************************************
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: PLAY RECAP *********************************************************************
- en: 'app01.example.com : ok=3 changed=1 unreachable=0 failed=0 skipped=0 rescued=0
    ignored=0'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 'app01.example.com : ok=3 changed=1 unreachable=0 failed=0 skipped=0 rescued=0
    ignored=0'
- en: 'frt01.example.com : ok=3 changed=1 unreachable=0 failed=0 skipped=0 rescued=0
    ignored=0'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 'frt01.example.com : ok=3 changed=1 unreachable=0 failed=0 skipped=0 rescued=0
    ignored=0'
- en: '[PRE40]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: (moduledev) $ rm -f /tmp/foo
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: (moduledev) $ rm -f /tmp/foo
- en: (moduledev) $ python3 remote_filecopy.py args.json
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: (moduledev) $ python3 remote_filecopy.py args.json
- en: 'Traceback (most recent call last):'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一次调用的追踪：
- en: File "remote_filecopy.py", line 101, in <module>
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 文件 "remote_filecopy.py"，第 101 行，在 <module>
- en: main()
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: main()
- en: ^^^^^^
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: ^^^^^^
- en: File "remote_filecopy.py", line 94, in main
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 文件 "remote_filecopy.py"，第 94 行，在 main
- en: shutil.copy(module.params['source'],
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: shutil.copy(module.params['source'],
- en: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- en: File "/opt/homebrew/Cellar/python@3.11/3.11.4/Frameworks/Python.framework/Versions/3.11/lib/python3.11/shutil.py",
    line 419, in copy
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 文件 "/opt/homebrew/Cellar/python@3.11/3.11.4/Frameworks/Python.framework/Versions/3.11/lib/python3.11/shutil.py"，第
    419 行，在 copy
- en: copyfile(src, dst, follow_symlinks=follow_symlinks)
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: copyfile(src, dst, follow_symlinks=follow_symlinks)
- en: File "/opt/homebrew/Cellar/python@3.11/3.11.4/Frameworks/Python.framework/Versions/3.11/lib/python3.11/shutil.py",
    line 256, in copyfile
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 文件 "/opt/homebrew/Cellar/python@3.11/3.11.4/Frameworks/Python.framework/Versions/3.11/lib/python3.11/shutil.py"，第
    256 行，在 copyfile
- en: 'with open(src, ''rb'') as fsrc:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 'with open(src, ''rb'') as fsrc:'
- en: ^^^^^^^^^^^^^^^
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: ^^^^^^^^^^^^^^^
- en: 'FileNotFoundError: [Errno 2] No such file or directory: ''/tmp/foo'''
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 'FileNotFoundError: [Errno 2] 没有那个文件或目录: ''/tmp/foo'''
- en: '[PRE41]'
  id: totrans-329
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'try:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 'try:'
- en: shutil.copy(module.params['source'], module.params['dest'])
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: shutil.copy(module.params['source'], module.params['dest'])
- en: 'except:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 'except:'
- en: module.fail_json(msg="Failed to copy file")
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: module.fail_json(msg="文件复制失败")
- en: '[PRE42]'
  id: totrans-334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: (moduledev) $ rm -f /tmp/foo
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: (moduledev) $ rm -f /tmp/foo
- en: (moduledev) $ python3 better_remote_filecopy.py args.json
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: (moduledev) $ python3 better_remote_filecopy.py args.json
- en: '{"msg": "Failed to copy file", "failed": true, "invocation": {"module_args":
    {"dest": "/tmp/bar", "source": "/tmp/foo"}}}'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '{"msg": "复制文件失败", "failed": true, "invocation": {"module_args": {"dest": "/tmp/bar",
    "source": "/tmp/foo"}}}'
- en: '[PRE43]'
  id: totrans-338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: (moduledev) $ touch /tmp/foo
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: (moduledev) $ touch /tmp/foo
- en: (moduledev) $ python3 better_remote_filecopy.py args.json
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: (moduledev) $ python3 better_remote_filecopy.py args.json
- en: '{"invocation": {"module_args": {"dest": "/tmp/bar", "source": "/tmp/foo"}},
    "changed": true}'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '{"invocation": {"module_args": {"dest": "/tmp/bar", "source": "/tmp/foo"}},
    "changed": true}'
- en: '[PRE44]'
  id: totrans-342
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: $ cd ansible$ python 3 -m venv venv
  id: totrans-343
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ cd ansible$ python 3 -m venv venv
- en: $ . venv/bin/activate
  id: totrans-344
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ . venv/bin/activate
- en: (venv) $ source hacking/env-setup
  id: totrans-345
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: (venv) $ source hacking/env-setup
- en: running egg_info
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正在运行 egg_info
- en: creating lib/ansible.egg-info
  id: totrans-347
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正在创建 lib/ansible.egg-info
- en: writing lib/ansible.egg-info/PKG-INFO
  id: totrans-348
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正在写入 lib/ansible.egg-info/PKG-INFO
- en: writing dependency_links to lib/ansible.egg-info/dependency_links.txt
  id: totrans-349
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正在写入依赖链接到 lib/ansible.egg-info/dependency_links.txt
- en: writing requirements to lib/ansible.egg-info/requires.txt
  id: totrans-350
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正在将要求写入 lib/ansible.egg-info/requires.txt
- en: writing top-level names to lib/ansible.egg-info/top_level.txt
  id: totrans-351
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正在写入顶级名称到 lib/ansible.egg-info/top_level.txt
- en: writing manifest file 'lib/ansible.egg-info/SOURCES.txt'
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正在写入清单文件 'lib/ansible.egg-info/SOURCES.txt'
- en: reading manifest file 'lib/ansible.egg-info/SOURCES.txt'
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正在读取清单文件 'lib/ansible.egg-info/SOURCES.txt'
- en: reading manifest template 'MANIFEST.in'
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正在读取清单模板 'MANIFEST.in'
- en: 'warning: no files found matching ''SYMLINK_CACHE.json'''
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '警告: 找不到匹配的文件 ''SYMLINK_CACHE.json'''
- en: writing manifest file 'lib/ansible.egg-info/SOURCES.txt'
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正在写入清单文件 'lib/ansible.egg-info/SOURCES.txt'
- en: Setting up Ansible to run out of checkout...
  id: totrans-357
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正在设置 Ansible 以从检出目录运行...
- en: PATH=/home/james/ansible/bin:/home/james/ansible/venv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/home/james/bin
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: PATH=/home/james/ansible/bin:/home/james/ansible/venv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/home/james/bin
- en: PYTHONPATH=/home/james/ansible/lib
  id: totrans-359
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: PYTHONPATH=/home/james/ansible/lib
- en: MANPATH=/home/james/ansible/docs/man:/usr/local/share/man:/usr/share/man
  id: totrans-360
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: MANPATH=/home/james/ansible/docs/man:/usr/local/share/man:/usr/share/man
- en: Remember, you may wish to specify your host file with -i
  id: totrans-361
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请记住，您可能希望通过 -i 来指定您的主机文件。
- en: 'pip to install the Python requirements so that you can run the ansible-test
    tool:'
  id: totrans-362
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用 pip 安装 Python 依赖，以便您可以运行 ansible-test 工具：
- en: '[PRE45]'
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[PRE46]'
  id: totrans-364
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: (venv) $ cp ~/moduledev/remote_filecopy.py ./lib/ansible/modules/files/
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: (venv) $ cp ~/moduledev/remote_filecopy.py ./lib/ansible/modules/files/
- en: (venv) $ ansible-test sanity --test validate-modules remote_filecopy
  id: totrans-366
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: (venv) $ ansible-test sanity --test validate-modules remote_filecopy
- en: Sanity check using validate-modules
  id: totrans-367
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用 validate-modules 进行健康检查
- en: 'WARNING: Cannot perform module comparison against the base branch. Base branch
    not detected when running locally.'
  id: totrans-368
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 警告：无法对基础分支执行模块比较。运行时未检测到基础分支。
- en: 'WARNING: Reviewing previous 1 warning(s):'
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 警告：正在查看之前的 1 个警告：
- en: 'WARNING: Cannot perform module comparison against the base branch. Base branch
    not detected when running locally.'
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 警告：无法对基础分支执行模块比较。运行时未检测到基础分支。
- en: '[PRE47]'
  id: totrans-371
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: $ cd ~/ansible
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: $ cd ~/ansible
- en: $ ansible-doc -M moduledev/ remote_filecopy
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible-doc -M moduledev/ remote_filecopy
- en: '[PRE48]'
  id: totrans-374
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: REMOTE_FILECOPY (/home/james/ansible/moduledev/remote_filecopy.py)
  id: totrans-375
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: REMOTE_FILECOPY (/home/james/ansible/moduledev/remote_filecopy.py)
- en: The remote_copy module copies a file on the remote host from a
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: remote_copy 模块从远程主机复制文件到
- en: given source to a provided destination.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 将给定的源复制到提供的目标位置。
- en: '* This module is maintained by The Ansible Community'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: '* 本模块由 Ansible 社区维护'
- en: 'OPTIONS (= is mandatory):'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 选项（= 为必填项）：
- en: = dest
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: = dest
- en: Path to the destination on the remote host for the copy
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 远程主机上的目标路径
- en: = source
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: = source
- en: Path to a file on the source file on the remote host
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 远程主机上源文件的路径
- en: '[PRE49]'
  id: totrans-384
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'docs/docsite/ directory as the next step in the documentation creation process:'
  id: totrans-385
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: docs/docsite/ 目录是文档创建过程中的下一步：
- en: '[PRE50]'
  id: totrans-386
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-387
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: $ MODULES=hello_module make webdocs
  id: totrans-388
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ MODULES=hello_module make webdocs
- en: '[PRE52]'
  id: totrans-389
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: $ pip3 uninstall sphinx
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: $ pip3 uninstall sphinx
- en: $ pip3 install sphinx==2.4.4
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: $ pip3 install sphinx==2.4.4
- en: $ pip3 install sphinx-notfound-page
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: $ pip3 install sphinx-notfound-page
- en: '[PRE53]'
  id: totrans-393
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: generating indices... genindex py-modindexdone
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 正在生成索引... genindex py-modindexdone
- en: 'writing additional pages... search/home/james/ansible/docs/docsite/_themes/sphinx_rtd_theme/search.xhtml:21:
    RemovedInSphinx30Warning: To modify script_files in the theme is deprecated. Please
    insert a <script> tag directly in your theme instead.'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: '写入额外页面... search/home/james/ansible/docs/docsite/_themes/sphinx_rtd_theme/search.xhtml:21:
    RemovedInSphinx30Warning: 修改主题中的 script_files 已被弃用。请直接在主题中插入 <script> 标签。'
- en: '{% endblock %}'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: '{% endblock %}'
- en: opensearchdone
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: opensearchdone
- en: copying images... [100%] dev_guide/style_guide/images/thenvsthan.jpg
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 复制图像... [100%] dev_guide/style_guide/images/thenvsthan.jpg
- en: copying downloadable files... [ 50%] network/getting_started/sample_files/first_copying
    downloadable files... [100%] network/getting_started/sample_files/first_playbook_ext.yml
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 复制可下载文件... [ 50%] network/getting_started/sample_files/first_copying 可下载文件...
    [100%] network/getting_started/sample_files/first_playbook_ext.yml
- en: copying static files... ... done
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 复制静态文件... ... 完成
- en: copying extra files... done
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 复制额外文件... 完成
- en: 'dumping search index in English (code: en)... done'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 正在以英语转储搜索索引（代码：en）... 完成
- en: dumping object inventory... done
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 正在转储对象清单... 完成
- en: build succeeded, 35 warnings.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 构建成功，35 个警告。
- en: The HTML pages are in _build/html.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: HTML 页面位于 _build/html 目录。
- en: 'make[1]: Leaving directory `/home/james/ansible/docs/docsite'''
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 'make[1]: 离开目录 `/home/james/ansible/docs/docsite'''
- en: '[PRE54]'
  id: totrans-407
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: $ find /home/james/ansible/docs/docsite -name remote_filecopy*
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: $ find /home/james/ansible/docs/docsite -name remote_filecopy*
- en: /home/james/ansible/docs/docsite/rst/modules/remote_filecopy_module.rst
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: /home/james/ansible/docs/docsite/rst/modules/remote_filecopy_module.rst
- en: /home/james/ansible/docs/docsite/_build/html/modules/remote_filecopy_module.xhtml
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: /home/james/ansible/docs/docsite/_build/html/modules/remote_filecopy_module.xhtml
- en: /home/james/ansible/docs/docsite/_build/doctrees/modules/remote_filecopy_module.doctree
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: /home/james/ansible/docs/docsite/_build/doctrees/modules/remote_filecopy_module.doctree
- en: '[PRE55]'
  id: totrans-412
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: https://github.com/YOUR_ACCOUNT/COLLECTION_REPO.git ~/YOUR_WORKING_DIRECTORY
  id: totrans-413
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: https://github.com/YOUR_ACCOUNT/COLLECTION_REPO.git ~/YOUR_WORKING_DIRECTORY
- en: '[PRE56]'
  id: totrans-414
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: $ cd ~/ YOUR_WORKING_DIRECTORY
  id: totrans-415
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ cd ~/ YOUR_WORKING_DIRECTORY
- en: https://github.com/ansible-collections/COLLECTION_REPO.git
  id: totrans-416
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: https://github.com/ansible-collections/COLLECTION_REPO.git
- en: '[PRE57]'
  id: totrans-417
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: $ git fetch upstream
  id: totrans-418
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ git fetch upstream
- en: $ git rebase upstream/YOUR_BRANCH
  id: totrans-419
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ git rebase upstream/YOUR_BRANCH
- en: '[PRE58]'
  id: totrans-420
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: $ git checkout -b name_of_my_branch
  id: totrans-421
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ git checkout -b name_of_my_branch
- en: '[PRE59]'
  id: totrans-422
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'http://github.com/ansible-collections/COLLECTION_REPO). Then, select the Pull
    requests tab. Fill out the PR template with your changes. Then, select create
    a pull request. Note that if your PR looks good to the community, it will be merged:'
  id: totrans-423
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: http://github.com/ansible-collections/COLLECTION_REPO)。然后，选择 Pull requests 标签。填写
    PR 模板并提交你的更改。接着，选择创建一个 pull request。请注意，如果你的 PR 符合社区标准，它将被合并：
- en: '[PRE60]'
  id: totrans-424
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
