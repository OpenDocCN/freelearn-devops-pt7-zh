- en: Customizing Jira for Your Projects
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为你的项目自定义 Jira
- en: An information system such as Atlassian Jira is only as useful as the data that
    goes into it, so it is no surprise that Jira is very flexible when it comes to
    letting you customize the fields and screens. Jira comes with a suite of default
    fields to help you get it up and running quickly, and it also allows you to add
    your own fields, called custom fields, to address your unique needs.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 像 Atlassian Jira 这样的信息系统的价值取决于输入其中的数据，因此不难理解，Jira 在允许你自定义字段和屏幕时非常灵活。Jira 提供了一系列默认字段，帮助你快速启动，同时也允许你添加自己的字段，这些自定义字段可以满足你独特的需求。
- en: In this chapter, we will learn not only how to manage these custom fields in
    Jira, but also how you can create your very own custom field types with your own
    business logic, through scripting.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们不仅会学习如何管理 Jira 中的这些自定义字段，还会了解如何通过脚本编写，创建具有自己业务逻辑的全新自定义字段类型。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下主题：
- en: Setting up different issue types for projects
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为项目设置不同的缺陷类型
- en: Making a field required
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使某个字段成为必填项
- en: Making the assignee field required
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使指派字段成为必填项
- en: Hiding a field from view
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隐藏字段
- en: Creating a new field configuration
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建新的字段配置
- en: Setting up customized screens for your project
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为你的项目设置自定义屏幕
- en: Removing a select list's None option
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移除选择列表中的“无”选项
- en: Adding help tips to custom fields
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为自定义字段添加帮助提示
- en: Using JavaScript with custom fields
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 JavaScript 与自定义字段
- en: Setting default values for fields
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为字段设置默认值
- en: Adding permission to fields
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为字段添加权限
- en: Creating your own custom field types
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建你自己的自定义字段类型
- en: Setting up different issue types for projects
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为项目设置不同的缺陷类型
- en: Jira comes with a number of issue types out of the box that are designed for
    software project management. However, over time, you might find that these issue
    types do not apply to all of your projects, and you have added your own. In this
    recipe, we will look at how to manage the issue types, so that each project can
    have its own set of issue types.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Jira 默认提供了许多专为软件项目管理设计的缺陷类型。然而，随着时间推移，你可能会发现这些缺陷类型并不适用于所有项目，而你已经添加了自己的缺陷类型。在本节中，我们将学习如何管理缺陷类型，以便每个项目可以有自己的缺陷类型集合。
- en: How to do it...
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Proceed with the following steps to set up a project-specific issue type list:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤设置特定于项目的缺陷类型列表：
- en: Log into Jira with a user that has a Jira administrator's permission.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用具有 Jira 管理员权限的用户登录 Jira。
- en: Navigate to Administration > Issues > Issue type schemes.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到“管理”>“缺陷”>“缺陷类型方案”。
- en: Click on the Add issue type schemebutton.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“添加缺陷类型方案”按钮。
- en: Enter the name for the new issue type scheme.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入新的缺陷类型方案的名称。
- en: Add issue types to the scheme by dragging them from right to left.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将缺陷类型从右侧拖动到左侧，以将其添加到方案中。
- en: Select the default issue type.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择默认缺陷类型。
- en: 'Click on the Savebutton to create the new scheme, as shown in the following
    screenshot:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“保存”按钮以创建新的方案，如下图所示：
- en: '![](img/36ad1962-5529-44a6-992d-61d868b625ff.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/36ad1962-5529-44a6-992d-61d868b625ff.png)'
- en: 'Having created your new issue type scheme, you now need to apply it to projects
    in which you want to restrict issue type selections:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在你创建了新的缺陷类型方案后，你需要将其应用到那些你希望限制缺陷类型选择的项目中：
- en: Click on the Associatelink for the new issue type scheme.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击新的缺陷类型方案的关联链接。
- en: Select the project(s) you want to apply the scheme to.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择你希望将该方案应用到的项目。
- en: Click on Associateto change the selected projects' issue type scheme.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“关联”以更改所选项目的缺陷类型方案。
- en: If the project has issues with issue types that do not exist in the new issue
    type scheme, Jira will walk you through a migration process where you can update
    the issue type for all the impacted issues.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果项目中存在一些缺陷类型不在新的缺陷类型方案中，Jira 会引导你完成迁移过程，你可以在此过程中更新所有受影响的缺陷类型。
- en: Making a field required
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使某个字段成为必填项
- en: Required fields such as Summary and Issue Type have a little red asterisk next
    to them, which means they must have a value when you are creating or updating
    an issue. This is a great way to ensure that users do not skip filling in important
    information.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 必填字段，如“概要”和“缺陷类型”，旁边会有一个红色小星号，这意味着在创建或更新缺陷时必须填写这些字段。这是确保用户不会遗漏填写重要信息的好方法。
- en: We will look at how to make any fields of your choice required in this recipe,
    with field configurations. A field configuration controls the behavior of a field;
    this includes the field's mandatory requirements, visibility, renderer, and description.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将展示如何通过字段配置使你选择的任何字段成为必填字段。字段配置控制字段的行为；这包括字段的强制要求、可见性、渲染器和描述。
- en: How to do it...
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Proceed with the following steps to make a field required in Jira:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤操作以使字段在 Jira 中成为必填字段：
- en: Log into Jira with a user that has a Jira administrators permission.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用具有 Jira 管理员权限的用户登录 Jira。
- en: Navigate to Administration > Issues > Field Configurations.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 Administration > Issues > Field Configurations。
- en: Click on the Configurelink for the field configuration used by the project and
    issue type.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击项目和问题类型使用的字段配置的 Configurelink。
- en: Click on the Requiredlink for the field you want to make required, such as Due
    Date.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击所需字段的 Requiredlink，以使其成为必填字段，例如 Due Date。
- en: 'Once you have marked a field as required, such as **Due Date** in our case,
    whenever you create or edit an issue, Jira will make sure a value is entered for
    it, as shown in the following screenshot:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你将字段标记为必填字段，例如我们这个案例中的 **Due Date**，在创建或编辑问题时，Jira 会确保该字段输入了一个值，如下图所示：
- en: '![](img/3728f272-f1c6-4371-a9b2-2d98d7e9ff85.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3728f272-f1c6-4371-a9b2-2d98d7e9ff85.png)'
- en: We will now have a look at how these steps work.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将看看这些步骤是如何工作的。
- en: How it works...
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: When a field is marked as required, Jira will check to make sure that the field
    has a value when you are making updates to the issue, such as an edit, or during
    a workflow transition. This validation is applied even if the field is not present
    on the screen, so make sure you do not make a field that is not required on screen;
    otherwise, users will not be able to complete the action.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当字段被标记为必填时，Jira 会检查在你更新问题（例如编辑或在工作流转换期间）时该字段是否有值。即使该字段未出现在屏幕上，验证仍会被应用，因此请确保不要在屏幕上设置不需要的字段；否则，用户将无法完成操作。
- en: Certain fields, such as Assignee and Due Date, require the user to have certain
    permissions to make updates. If the user does not have the necessary permissions,
    the validation will fail, and prevent the user from completing the action.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 某些字段，例如 Assignee 和 Due Date，要求用户具有特定的权限才能进行更新。如果用户没有必要的权限，验证将失败，并阻止用户完成操作。
- en: There's more...
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Clicking on the Optional link will make the field not required. Certain fields,
    such as **Summary** and **Issue Type**, must be required.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 Optional 链接将使该字段变为非必填字段。某些字段，例如 **Summary** 和 **Issue Type**，必须是必填的。
- en: See also
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参见
- en: Refer to the *Making the Assignee field required* recipe to see how to disable
    the unassigned option.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考 *Making the Assignee field required* 教程，了解如何禁用未分配选项。
- en: Making the Assignee field required
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 Assignee 字段设置为必填字段
- en: By default, the Assignee field has an unassigned option, which is equivalent
    to making the field optional. If you look at the field configuration, you will
    realize that you cannot make the Assignee field required, as there is no such
    option available.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Assignee 字段具有未分配选项，这相当于将该字段设置为可选。如果查看字段配置，你会发现你无法将 Assignee 字段设置为必填字段，因为没有可用的选项。
- en: In this recipe, we will look at how to disable the unassigned option, effectively
    making Assignee a required field.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将展示如何禁用未分配选项，从而使 Assignee 成为必填字段。
- en: Getting ready
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Note the following conditions are required for your projects in order to disable
    the unassigned option for each individual project:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，以下条件是禁用每个项目的未分配选项所必需的：
- en: Issues that are currently using that option for the Assignee field—you will
    need to change all issues with an Unassigned value for Assignee to something else.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当前在 Assignee 字段使用该选项的问题—你需要将所有 Assignee 值为 Unassigned 的问题更改为其他值。
- en: Projects that have Unassigned set as the default Assignee—you will need to change
    your project's Default Assignee setting in the Users and roles section.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目将 Unassigned 设置为默认 Assignee—你需要更改项目中“用户和角色”部分的默认 Assignee 设置。
- en: How to do it...
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Proceed with the following steps to disable the unassigned option:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤操作以禁用未分配选项：
- en: Log into Jira with a user that has a Jira administrator's permission.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用具有 Jira 管理员权限的用户登录 Jira。
- en: Navigate to Administration > System.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 Administration > System。
- en: Click on the Edit Settingsbutton.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 Edit Settings 按钮。
- en: Scroll down and select the OFFoption for **Allow unassigned issues.**
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动并选择 OFFoption 以禁用 **Allow unassigned issues**。
- en: Click on Update to apply the change.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **更新** 来应用更改。
- en: 'Have a look at the following screenshot:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 看一下下面的截图：
- en: '![](img/62bc8718-a783-4585-882d-962acbcac7c5.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/62bc8718-a783-4585-882d-962acbcac7c5.png)'
- en: As you can see, once the option is disabled, issues can no longer be unassigned.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，一旦禁用该选项，问题将无法再被解除分配。
- en: Hiding a field from view
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 隐藏字段视图
- en: There will be times when a field is no longer needed. When this happens, instead
    of deleting the field, which would also remove all its data, you can choose to
    hide it. If you need the field again further down the track, you can simply unhide
    it and retain all the data.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候某个字段不再需要使用。遇到这种情况时，你可以选择隐藏该字段，而不是删除它，因为删除字段会同时删除所有数据。如果之后你需要再次使用该字段，你可以简单地取消隐藏它，并且保留所有数据。
- en: In this recipe, we will be hiding both the Priority and Due Date fields.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在此方案中，我们将隐藏 **优先级** 和 **到期日期** 字段。
- en: How to do it...
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Proceed with the following steps to hide a field in Jira:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤在 Jira 中隐藏字段：
- en: Log into Jira with a user that has a Jira administrator's permission.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以具有 Jira 管理员权限的用户身份登录 Jira。
- en: Navigate to Administration > Issues > Field Configurations.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入 管理 > 问题 > 字段配置。
- en: Click on the Configurelink for the field configuration used by the project and
    issue type.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击该项目和问题类型使用的字段配置的 **配置** 链接。
- en: Click on the Hidelink for **Priority** and **Due Date.**
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **隐藏** 链接来隐藏 **优先级** 和 **到期日期** 字段。
- en: Clicking on the Show link will expose the field. You should not hide a mandatory
    field.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 **显示** 链接将展示该字段。你不应该隐藏必填字段。
- en: There's more...
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Using field configuration is one way to hide fields from the user. There are
    two more ways to make a field hidden from view:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 使用字段配置是隐藏字段的一种方法。还有两种其他方法可以让字段在视图中隐藏：
- en: Take the field off screen. Note that for the View screen, default fields such
    as Summary and Description are shown regardless of whether or not they are placed
    on the screen.
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从屏幕上移除字段。注意，对于查看屏幕，像摘要和描述这样的默认字段无论是否被放置在屏幕上，都会显示出来。
- en: Restrict the field's configuration scheme so that it is not applicable to the
    project/issue type context. You can do this by clicking on the Configure for the
    customfield and deselecting the **project/issue** type you do not want the field
    to be available for.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制字段配置方案，使其不适用于项目/问题类型上下文。你可以通过点击自定义字段的配置并取消选择你不希望该字段可用的 **项目/问题** 类型来实现。
- en: Hiding the field with field configuration will make it hidden from all screens
    for the project and issue type it is applicable to, so, if you want to hide the
    field from specific screens, you should not use field configuration, but simply
    take the field off the appropriate screens. For example, if you want to make a
    field read-only after an issue is created, you can simply take it off the screen
    assigned to the edit issue operation. Pay close attention when you take fields
    off a screen; unlike field configurations, there are no safeguards in place to
    prevent you from taking a required field off a screen. So, if the screen is used
    for creating issues, then your users will be stuck, as they will not be able to
    provide a value for the required field that's missing from the screen.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 使用字段配置隐藏字段将使其在适用的项目和问题类型的所有屏幕中都被隐藏，因此，如果你只想在特定的屏幕上隐藏字段，不应使用字段配置，而应该简单地将字段从相应的屏幕中移除。例如，如果你想在问题创建后将字段设为只读，可以简单地将其从分配给编辑问题操作的屏幕中移除。移除字段时要格外小心；与字段配置不同，移除屏幕字段时没有任何安全措施来防止你移除必填字段。因此，如果该屏幕用于创建问题，那么用户将无法提供缺失字段的值，从而导致无法继续操作。
- en: Creating a new field configuration
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建新的字段配置
- en: You can configure a field's behavior with field configuration. Jira not only
    comes with a default field configuration that is applied to all project and issue
    types by default, but it also lets you create your own so that you can choose
    the projects and/or issue types to apply your field configuration to.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过字段配置来设置字段的行为。Jira 不仅提供了一个默认的字段配置，默认应用于所有项目和问题类型，而且它还允许你创建自己的字段配置，这样你就可以选择将字段配置应用到特定的项目和/或问题类型。
- en: In this recipe, we will make the **Description** and **Assignee** fields required
    only for the Bug issue type.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个方案中，我们将使 **描述** 和 **指派人** 字段仅对 Bug 问题类型是必填的。
- en: How to do it...
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Setting up a new field configuration is a three-step process. The first step
    is to create the new field configurations:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 设置一个新的字段配置是一个三步过程。第一步是创建新的字段配置：
- en: Log into Jira with a user that has a Jira administrator's permission.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用具有Jira管理员权限的用户登录Jira。
- en: Navigate to Administration > Issues > Field Configurations.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航至 管理 > 问题 > 字段配置。
- en: 'Click on the Add Field Configurationbutton, and name it `HUM: Bug Field Configuration`,
    and click on Add.'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '点击 **添加字段配置**按钮，并命名为 `HUM: Bug 字段配置`，点击 添加。'
- en: Click on the Requiredlink for the **Description** and **Assignee** fields.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **描述** 和 **负责人** 字段的必填链接。
- en: 'The second step is to associate the new field configuration with a new field
    configuration scheme:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 第二步是将新的字段配置与新的字段配置方案关联：
- en: Navigate to Administration > Issues > Field configuration schemes.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航至 管理 > 问题 > 字段配置方案。
- en: 'Click on the Add field configuration schemebutton and name it `HUM: Bug Field
    Configuration Scheme`. Click on Add.'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '点击 添加字段配置方案按钮 并将其命名为 `HUM: Bug 字段配置方案`。点击 添加。'
- en: Click on the Associate an issue type with a field configurationbutton.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **将问题类型与字段配置关联** 按钮。
- en: 'Select Bugfor **Issue Type**, **HUM: Bug Field Configuration** for **Field
    Configuration**, and click on Add, as shown in the following screenshot:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '选择**Bug**作为 **问题类型**，**HUM: Bug 字段配置**作为 **字段配置**，然后点击添加，如下图所示：'
- en: '![](img/62c2a489-b6c0-4fb5-a772-71a72685f95f.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](img/62c2a489-b6c0-4fb5-a772-71a72685f95f.png)'
- en: 'The last step is to apply the new field configuration scheme to our project:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是将新的 字段配置 方案应用到我们的项目中：
- en: Navigate to **Administration** > **Projects**.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航至 **管理** > **项目**。
- en: Select a project from the list.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从列表中选择一个项目。
- en: Select Fields from the left-hand panel.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧面板选择字段。
- en: Navigate to **Actions** > Use a different scheme.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航至 **操作** > 使用不同方案。
- en: 'Select the new `HUM: Bug Field Configuration Scheme`option and click on **Associate**.'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '选择新的 `HUM: Bug 字段配置方案` 选项，然后点击 **关联**。'
- en: Setting up customized screens for your project
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为您的项目设置自定义屏幕
- en: Jira comes with three screens by default—the **Default** screen, the **Resolve ****Issue**
    screen, and the **Workflow** screen.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: Jira默认提供三个屏幕——**默认**屏幕、**解决问题**屏幕和**工作流**屏幕。
- en: In this recipe, we will look at how to create a new screen from scratch, and
    then make it appear when we are creating a new Task issue.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将学习如何从零开始创建一个新屏幕，然后在创建新任务问题时使其显示。
- en: How to do it...
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: The screen is one of the most complicated configurations in Jira. To create
    a new screen and apply it often requires you to configure multiple schemes. So,
    we will break these steps into three logical groups.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕是Jira中最复杂的配置之一。要创建一个新屏幕并应用它，通常需要配置多个方案。因此，我们将这些步骤分为三个逻辑组。
- en: 'Firstly, we need to create our new screen:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要创建新的屏幕：
- en: Log into Jira with a user that has a Jira administrator's permission.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用具有Jira管理员权限的用户登录Jira。
- en: Navigate to Administration > **Issues** > **Screens**.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航至 管理 > **问题** > **屏幕**。
- en: 'Click on the Add Screenbutton and name the new screen `HUM: Scrum Task Create
    Screen`. Click on **Add**.'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '点击 **添加屏幕** 按钮，并将新屏幕命名为 `HUM: Scrum 任务创建屏幕`。点击 **添加**。'
- en: 'Select and add the **Summary**, **Issue Type**, **Description**, **Assignee**,
    **Description**, and **Priority **fields, as shown in the following screenshot:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择并添加 **概要**、**问题类型**、**描述**、**负责人**、**描述**和**优先级**字段，如下图所示：
- en: '![](img/434b81cf-159d-44f4-83b0-ca98688b863a.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](img/434b81cf-159d-44f4-83b0-ca98688b863a.png)'
- en: 'Secondly, we need to assign the new Task Create Screen to the Create Issue
    operation:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 第二步，我们需要将新的任务创建屏幕分配给创建问题操作：
- en: Navigate to **Administration** > **Issues** > **Screen schemes**.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航至 **管理** > **问题** > **屏幕方案**。
- en: 'Click on the **Add Screen Scheme **button, name the new screen `HUM: Scrum
    Task Screen Scheme`, select **Default Screen** as the **Default Screen** option,
    and click on Add.'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '点击 **添加屏幕方案** 按钮，命名新屏幕为 `HUM: Scrum 任务屏幕方案`，选择 **默认屏幕** 作为 **默认屏幕** 选项，然后点击 添加。'
- en: Click on the Associate an Issue Operation with a Screenbutton.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **将问题操作与屏幕关联** 按钮。
- en: 'Select Create Issue for **Issue Operation**, HUM: Scrum Task Create Screen for **Screen**,
    and click on **Add**, as shown in the following screenshot:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '选择**创建问题**作为 **问题操作**，**HUM: Scrum 任务创建屏幕**作为 **屏幕**，然后点击 **添加**，如下图所示：'
- en: '![](img/a80064da-b919-4ae9-8cb4-b62f42994c4f.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a80064da-b919-4ae9-8cb4-b62f42994c4f.png)'
- en: 'Third, we need to assign the new `Task Screen Scheme` to the Task issue type:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 第三步，我们需要将新的 `任务屏幕方案` 分配给任务问题类型：
- en: Navigate to **Administration** > **Issues** > **Issue type screen schemes**.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航至 **管理** > **问题** > **问题类型屏幕方案**。
- en: 'Click on the Add Issue Type Screen Schemebutton and name the new screen `HUM:
    Scrum Task Issue Type Screen Scheme`.'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '点击**添加问题类型屏幕方案**按钮，并将新屏幕命名为`HUM: Scrum Task Issue Type Screen Scheme`。'
- en: Select the Default Screen Schemeas the **Screen Scheme** option and click on Add.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择默认屏幕方案作为 **屏幕方案** 选项，然后点击添加。
- en: Click on the Associate an issue Type with a Screen Schemebutton.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**将问题类型与屏幕方案关联**按钮。
- en: 'Select Task for **Issue Type**, HUM: Scrum Task Screen Scheme for **Screen
    Scheme**, and click on **Add**, as shown in the following screenshot:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '选择**问题类型**为 Task，**屏幕方案**为 HUM: Scrum Task Screen Scheme，然后点击**添加**，如下图所示：'
- en: '![](img/9f6bc5e3-836d-4b4f-83ef-1d69dc995e1c.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9f6bc5e3-836d-4b4f-83ef-1d69dc995e1c.png)'
- en: 'Lastly, we need to apply the new screen `Task Issue Type Screen Scheme` to
    the project:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要将新的 screen `Task Issue Type Screen Scheme` 应用于项目：
- en: Navigate to **Administration** > **Projects**.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 **管理** > **项目**。
- en: Select a project from the list.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从列表中选择一个项目。
- en: Select Screens from the left-hand pane.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧窗格中选择 Screens。
- en: Navigate to **Actions** > **Use a different scheme**.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 **操作** > **使用不同的方案**。
- en: Select the new **Task Issue Type Screen Scheme** and click on Associate**.**
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择新的**任务问题类型屏幕方案**，然后点击**关联**。
- en: How it works...
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The screen is one of the most intricate aspects of Jira configuration. When
    we create a new screen, we need to associate it with one of the three issue operations
    (create, edit, and view) with a screen scheme. In our recipe, we associated our
    new Task Create Screen with the Create Issue operation.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕是 Jira 配置中最复杂的部分之一。当我们创建一个新屏幕时，我们需要将它与三个问题操作之一（创建、编辑和查看）通过屏幕方案进行关联。在我们的方案中，我们将新的任务创建屏幕与“创建问题”操作进行了关联。
- en: Screen schemes then need to be associated with issue types, so that Jira can
    determine which screen scheme to use, based on the selected issue type.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕方案需要与问题类型关联，这样 Jira 才能根据选择的问题类型来确定使用哪个屏幕方案。
- en: 'Lastly, we apply the Issue Type Screen Scheme to a project, so only the selected
    projects will have the associated screens. Now take a look at the following diagram:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将问题类型屏幕方案应用于项目，因此只有选定的项目会使用关联的屏幕。现在看看下面的示意图：
- en: '![](img/7aecbc28-3fe0-49c3-b297-095406fe4e32.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7aecbc28-3fe0-49c3-b297-095406fe4e32.png)'
- en: It provides a comprehensive illustration of the relationships between screens,
    fields, and their various schemes.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 它提供了屏幕、字段及其各种方案之间关系的全面示例。
- en: Removing a select list's None option
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移除选择列表的 None 选项
- en: Custom field types such as select list (single and multi) come with the **None** option,
    and the only way to remove it is to make the field required. While this makes
    sense, it can be cumbersome to chase down every field and configuration.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义字段类型，如选择列表（单选和多选），都带有**None**选项，唯一移除它的方法是将该字段设为必填。虽然这有其道理，但追踪每个字段和配置可能会很麻烦。
- en: In this recipe, we will remove the None option from all single select list custom
    fields.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个方案中，我们将从所有单选列表自定义字段中移除“None”选项。
- en: Getting ready
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 正在准备中
- en: Since we will be modifying physical files in Jira, you will want to take backups
    of the files we change.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们将修改 Jira 中的物理文件，你可能需要对我们修改的文件进行备份。
- en: How to do it...
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Jira uses Velocity templates to render custom fields. These templates are mostly
    HTML, with some special symbols. You can find all these files in the `JIRA_INSTALL/atlassian-jira/WEB-INF/classes/templates/plugins/fields` directory,
    and the edit view templates are in the `edit` subdirectory:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: Jira 使用 Velocity 模板来渲染自定义字段。这些模板大多是 HTML 格式，并包含一些特殊符号。你可以在 `JIRA_INSTALL/atlassian-jira/WEB-INF/classes/templates/plugins/fields` 目录下找到所有这些文件，编辑视图模板位于 `edit` 子目录中：
- en: 'Open the `edit-select.vm` file (located in the previously mentioned directory)
    in a text editor, and remove the following code snippet:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文本编辑器中打开`edit-select.vm`文件（位于前述目录），并移除以下代码片段：
- en: '[PRE0]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Save the file and restart Jira. Make sure you do not change any other lines.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件并重启 Jira。确保不要更改其他任何行。
- en: You can remove the None option from other custom field types, such as multi-select,
    by editing the appropriate file (for example, `edit-multiselect.vm`).
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过编辑相应的文件（例如，`edit-multiselect.vm`）从其他自定义字段类型（如多选）中移除“None”选项。
- en: How it works...
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The Velocity `.vm` template files are what Jira uses to render the HTML for
    the custom fields. The code snippet we removed is what displays the None option.
    Note that, by changing the template, we are removing the None option for all single select custom
    fields in Jira. If you just want to remove the **None** option for a single custom
    field or only for certain projects, refer to the *Using JavaScript with custom
    fields* recipe.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: Velocity `.vm` 模板文件是Jira用来渲染自定义字段HTML的文件。我们移除的代码片段是用来显示“无”选项的。请注意，通过更改模板，我们会移除Jira中所有单选自定义字段的“无”选项。如果你只想为某个自定义字段或仅针对特定项目移除**无**选项，请参考*使用JavaScript与自定义字段*教程。
- en: Adding help tips to custom fields
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向自定义字段添加帮助提示
- en: Users who are new to Jira often find it confusing when it comes to filling in
    fields, especially custom fields. Therefore, it is for you as the administrator
    to provide useful tips and descriptions to explain what some of the fields are
    for.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 新用户在使用Jira时，填写字段，尤其是自定义字段，常常会感到困惑。因此，作为管理员，你需要提供有用的提示和描述，解释一些字段的用途。
- en: In this recipe, we will be adding a help icon to a customer field that we have
    called **Team**. You can apply this recipe to any custom fields you have in your
    Jira.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将为一个名为**团队**的客户字段添加帮助图标。你可以将此教程应用于Jira中任何自定义字段。
- en: How to do it...
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Proceed with the following steps to add help tips to a custom field:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤将帮助提示添加到自定义字段：
- en: Log into Jira with a user that has a Jira administrator's permission.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用具有Jira管理员权限的用户登录Jira。
- en: Navigate to **Administration** > **Issues** > **Custom Fields**.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**管理** > **问题** > **自定义字段**。
- en: Click on the **Edit **link for the custom field.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击自定义字段的**编辑**链接。
- en: 'Enter the following HTML snippet into the **Description **text box, and click
    on **Update**. You might want to substitute the `href` value to a real page containing
    help text:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下HTML代码片段输入到**描述**文本框中，然后点击**更新**。你可能需要将`href`的值替换为包含帮助文本的实际页面：
- en: '[PRE1]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The following screenshot shows our new help icon:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了我们新的帮助图标：
- en: '![](img/0cca5010-8c79-4ba8-ae0f-27c0b9968711.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0cca5010-8c79-4ba8-ae0f-27c0b9968711.png)'
- en: We will now go through how these steps work.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将逐步讲解这些步骤的工作原理。
- en: How it works...
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Jira allows us to use any valid HTML for custom field description, so we added
    some simple text and an `anchor` tag that links to an HTML page containing our help information.
    We also added a `span` tag with the proper style class in order to have the nice
    question mark icon used by the Issue Type and Priority fields.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: Jira允许我们使用任何有效的HTML来进行自定义字段描述，因此我们添加了一些简单的文本和一个`anchor`标签，链接到包含帮助信息的HTML页面。我们还添加了一个带有适当样式类的`span`标签，以便使用与问题类型和优先级字段相同的问号图标。
- en: The `data-helplink="local"` attribute for the `anchor` tag ensures that, when
    the user clicks on the help icon, the help page is opened in a separate page rather
    than redirecting the current page.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '`data-helplink="local"`属性用于`anchor`标签，确保当用户点击帮助图标时，帮助页面将在单独的页面中打开，而不是重定向当前页面。'
- en: Since the custom field description is rendered as it is, make sure you validate
    your HTML; for example, close all your HTML tags.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 由于自定义字段的描述会按原样呈现，确保你验证HTML内容；例如，关闭所有HTML标签。
- en: There's more...
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Normally, we put descriptions directly into the custom field''s description
    textbox, as demonstrated. You can also put your descriptions into the field configuration
    settings, such as hiding a field. Doing so offers the following advantages:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，我们将描述直接放入自定义字段的描述文本框中，如演示所示。你也可以将描述放入字段配置设置中，比如隐藏某个字段。这样做有以下优点：
- en: You can have different help text for different project/issue type contexts.
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以为不同的项目/问题类型上下文提供不同的帮助文本。
- en: You can set help text for fields that are not custom fields, such as **Summary**
    and **Description**.
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以为非自定义字段设置帮助文本，例如**摘要**和**描述**。
- en: 'Proceed with the following steps to set field descriptions in the field configuration:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤在字段配置中设置字段描述：
- en: Navigate to **Administration** > **Issues** > **Field Configurations**.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**管理** > **问题** > **字段配置**。
- en: Click on the **Configure **link for the field configuration used by the project
    and issue type.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击项目和问题类型使用的字段配置的**配置**链接。
- en: Click on the **Edit** link for the field.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击字段的**编辑**链接。
- en: Enter the HTML snippets into the **Description **field, and click on Update.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将HTML代码片段输入到**描述**字段中，并点击更新。
- en: See also
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另见
- en: Refer to the *Using JavaScript with custom fields* recipe for other tricks you
    can do with custom field descriptions.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考 *使用 JavaScript 与自定义字段* 的教程，了解更多你可以在自定义字段描述中使用的技巧。
- en: Using JavaScript with custom fields
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 JavaScript 与自定义字段
- en: JavaScript can be used to manipulate the HTML of custom fields. By adding JavaScript
    code in the custom field description and wrapping the code in `<script>` tags,
    Jira will execute the code when the custom field is rendered.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 JavaScript 来操作自定义字段的 HTML。通过在自定义字段的描述中添加 JavaScript 代码，并将代码包裹在 `<script>`
    标签中，Jira 将在渲染自定义字段时执行这些代码。
- en: In this recipe, we will look at another way of removing the None option from
    select list custom fields.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将学习另一种方法，来从下拉列表类型的自定义字段中移除 None 选项。
- en: Getting ready
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: This recipe uses the jQuery JavaScript library, which is bundled with Jira.
    If you are not familiar with jQuery, you can find the documentation at [http://jquery.com](http://jquery.com/).
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程使用了 jQuery JavaScript 库，Jira 中已捆绑此库。如果你不熟悉 jQuery，可以访问 [http://jquery.com](http://jquery.com/)
    查阅文档。
- en: 'We will also need to use the custom field''s ID in our script, so you will
    need to have that handy. You can find the ID by going to the **Custom fields** page,
    clicking on the **Edit** link of the target field, and clicking the number at
    the end of the URL, which is the field''s ID. For example, the following URL shows
    a custom field with the ID `10103`:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要在脚本中使用自定义字段的 ID，因此你需要准备好该 ID。你可以通过访问 **自定义字段** 页面，点击目标字段的 **编辑** 链接，并点击
    URL 末尾的数字来找到该字段的 ID。例如，以下 URL 显示了一个 ID 为 `10103` 的自定义字段：
- en: '`http://jira.localhost.com:8080/secure/admin/EditCustomField!default.jspa?id=10103`'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://jira.localhost.com:8080/secure/admin/EditCustomField!default.jspa?id=10103`'
- en: How to do it...
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Proceed with the following steps to add JavaScript to custom field description:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 请按照以下步骤，将 JavaScript 添加到自定义字段描述中：
- en: Log into Jira with a user that has a Jira administrator's permission.
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用具有 Jira 管理员权限的用户登录 Jira。
- en: Navigate to Administration > Issues > Custom Fields.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 管理 > 问题 > 自定义字段。
- en: Click on the **Edit **link for the custom field.
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击自定义字段的 **编辑** 链接。
- en: 'Enter the following JavaScript snippet into the **Description **text box, and
    click on **Update**. You will need to substitute it in your custom field''s ID:'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下 JavaScript 代码片段输入到 **描述** 文本框中，并点击 **更新**。你需要将其替换为你自定义字段的 ID：
- en: '[PRE2]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The following screenshot shows that the Team custom field:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了 Team 自定义字段：
- en: '![](img/3872f04e-1b0e-4620-a1a2-781a6b4a899a.png)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3872f04e-1b0e-4620-a1a2-781a6b4a899a.png)'
- en: As you can see, the None option is no longer available.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，None 选项不再可用。
- en: How it works...
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In our script, we use jQuery to select the Team custom field, based on its element
    ID, and remove the option with the value `-1` (which is the None option) with
    the `#customfield_10103 option[value="-1"]` selector.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的脚本中，我们使用 jQuery 根据元素 ID 选择 Team 自定义字段，并通过 `#customfield_10103 option[value="-1"]`
    选择器删除值为 `-1`（即 None 选项）的选项。
- en: We use the **Atlassian JavaScript** (**AJS**) namespace (`AJS.$`), which is
    the recommended way to use jQuery in Jira.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用 **Atlassian JavaScript** (**AJS**) 命名空间（`AJS.$`），这是在 Jira 中使用 jQuery 的推荐方法。
- en: Setting default values for fields
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置字段的默认值
- en: As you add more and more fields onto your screens, sometimes it can be overwhelming
    and confusing for your end users, especially for free text fields such as Description.
    Users will often enter data however they like. To help with that, one way is to
    have instructions set as default values for some of these fields to help guide
    your users with their inputs. For those of you who have used other systems, such
    as GitHub, this is a common practice.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 随着你在屏幕上添加越来越多的字段，用户可能会感到不知所措，尤其是对于像描述这样的自由文本字段。用户往往会按照自己的方式输入数据。为了解决这个问题，一种方法是为某些字段设置默认值作为说明，帮助引导用户输入。对于那些使用过其他系统（如
    GitHub）的人来说，这是一个常见的做法。
- en: In this recipe, we will look at how to set up a default value for the Description
    field, in the form of instructions for users to follow when creating a bug report.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将学习如何为描述字段设置默认值，以便在创建 bug 报告时为用户提供操作说明。
- en: Getting ready
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, we need to have the ScriptRunner for Jira add-on installed.
    You can download it from the following link, or install it directly from the Universal
    Plugin Manager at [https://marketplace.atlassian.com/plugins/com.onresolve.jira.groovy.groovyrunner](https://marketplace.atlassian.com/plugins/com.onresolve.jira.groovy.groovyrunner).
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个食谱，我们需要安装 ScriptRunner for Jira 插件。你可以从以下链接下载，或者直接从通用插件管理器安装它，链接为 [https://marketplace.atlassian.com/plugins/com.onresolve.jira.groovy.groovyrunner](https://marketplace.atlassian.com/plugins/com.onresolve.jira.groovy.groovyrunner)。
- en: You may also want to get familiar with Groovy scripting at [http://groovy-lang.org](http://groovy-lang.org)[.](http://groovy.codehaus.org/)
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能还想了解一下 Groovy 脚本，相关资料可以参考 [http://groovy-lang.org](http://groovy-lang.org)[.](http://groovy.codehaus.org/)
- en: How to do it...
  id: totrans-208
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Once you have installed the ScriptRunner for Jira add-on, we will first need
    to create what is known as a behavior:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你安装了 ScriptRunner for Jira 插件，我们首先需要创建一个所谓的行为：
- en: Log into Jira with a user that has a Jira administrator's permission.
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用具有 Jira 管理员权限的用户登录 Jira。
- en: Navigate to **Administration >** **Manage apps** > **Behaviors**.
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 **管理 >** **管理应用 >** **行为**。
- en: Create a new behavior by entering a name for it and clicking the **Add** button.
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过为其输入名称并点击 **添加** 按钮来创建一个新行为。
- en: 'With the new behavior created, we need to first create a mapping, so Jira will
    know what to apply the behavior to:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 创建了新的行为后，我们需要首先创建一个映射，以便 Jira 知道该将该行为应用于什么：
- en: Click on the Add Mapping link of the new behavior we have created.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击我们创建的新行为的“添加映射”链接。
- en: Select All projects and Bug issue type for our mapping.
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择所有项目和 Bug 问题类型进行我们的映射。
- en: Click the **Add Mapping** button to save the setting.
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **添加映射** 按钮来保存设置。
- en: 'With the mapping created, we can now start setting default values:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 创建了映射后，我们现在可以开始设置默认值：
- en: Click on the **Fields** link of the new behavior we have created.
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击我们创建的新行为的 **字段** 链接。
- en: 'Click on the **Create initialiser** link:'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **创建初始化器** 链接：
- en: '![](img/b034e76f-a7bd-4246-9127-3798c390b016.png)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b034e76f-a7bd-4246-9127-3798c390b016.png)'
- en: 'Enter the following code into the text editor:'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码输入到文本编辑器中：
- en: '[PRE3]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Click on **Save** to save our changes.
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **保存** 来保存我们的更改。
- en: 'Now, if you try to create a new Bug issue, you should see the Description field
    pre-populated with our default value, as shown here:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你尝试创建一个新的 Bug 问题，你应该会看到描述字段已经预填充了我们的默认值，如下所示：
- en: '![](img/ba0b3cc7-8600-48e2-9a58-05f9f6508e8a.png)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ba0b3cc7-8600-48e2-9a58-05f9f6508e8a.png)'
- en: We will now go have a look at how the steps work.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在来看看这些步骤是如何工作的。
- en: How it works...
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Our code is written in Groovy, which is very similar to Java, the technology
    used by Jira. We first try to get hold of the `Description` field in line #1,
    and, from line #3 to #20, we use wiki markup, the markup language used by Jira''s
    out-of-the-box editor, to create your default value in the form of instructions.
    On line #18, we check whether the issue already has a description value set, such
    as user-entered content, and, if not, we will apply our default value on line
    #19.'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '我们的代码是用 Groovy 编写的，它与 Jira 使用的技术 Java 非常相似。我们首先尝试获取第 #1 行的 `Description` 字段，在第
    #3 到第 #20 行之间，我们使用 wiki 标记语言，这是 Jira 内置编辑器使用的标记语言，用于以指令的形式创建默认值。在第 #18 行，我们检查该问题是否已经设置了描述值，例如用户输入的内容，如果没有，我们将在第
    #19 行应用我们的默认值。'
- en: Adding permission to fields
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向字段添加权限
- en: Out of the box, Jira comes with several levels of permissions, starting at the
    system level and going down to the issue level, allowing you to control who should
    have access to issues. While this is usually sufficient, you will find yourself
    needing to apply permissions to individual fields. For example, you may want a
    field such as Description to be read-only for everyone, but only editable by a
    select group of users.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Jira 提供了多个权限级别，从系统级别到问题级别，可以控制谁应该访问问题。虽然这通常已经足够，但你会发现有时需要将权限应用于单个字段。例如，你可能希望某个字段如描述对所有人只读，但只有特定用户组可编辑。
- en: One option is to create your own custom field types, as described in the later
    recipe, and code the permission requirement as part of the field, but this approach
    requires programming and cannot be applied to fields that are not created by you.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 一个选择是创建你自己的自定义字段类型，如后面食谱中描述的那样，并将权限要求作为字段的一部分进行编码，但这种方法需要编程，并且无法应用于不是由你创建的字段。
- en: In this recipe, we will look at an option to apply field-level permissions to
    both system fields and custom fields.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将介绍一种将字段级权限应用于系统字段和自定义字段的选项。
- en: Getting ready
  id: totrans-233
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, we need to have the ScriptRunner for Jira add-on installed.
    You can download it from the following link, or install it directly from the Universal
    Plugin Manager at [https://marketplace.atlassian.com/plugins/com.onresolve.jira.groovy.groovyrunner](https://marketplace.atlassian.com/plugins/com.onresolve.jira.groovy.groovyrunner).
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本教程，我们需要安装ScriptRunner for Jira插件。你可以从以下链接下载，或者直接通过[https://marketplace.atlassian.com/plugins/com.onresolve.jira.groovy.groovyrunner](https://marketplace.atlassian.com/plugins/com.onresolve.jira.groovy.groovyrunner)在Universal
    Plugin Manager中安装。
- en: How to do it...
  id: totrans-235
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Once you have installed the ScriptRunner for Jira add-on, we will first need
    to create what is known as a behavior:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了ScriptRunner for Jira插件后，我们首先需要创建一个被称为行为的内容：
- en: Log into Jira with a user that has a Jira administrator's permission.
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用具有Jira管理员权限的用户登录Jira。
- en: Navigate to **Administration** > Manage apps > **Behaviors**.
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入**管理** > 管理应用 > **行为**。
- en: Create a new behavior by entering a name for it and clicking the **Add** button.
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过输入名称并点击**添加**按钮创建一个新行为。
- en: 'With the new behavior created, we need to first create a mapping, so Jira will
    know what to apply the behavior to:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 创建新行为后，我们需要首先创建一个映射，这样Jira才知道将行为应用到什么内容：
- en: Click on the **Add Mapping** link of the new behavior we have created.
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击我们创建的新行为的**添加映射**链接。
- en: Select the projects and issue types you want to apply the behavior to. If you
    want this to be global, you can select the All projects and All issue types options.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择你想应用行为的项目和问题类型。如果你希望此行为为全局性，可以选择“所有项目”和“所有问题类型”选项。
- en: Click the **Add Mapping** button to save the setting.
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加映射**按钮以保存设置。
- en: 'With the mapping created, we can now start setting our field-level permission
    behaviors:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 创建好映射后，我们可以开始设置字段级权限行为：
- en: Click on the **Fields** link of the new behavior we have created.
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击我们创建的新行为的**字段**链接。
- en: Select the fields you want to apply field-level permissions to.
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择要应用字段级权限的字段。
- en: 'Toggle the available behavior options on and off, as shown here:'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换可用的行为选项，如下所示：
- en: '![](img/1628ba20-d8ab-4566-a355-151a969b99b3.png)'
  id: totrans-248
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1628ba20-d8ab-4566-a355-151a969b99b3.png)'
- en: 'Click on the **Add new condition** link and select which users the permission
    should be applied to. In the following screenshot, the permission will be applied
    to everyone except users in the `jira-administrators` group:'
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加新条件**链接，选择该权限应应用于哪些用户。在以下截图中，权限将应用于除`jira-administrators`组用户以外的所有人：
- en: '![](img/6f032829-414c-4154-a71d-0a688490b838.png)'
  id: totrans-250
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6f032829-414c-4154-a71d-0a688490b838.png)'
- en: Click on the **Add** button to add the condition.
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加**按钮以添加条件。
- en: After you are done with adding fields and conditions, click on the **Save**
    button.
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加字段和条件后，点击**保存**按钮。
- en: 'Once we have created and configured our field-level permissions, the changes
    will be applied immediately to the target issues according to the mappings we
    have configured. Have a look at the next screenshot:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们创建并配置了字段级权限，所做的更改将根据我们配置的映射立即应用到目标问题。请查看下一张截图：
- en: '![](img/6fc080fb-1583-4188-9ecb-d55d34d550c6.png)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6fc080fb-1583-4188-9ecb-d55d34d550c6.png)'
- en: As you can see, the Description field (a system field) and the Team field (a
    custom field) are in read-only mode when a user is editing the issue.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，当用户编辑问题时，描述字段（一个系统字段）和团队字段（一个自定义字段）处于只读模式。
- en: Creating your own custom field types
  id: totrans-256
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建自定义字段类型
- en: All custom fields that come out-of-the-box with Jira have predefined purposes,
    such as the text field, which allows users to type in some simple text. It will
    often be useful to have a specialized custom field that does exactly what you
    need. Unfortunately, this often requires custom development efforts.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: Jira自带的所有自定义字段都有预定义的用途，例如文本字段，允许用户输入一些简单文本。通常，拥有一个完全符合需求的专业自定义字段会非常有用。不幸的是，这通常需要自定义开发工作。
- en: However, there is an add-on that provides a custom field type that lets you
    use Groovy scripts to power its logic.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，有一个插件提供了一个自定义字段类型，允许您使用Groovy脚本来驱动其逻辑。
- en: In this recipe, we will look at how to create a custom field that uses a Groovy
    script to display the total number of comments on any given issue.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将展示如何创建一个使用Groovy脚本来显示某个问题所有评论总数的自定义字段。
- en: Getting ready
  id: totrans-260
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, we need to have the ScriptRunner for Jira add-on installed.
    You can download it from the following link, or install it directly from the Universal
    Plugin Manager at [https://marketplace.atlassian.com/plugins/com.onresolve.jira.groovy.groovyrunner](https://marketplace.atlassian.com/plugins/com.onresolve.jira.groovy.groovyrunner).
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此教程，我们需要安装**Jira的ScriptRunner**插件。你可以从以下链接下载它，或直接通过Universal Plugin Manager安装它：[https://marketplace.atlassian.com/plugins/com.onresolve.jira.groovy.groovyrunner](https://marketplace.atlassian.com/plugins/com.onresolve.jira.groovy.groovyrunner)。
- en: You may also want to get familiar with Groovy scripting at [http://groovy-lang.org](http://groovy-lang.org).
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以了解一下Groovy脚本语言，访问[http://groovy-lang.org](http://groovy-lang.org)。
- en: How to do it...
  id: totrans-263
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Creating a scripted field is a two-step process. We first need to create an
    instance of the custom field in Jira, and then add the script to it:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 创建脚本化字段是一个两步过程。我们首先需要在Jira中创建自定义字段的实例，然后将脚本添加到该字段：
- en: Log into Jira with a user that has a Jira administrator's permission.
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用具有Jira管理员权限的用户登录Jira。
- en: Navigate to **Administration** > **Issues** > **Custom fields**.
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**管理** > **问题** > **自定义字段**。
- en: Click on the Add Custom Field button and select **Advanced** from the dialog
    box.
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“添加自定义字段”按钮，并从对话框中选择**高级**。
- en: 'Scroll down and select **Scripted Field **from the list; click on **Next**,
    as shown in the following screenshot:'
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动并从列表中选择**脚本化字段**；点击**下一步**，如以下截图所示：
- en: '![](img/34d3f120-5dcd-4eb4-915b-a515c12831c1.png)'
  id: totrans-269
  prefs: []
  type: TYPE_IMG
  zh: '![](img/34d3f120-5dcd-4eb4-915b-a515c12831c1.png)'
- en: Name our new custom field `Total Comments` and add it to the appropriate screens.
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将我们的新自定义字段命名为`Total Comments`并将其添加到相应的界面。
- en: Navigate to Administration > **Manage apps** > Script Fields.
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**管理** > **管理应用** > **脚本字段**。
- en: Select the **Edit **option for the `Total Comments` field.
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`Total Comments`字段的**编辑**选项。
- en: 'Enter the following Groovy script in the script text box:'
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在脚本文本框中输入以下Groovy脚本：
- en: '[PRE4]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Select **Number Field **for **Template** and click on **Update**, as shown
    in the following screenshot:'
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**数字字段**作为**模板**，然后点击**更新**，如以下截图所示：
- en: '![](img/1c7a2b20-1c15-49f0-9e11-3517a9e219bf.png)'
  id: totrans-276
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1c7a2b20-1c15-49f0-9e11-3517a9e219bf.png)'
- en: 'When the custom field is added to an issue, it will automatically calculate
    the number of comments the issue has in real time, as shown in the following screenshot:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 当自定义字段添加到问题中时，它将自动实时计算该问题的评论数量，如以下截图所示：
- en: '![](img/8d9ce89e-d684-4a64-aa7f-d5b1a6dc8269.png)'
  id: totrans-278
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8d9ce89e-d684-4a64-aa7f-d5b1a6dc8269.png)'
- en: Now it's time to look to understand the steps.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候了解具体步骤了。
- en: How it works...
  id: totrans-280
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The scripted field type is an example of what is called the calculated custom
    field type. The calculated custom field type is a special custom field that derives
    (calculates) its value based on some predefined logic, in this case, our Groovy
    script. Every time the field is displayed, Jira will recalculate the field's value
    so it is always kept up to date.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本化字段类型是所谓的计算自定义字段类型的示例。计算自定义字段类型是一种特殊的自定义字段，它根据一些预定义的逻辑（在本例中为我们的Groovy脚本）推导（计算）其值。每次显示该字段时，Jira都会重新计算该字段的值，以确保始终保持最新状态。
