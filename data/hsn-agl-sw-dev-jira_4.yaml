- en: Working with Reports
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用报告
- en: In this chapter we are going to learn about versions and releases—what they
    are and how they're different from each other. We'll talk about how to read burndowns,
    Sprint reports, and velocity charts to determine whether or not your team is doing
    well. We will take a look at releasing epic burndowns as well as versions and
    epic reports, which give us the ability to do forecasting, which is very powerful.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习版本和发布的内容——它们是什么以及它们之间的区别。我们还将讨论如何阅读燃尽图、冲刺报告和速度图，以确定团队是否表现良好。我们还将查看发布史诗燃尽图、版本和史诗报告，这些能帮助我们进行预测，这非常强大。
- en: 'This chapter will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下内容：
- en: Versions and releases
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本和发布
- en: Burndown report
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 燃尽报告
- en: Sprint report
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 冲刺报告
- en: Velocity chart
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 速度图
- en: Release and epic burndowns
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布和史诗燃尽图
- en: Version and epic reports
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本和史诗报告
- en: Versions and releases
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 版本和发布
- en: Let's start with versions and releases. In this section, we're going to learn
    about what versions and releases are and how they interact with one another. We're
    going to talk about how to create and manage these versions, how to assign work
    to two versions, how to perform a release, and then finally how to view the contents
    of a release once we've made one.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从版本和发布开始。在本节中，我们将了解版本和发布是什么，以及它们如何相互作用。我们将讨论如何创建和管理这些版本，如何为两个版本分配工作，如何执行发布操作，最后如何查看发布后版本的内容。
- en: 'When we talk about versions and releases, versions come from the concept of
    software. We''re all familiar with major and minor versions of a software, for
    example, Version 2.0 versus Version 2.1\. They really represent a large amount
    of value, so that''s a way to think about it: a version represents a chunk of
    value that''s being deployed or released. Versions can be released, so once we''ve
    determined what''s in a version, and we complete that version, then we can release
    it, and then that version becomes a release. They''re the same thing—just one
    is pre-deployment and one is post-deployment. Once a version has been released,
    we can view the contents of that version as release notes, so we''ll take a look
    at that too.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们谈论版本和发布时，版本来源于软件的概念。我们都熟悉软件的主版本和次版本，例如，版本2.0与版本2.1。它们代表了大量的价值，所以可以这样理解：一个版本代表了正在部署或发布的一部分价值。版本可以被发布，所以一旦我们确定了版本的内容并完成了该版本的开发，我们就可以发布它，这样该版本就变成了发布版本。它们是一样的，只有一个是在部署前，另一个是在部署后。一旦版本被发布，我们就可以查看该版本的内容作为发布说明，所以我们也会查看这个部分。
- en: 'Let''s hop over to JIRA and take a look at our Second Project. In the Backlog,
    we can see that we have VERSIONS. We can actually have a look at these versions
    by clicking on them:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们跳转到JIRA，查看我们的第二个项目。在待办事项中，我们可以看到有版本。我们实际上可以通过点击这些版本来查看它们：
- en: '![](img/00092.jpeg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00092.jpeg)'
- en: 'As we can see in the preceding screenshot, this is where all our bot versions
    will be stored. We mentioned before that a version is a release before it''s been
    released; they''re the same thing. Let''s go under Releases and have a look at
    the following screenshot:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前面的截图中看到的，这是所有机器人版本存储的地方。我们之前提到过，版本是指在发布之前的状态；它们是相同的概念。让我们进入“发布”部分，看看下面的截图：
- en: '![](img/00093.jpeg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00093.jpeg)'
- en: 'We can see in the preceding screenshot that we have the version Name, a Start
    date, the Release date, and a Description. We will make a version and we''ll call
    it `test version`. Our Start date and Release date are optional, but let''s go
    ahead and write `test version` in the description, as shown in the following screenshot.
    Then, we''ll click  on Add:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从前面的截图中看到，版本名称、开始日期、发布日期和描述都已列出。我们将创建一个版本，命名为`测试版本`。我们的开始日期和发布日期是可选的，但我们可以在描述中填写`测试版本`，如下截图所示。然后，我们点击添加：
- en: '![](img/00094.jpeg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00094.jpeg)'
- en: 'We have the option to look at Released, Unreleased, and Archived versions.
    We also have our test version. We can create another one if we like. In the following
    screenshot, we can see that we have the ability  to Release, Archive, and more:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以查看已发布、未发布和归档的版本。我们还有测试版本。如果需要，我们也可以创建另一个版本。在下方的截图中，我们可以看到我们可以发布、归档等操作：
- en: '![](img/00095.jpeg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00095.jpeg)'
- en: 'If we go back to our Backlog, we can see that if we click on the VERSIONS tab
    on the left, as we can see in the following screenshot, we actually have our test
    version. We can see the number of Issues, Completed, Unestimated, and more:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们回到待办事项列表，可以看到，如果我们点击左侧的版本标签，就如下面的截图所示，我们实际上有了我们的测试版本。我们可以看到问题的数量、已完成、未估算等：
- en: '![](img/00096.jpeg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00096.jpeg)'
- en: 'We can actually take two stories and drag them in. If we do that, we can see
    in the following screenshot that these stories are now a part of the test version:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们实际上可以将两个故事拖入。如果这样做，我们可以在下面的截图中看到这些故事现在是测试版本的一部分：
- en: '![](img/00097.jpeg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00097.jpeg)'
- en: 'If we go under Releases again, we can take a look at the version. We can see
    in the following screenshot that there are 2 issues in this version, the two that
    we added, and there are 0 in Issues Done, 0 in In Progress, and 2 issues in To
    Do. Once we''re done with this, we can actually hit Release and release this item:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们再次进入发布部分，我们可以查看版本。我们可以在下面的截图中看到，这个版本中有 2 个问题，这两个问题是我们添加的，并且在已完成的问题数为 0，正在进行的问题数为
    0，待办事项中有 2 个问题。完成后，我们可以点击发布，发布这个项目：
- en: '![](img/00098.jpeg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00098.jpeg)'
- en: 'We will go back to the Backlog and we''ll put the other three stories into VERSIONS.
    This means that we now have five issues. We''ll go back to Releases and then we''ll
    go ahead and release our version:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将返回待办事项列表，并将其他三个故事放入版本中。这意味着我们现在有五个问题。我们会返回发布部分，然后继续发布我们的版本：
- en: '![](img/00099.jpeg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00099.jpeg)'
- en: 'As we can see in the preceding screenshot, we''ve released the items, we can
    see the item in progress, and we can see that some are in the to do list. If we
    go to our Release notes, then we can see what was contained within our version:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的截图所示，我们已经发布了这些项目，我们可以看到正在进行中的项目，也可以看到一些在待办事项列表中。如果我们进入我们的发布说明，就可以看到版本中包含了哪些内容：
- en: '![](img/00100.jpeg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00100.jpeg)'
- en: Release notes
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 发布说明
- en: Burndown report
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 燃尽图报告
- en: We're going to talk about the burndown report. We've spent a little time previously
    looking at the burndown report in regards to how we use it during running a Sprint
    iteration, and how we use it with our team. But in this section, we're going to
    talk more specifically about the report itself and how we read it, and then what
    kinds of data we can use for a burndown report.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们要谈论的是燃尽图报告。我们之前花了一些时间讨论了在运行 Sprint 迭代过程中如何使用燃尽图报告，以及如何与团队一起使用它。但在本节中，我们将更具体地讨论报告本身以及如何读取报告，然后讨论我们可以为燃尽图报告使用哪些数据。
- en: As we already know, burndown is used to measure progress within an iteration
    and helps us understand whether we are on track or off track from our ideal state.
    In a burndown, the vertical axis represents the total amount of work that exists
    inside of that iteration, and the horizontal axis represents time.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们已经知道的，燃尽图用于衡量迭代中的进展，并帮助我们理解我们是否在理想状态下按计划进行。在燃尽图中，纵轴表示该迭代中存在的工作总量，横轴表示时间。
- en: Burndowns tell stories. The more we look at them, the more we understand what
    may or may not have happened during an iteration, and we get pretty good at telling
    the story from looking at those burndowns. In a burndown, we can burn down all
    kinds of things, so we can burn down points, we can burn down hours, we can burn
    down risks, and there's other things too.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 燃尽图讲述了故事。我们越是查看它们，就越能理解迭代过程中可能发生或没有发生的事情，通过查看这些燃尽图，我们能相当擅长讲述故事。在燃尽图中，我们可以燃尽各种内容，我们可以燃尽点数，我们可以燃尽小时数，我们可以燃尽风险，还有其他内容。
- en: Burndown example 1
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 燃尽图示例 1
- en: 'We''ll now take a look at how to set these things up in JIRA. Let''s look at
    this first example:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看一下如何在 JIRA 中设置这些内容。让我们先看这个第一个示例：
- en: '![](img/00101.jpeg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00101.jpeg)'
- en: Burndown example 1
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 燃尽图示例 1
- en: First of all, we can see on the vertical axis that we have **STORY POINTS**.
    In this iteration, we've got about 36 story points at the beginning of this Sprint.
    We can see at the end that we actually want to burn down two 0 story points, so
    ideally we're handling all of the work that was committed to in this iteration.
    On the bottom, we can see that we have **TIME**. As we can see, this would be
    a two-week Sprint, and we can see that as we go through time, the ideas that we
    burn down makes the story points go down to zero. The gray line represents the
    **Ideal** scenario, so, assuming that the work is being sorted through correctly,
    we want to be close to that gray line, as this would show the pattern that we're
    looking for. The gray bars in the preceding graph, on the other hand, represent
    a **Weekend**, or a time that the team is not working, and so we can see that
    they're flat because ideally we're not working on the weekends. We can also see
    that there's a blue check box in the upper right-hand side that says **Show Non-Working
    Days**. We can uncheck that and get rid of those weekends if we don't want to
    look at them.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们可以看到纵轴上标注的是**故事点**（STORY POINTS）。在这个迭代中，我们在本次 Sprint 开始时有大约 36 个故事点。我们可以看到，最终我们希望将故事点燃尽为零，因此理想情况下，我们会处理本次迭代中所有承诺的工作。底部显示的是**时间**（TIME）。如图所示，这是一个为期两周的
    Sprint，随着时间的推移，我们燃尽的任务使得故事点数减少到零。灰色线代表**理想**（Ideal）情况，因此假设工作进展顺利，我们希望接近这条灰色线，这样可以显示我们期望的模式。前面图表中的灰色条形图则代表**周末**，即团队没有工作的时间，因此我们看到它们是平的，因为理想情况下我们周末不工作。我们还可以看到右上角有一个蓝色复选框，显示的是**显示非工作日**（Show
    Non-Working Days）。如果我们不想查看周末，可以取消勾选，去掉周末的显示。
- en: Burndown example 2
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 燃尽示例 2
- en: 'We''ll be talking about how burndowns can tell us a story about the Sprint.
    Let''s take a look at the following Burndown example:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将讨论燃尽图如何讲述 Sprint 的故事。让我们来看一下以下的燃尽示例：
- en: '![](img/00102.jpeg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00102.jpeg)'
- en: Burndown example 2
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 燃尽示例 2
- en: One of the things that we want to keep an eye on, as we can see at the beginning
    of this particular Sprint, is that we started with 25 story points, and we didn't
    quite burndown to zero. As we can see in the preceding screenshot, there's a little
    hump in red, and this hump is caused by work being added to the Sprint once it's
    already been started.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要特别留意的事情之一是，如图所示，在本次 Sprint 的开始时，我们从 25 个故事点开始，最终并没有燃尽到零。如前面截图所示，有一个红色的小峰值，这个峰值是由于
    Sprint 开始后又增加了工作量。
- en: Burndown report
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 燃尽报告
- en: 'Let''s take a look at JIRA—we want to have a look at a couple of things. First
    of all, the way to get to a burndown is to go to Reports. Burndown Chart is the
    first item that we''ll see, and this is where we can get to our burndown:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下 JIRA——我们想要查看几个方面。首先，获取燃尽图的方法是进入报告（Reports）。燃尽图是我们首先会看到的项目，这里就是我们可以查看燃尽图的地方：
- en: '![](img/00103.jpeg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00103.jpeg)'
- en: All reports
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 所有报告
- en: 'The other thing we want to talk a little bit about is burning down other values.
    If we go back to our Backlog in the upper right corner, we can see that we have
    our Board settings, so we''ll click that, and then under our SETTINGS, we''ve
    got Estimation:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接下来想讨论的是燃尽其他值。如果我们回到右上角的待办事项列表（Backlog），可以看到我们的看板设置（Board settings），点击它后，在设置（SETTINGS）中我们会看到估算（Estimation）：
- en: '![](img/00104.jpeg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00104.jpeg)'
- en: And we can see in the preceding screenshot, we're estimating in story points,
    but we've also got the ability to estimate in original time as well. Then, we
    can use this time tracking so that instead of seeing story points on that vertical
    axis, we'll actually see hours, and so we can burndown hours. As we move through
    the Sprint items, let's say we've got an item that started with 10 hours, we can
    then update that value to be, say, 8 hours or 6 hours long, and it will actually
    burn down the amount of hours as we move through the Sprint.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，我们是以故事点为单位进行估算的，但我们也有能力按原始时间进行估算。然后，我们可以使用时间跟踪，这样我们在纵轴上看到的就不是故事点，而是小时数，因此我们可以燃尽小时数。当我们在
    Sprint 中推进时，假设某个任务的初始时间为 10 小时，我们可以将该值更新为例如 8 小时或 6 小时，它将随着 Sprint 的进行而减少相应的小时数。
- en: Sprint report
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Sprint 报告
- en: In this section, we're going to talk about the Sprint report. We'll talk about
    what it is, and we'll talk about how to read it. In the Sprint report, there's
    a summary of the Sprint iteration. It's going to show us the burndown, the work
    that's been completed, the work that wasn't completed, and any work that was added
    and removed during the iteration.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将讨论Sprint报告。我们会讲解它是什么，以及如何解读它。在Sprint报告中，会有Sprint迭代的总结。它会展示我们的燃尽图、已完成的工作、未完成的工作，以及在迭代过程中新增和移除的任务。
- en: 'Let''s take a look at JIRA, and get more information about a Sprint report.
    Do we remember the demo project that we used? For going into reports, we can click
    on Reports on the left, and then we can take a look at our Sprint report:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下JIRA，获取更多Sprint报告的信息。还记得我们使用的演示项目吗？要进入报告，我们可以点击左侧的Reports，然后查看我们的Sprint报告：
- en: '![](img/00105.jpeg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00105.jpeg)'
- en: Sprint report
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Sprint报告
- en: Keep in mind that our burndown is not going to be beautiful because this was
    a one-day Sprint. Normally, the burndown would be more appropriate based on the
    iteration length of our we Sprint. But let's pay attention to the bottom. As we
    can see in the preceding screenshot, we've got the Completed Issues (items that
    were completed during this Sprint). If we look at any issues that were added after
    the Sprint started, we'll notice that they have an asterisk by them, which allows
    us to see any items that came in that were not part of the original commitment.
    We can also see items that were not completed, so SP-7 was not completed during
    this Sprint. We can also see any items that were removed from the Sprint. In total,
    we've got completed items, we've got added items, we've got removed items, and
    then anything not completed. Of course, we also have a Sprint name and we've got
    the date range for that Sprint as well.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，我们的燃尽图不会很完美，因为这是一个为期一天的Sprint。通常，燃尽图会根据我们Sprint的迭代长度更为合适。但让我们关注底部。正如前面截图所示，我们有已完成的事项（在此Sprint中完成的任务）。如果我们查看在Sprint开始后新增的任务，会注意到它们旁边有一个星号，这样我们就可以看到那些不属于原始承诺的任务。我们还可以看到未完成的任务，因此SP-7在本次Sprint中没有完成。我们还可以看到从Sprint中移除的任务。总的来说，我们有已完成的任务、有新增的任务、有移除的任务，以及任何未完成的任务。当然，我们还可以看到Sprint的名称以及该Sprint的日期范围。
- en: Velocity chart
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 速度图
- en: In this section, we're going to talk about the velocity chart. The velocity
    chart is very valuable. First, we'll talk about what it is, how to read it, and
    then we're going to talk about how to use our past velocity to plan our future
    commitments.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将讨论速度图。速度图非常有价值。首先，我们会讲解它是什么，如何解读它，然后我们将讨论如何利用我们过去的速度来规划未来的承诺。
- en: Velocity chart example
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 速度图示例
- en: 'Let''s take a look at an example of a velocity chart:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一个速度图的例子：
- en: '![](img/00106.jpeg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00106.jpeg)'
- en: Velocity chart
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 速度图
- en: To orient us to the preceding chart, let's take a look at the different elements.
    The gray bars represent what we've committed to in our Sprint, and we can see
    that this is measured in **Story Points**. In this example, we can see that in
    **Sprint 3**, we've actually committed to **25** story points. The green bar represents
    what people created, and so we've completed **25** story points, and we've met
    **100** percent of our commitment. That's great! We can also see some examples
    where the gray bar is lower than the green bar, which means we've committed, but
    we've actually completed even more than we committed, which is even better.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让我们理解前面的图表，我们来看看不同的元素。灰色的条形表示我们在Sprint中承诺的内容，可以看到这是以**故事点（Story Points）**为单位来衡量的。在这个例子中，我们可以看到在**Sprint
    3**中，我们实际承诺了**25**个故事点。绿色的条形表示团队实际完成的工作，因此我们完成了**25**个故事点，达成了**100**%的承诺。这太棒了！我们还可以看到一些例子，其中灰色条形低于绿色条形，这意味着我们承诺了某些任务，但实际上完成的比承诺的还要多，这更好。
- en: If we look at **Sprint 5**, it doesn't have a commitment, so there may have
    been some sort of data problem there, or there was no commitment and the Sprint
    was started without a commitment in place, which means we would probably see a
    burn up when Sprint work was added after the beginning of the iteration. We have
    already talked about reports telling a story; this report tells a different story,
    which is interesting. We can see that our velocity is actually dropping, which
    would definitely be a cause for alarm and it'd be something to talk about with
    our Scrum master or with the team if we're looking at this report. It's important
    to get some information about what's going on and use this to gather some knowledge
    about what's going on with this project. That was the velocity chart.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们看**第5个冲刺**，它没有承诺，因此可能存在某种数据问题，或者没有承诺而冲刺在没有承诺的情况下开始，这意味着在冲刺工作在迭代开始后添加时，我们可能会看到一个燃起图。我们已经谈过报告讲述一个故事；这个报告讲述了一个不同的故事，这很有趣。我们可以看到我们的速度实际上在下降，这无疑会引起警觉，如果我们在查看这个报告时，这将是需要和我们的Scrum
    Master或团队讨论的事情。了解正在发生的事情并利用此来获取项目的相关信息是非常重要的。这是速度图。
- en: Release and epic burndowns
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发布和史诗燃尽图
- en: In this section, we're going to talk about release and epic burndowns, how important
    they are, and how we can use them to give us some insight into how things are
    going. We're going to learn about what release and epic burndowns are, how to
    read these burndown reports, and how to use these reports for forecasting.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论发布和史诗燃尽图，它们的重要性，以及我们如何使用它们来深入了解事情的进展。我们将了解发布和史诗燃尽图是什么，如何阅读这些燃尽报告，以及如何使用这些报告进行预测。
- en: Release burndown example
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发布燃尽图示例
- en: We're going to show an example of a release burndown.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将展示一个发布燃尽图的示例。
- en: Keep in mind that it releases a version. Essentially, it's a version that's
    been deployed. An epic is also a container of work.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，它发布的是一个版本。本质上，它是一个已经部署的版本。一个史诗也是一个工作容器。
- en: Recall to our backlog. A release is generally larger than an epic, so an epic
    would be a large story that spans multiple Sprints, but the same concepts apply,
    and so when we're looking at an epic burndown report, it's going to be the same
    as a release burndown report, but probably smaller. However it will allow us to
    project when that epic might be completed.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 回顾我们的待办事项。发布通常比史诗大，因此一个史诗是一个跨越多个冲刺的大故事，但相同的概念适用，所以当我们查看史诗燃尽图报告时，它将与发布燃尽图报告相同，但可能会更小。然而，它将帮助我们预测这个史诗可能完成的时间。
- en: 'Let''s take a look at this release burndown. We want to familiarize it with
    the different elements of this report:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下这个发布燃尽图。我们希望熟悉报告中的不同元素：
- en: '![](img/00107.jpeg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00107.jpeg)'
- en: Release burndown example
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 发布燃尽图示例
- en: First of all, what we're seeing in the first column is our estimate of the work
    that's contained within this version, which will eventually be our release. We
    can see that it has **184** points. The thing that's interesting about this report,
    in this specific example, is that we have **28%** of the work that's unestimated,
    which means that it's hidden. There's **20%** of the issues that are contained
    within that do not have story point estimates, which means that our original scope
    is actually larger than the **184**, but we don't have that work sized, which
    means that that would be very important to go and make sure that all of the work
    is sized so that it's all contained within our forecast right away. As we said
    before, those **184** points represent our original scope, and so that medium
    blue bar represents the original scope of the version at the time of creation.
    The dark blue in the preceding example, plus **32** points from **Sprint 2**,
    represents the new scope. This is work that was added in this iteration to this
    version and is now part of this release. We can see that the green bar represents
    work that's been completed, so in **Sprint 2**, we finished **46** points of the
    original scope and added **32** points. We still have **128** points of the original
    scope remaining. Given this, we can see that we are starting to establish a velocity.
    We know that this team's velocity is **45** points per Sprint, and, based on that,
    we can see the dashed line and where we are today. We know that we have **50**
    story points remaining in the scope of this version. This tells us that we've
    got just over a Sprint worth of work, so essentially two Sprints remains. If our
    two Sprints are two weeks each, then we can see that we have essentially one month
    remaining before this version will be available for release, and that gives us
    the ability to forecast.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们在第一列中看到的是我们对该版本中包含的工作的估算，这最终将成为我们的发布版本。我们可以看到它有**184**个点。这个报告中有趣的地方在于，在这个具体的示例中，我们有**28%**的工作是未估算的，这意味着它是隐藏的。报告中有**20%**的问题没有故事点估算，这意味着我们的原始范围实际上大于**184**，但我们没有对这些工作进行大小估算，因此确保所有工作都被估算并包含在我们的预测中是非常重要的。如前所述，**184**个点代表了我们的原始范围，因此那个中蓝色的条形图代表了在创建版本时的原始范围。前面的深蓝色部分，再加上**32**个点来自**Sprint
    2**，代表了新的范围。这是本次迭代中新增的工作，现在是该发布的一部分。我们可以看到绿色的条形图代表了已完成的工作，因此在**Sprint 2**中，我们完成了原始范围中的**46**个点，并新增了**32**个点。我们仍然剩下**128**个原始范围的点。根据这一点，我们可以看到我们开始建立一个速度指标。我们知道该团队的速度是每个Sprint**45**个点，基于此，我们可以看到虚线和当前所在的位置。我们知道我们在该版本的范围内还有**50**个故事点剩余。这告诉我们，我们大约还有一个Sprint的工作量，基本上剩下两个Sprint。如果每个Sprint是两周的话，那么我们可以看到在这个版本可以发布之前，我们大约还有一个月的时间，这让我们能够进行预测。
- en: Version and epic reports
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 版本和史诗报告
- en: In this section about reporting, we're going to talk about version and epic
    reports. In the previous section, we talked about release and epic burndowns,
    and we're going to get a similar kind of view in this report, but it's a different
    look, with slightly different information. In this section, we're going to learn
    about what version and epic reports are. Again, they're very similar.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节关于报告的内容中，我们将讨论版本报告和史诗报告。在前一节中，我们讨论了发布和史诗燃尽图，而在本节报告中我们将获得类似的视角，但它有所不同，包含稍有不同的信息。在这一节中，我们将了解版本报告和史诗报告是什么。再次强调，它们非常相似。
- en: A version report is large and contains a larger piece of value and an epic is
    small. It is basically the same kind of report, but it allows us to look at a
    specific version or a specific epic, and then we get some sort of forecast as
    to when that item will be completed. We'll look at how to read a version report,
    and then we'll also look at how we can use these reports to provide a forecast.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 版本报告是较大的，包含更多的价值，而史诗（epic）则较小。它基本上是相同类型的报告，但它允许我们查看特定的版本或特定的史诗，然后我们可以获得某种预测，了解该项目何时完成。我们将学习如何阅读版本报告，并且还会学习如何利用这些报告进行预测。
- en: Version report example
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 版本报告示例
- en: 'We''re going to look at an example version report, as follows:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看一个版本报告的示例，如下所示：
- en: '![](img/00108.jpeg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00108.jpeg)'
- en: Version report
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 版本报告
- en: As we can see in the preceding figure, we've got the work in the vertical axis
    represented in **STORY POINTS**. We can see that there's actually quite a few
    story points in the preceding report, because usually a version has a lot of functionality
    built into it. We can also see that the horizontal axis represents **TIME**. There's
    a red line in the report which represents the amount of unestimated work as it
    goes up and down, as we move through this version. We can see from the blue line
    that this version started in January, we can see **Today**, which is represented
    by a dotted line, and we can see that we have a projected completion date. Some
    other things to note is the completed date is a cone shape, and that there's an
    optimistic date a little bit to the left of that projected completion date, and
    a little bit to the right of that is a pessimistic date.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，我们可以看到纵轴上表示的是**故事点（STORY POINTS）**。从报告中可以看到，实际有相当多的故事点，因为通常一个版本会有很多功能。我们还可以看到横轴表示的是**时间（TIME）**。报告中有一条红线，表示未估算的工作量，随着版本的进展它会上下波动。我们可以从蓝线上看到，这个版本从一月开始，看到今天的日期（由虚线表示），同时还可以看到预计的完成日期。值得注意的是，完成日期呈锥形分布，乐观日期位于预计完成日期的左侧，而悲观日期则位于其右侧。
- en: We actually have an optimistic and pessimistic release date and projected based
    on the actual velocity of the team and the work that's included inside of that
    version. This value is actually dynamically generated as we move through time.
    If we remove the scope from this version, this will pull the date in and it will
    actually deliver earlier, and if the team slows down or if we add more scope,
    then that date will get pushed out. The closer we get to the actual release date
    (the projected completion date), the tighter that cone gets until there's no more
    cone left at all. When we first started in February or March, we'd have a much
    broader wider cone, given the fact that there's a lot of variables that could
    affect that completed date. This gives us a useful ability to look at this version
    over time, and figure out what that completion date might look like, and do some
    things very far ahead that would allow us to affect that. Should we bring the
    team together into one room, should we add more people, more to resources to the
    project, should we change the scope, and so on, we've got lots of choices assuming
    we've got a good view of what's coming and what lies ahead.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们实际上有一个乐观和悲观的发布日期，基于团队的实际速度和该版本中包含的工作来预测。这个值实际上是动态生成的，随着时间的推移不断更新。如果我们从这个版本中移除一些范围，它会把日期提前，实际交付时间会更早；如果团队的进度放缓，或者我们增加了更多的工作范围，那么发布日期就会推迟。随着我们越来越接近实际的发布日期（预计完成日期），这个范围会变得越来越窄，直到完全没有范围可言。当我们在二月或三月刚开始时，由于有很多变量可能影响完成日期，我们的预测范围会更宽一些。这让我们能够有用地观察这个版本的进展，并推测完成日期会是什么样子，同时做出一些提前的决策，从而影响进度。比如，我们是否应该将团队聚集到一个房间里，是否需要增加更多人员或资源，是否需要改变工作范围等等，我们有很多选择，前提是我们对未来的进展有清晰的认识。
- en: Summary
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: That brings us to the end of this chapter. In this chapter, we learned about
    what versions and releases are, what iteration release epic burndown reports have
    and how we should read them, what a Sprint report is, the data that's inside a
    Sprint report and how we can read it, what a velocity report looks like and why
    it's important for planning future Sprints, what version and epic reports are
    and how to read them, and then we also talked about version and epic reports and
    used those to provide forecasts for when our version will be completed.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 本章结束了。在本章中，我们了解了版本和发布的概念，了解了迭代发布的史诗燃尽报告以及如何阅读它们，了解了冲刺报告的内容以及如何解读，了解了速度报告是什么以及为什么它对未来冲刺的规划至关重要，还讨论了版本和史诗报告并使用它们来预测版本完成的时间。
- en: In the next chapter, we're going to talk about searching and filtering.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论如何进行搜索和过滤。
